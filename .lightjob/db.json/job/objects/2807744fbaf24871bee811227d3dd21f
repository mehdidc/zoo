{"content": {"hp_model": {"f0": 16, "f1": 64, "f2": 32, "f3": 64, "nonlin": "very_leaky_rectify", "nbg1": 4, "nbg3": 3, "nbg2": 2, "fs0": 3, "fs1": 3, "fs2": 3, "fs3": 3, "pg2": 2, "pg3": 2, "pg1": 2}, "accuracy_valid_std": [0.011869421918326949, 0.013388990152424698, 0.016388941384110584, 0.016617275409597794, 0.018896012787419262, 0.010766880274913777, 0.007258566952927245, 0.013650603715382003, 0.011656613926934024, 0.011538953566641816, 0.008244305430343104, 0.008808260897362823, 0.008260224027203422, 0.003327136080857965, 0.00928750538728069, 0.007941683723462824, 0.00823520517986876, 0.013038393123236508, 0.011119625626134236, 0.00922729872401617, 0.011725491752234155, 0.00842555863073486, 0.009641082374478815, 0.010327644486368522, 0.009229115746717283, 0.011004397886877678, 0.011482818906517643, 0.011722618048296576, 0.008888456614659155, 0.01032955389233545, 0.009987186459769301, 0.0077938383553828455, 0.007499604120575284, 0.010949652211969868, 0.013005278158465925, 0.00688983247046324, 0.00920211926391317, 0.007512760690360555, 0.00878693145995641, 0.008138415956016352, 0.010394978545837444, 0.007594932562683874, 0.00907108804006971, 0.010616206648355523, 0.011050761666293903, 0.00791506213314284, 0.011704599371201033, 0.006974110128951233, 0.014017179965754354, 0.010403328547870074, 0.007708647202064507, 0.009439031102533822, 0.006971889084197599, 0.01127829150763524, 0.009920879624714277, 0.007600842284551852, 0.009387010213760618, 0.007114523112383787, 0.007007250415662854, 0.01033286025125981, 0.006639252397082053, 0.00711827994594019, 0.008087650918322005, 0.006895535611770843, 0.010455451142841144, 0.009944100961881084, 0.009401528555159558, 0.00983470505515608, 0.008891986486119132, 0.008255044872589974, 0.010334920746794476, 0.007175694499106864, 0.008842497420557704, 0.008734870219181665, 0.00792021631287954, 0.008049914572240838, 0.011714862487476425, 0.007977314118874214, 0.00826474893763467, 0.008082257207355491, 0.007697739906967848, 0.006914593965158821, 0.007320803830299041, 0.009360086098263444, 0.008368423303266887, 0.007867519973838645, 0.00552960599960372, 0.007516938903427667, 0.011221978527242757, 0.007792276667034984, 0.010827316241987562, 0.00990223372693521, 0.011380525728660136, 0.009842049930389838, 0.005332407657774892, 0.009890011933279893, 0.006664380347695569, 0.0125962015655633, 0.010831112417455425, 0.01058247750403545, 0.009043787975265234, 0.0082047119951244, 0.009460369508801967, 0.007944557743913012, 0.007801971756080395, 0.010850784454708225, 0.010469335138833512, 0.0081607154007666, 0.004502773955339425, 0.007187517911939526, 0.008495756378444425, 0.008640171383351825, 0.007742988532132099, 0.010268651748647512, 0.007293997644755548, 0.010765911906504989, 0.010680980285064957, 0.009681989958457834, 0.008747535977074374, 0.011474394852751797, 0.014012501255244392, 0.008412511222654004, 0.0073781969263342385, 0.010842790214523315, 0.006436136283857896, 0.008347191512149455, 0.008280961539767134, 0.006472297399462649, 0.007245373178708817, 0.009088065336129958, 0.0063238728848047055, 0.006785904105837924, 0.008848788722713379, 0.007177401497997849, 0.0057846936376528, 0.007981564595261214, 0.010561198312520143, 0.006896238233885574, 0.007543544982319438, 0.0062324125786065755, 0.004949272947115472, 0.007275766675104575, 0.00858850560861527, 0.009752169656271518, 0.008036921293366101, 0.007327952941729326, 0.007624446571798402, 0.007308971111975769, 0.012575318047710582, 0.005356556086788073, 0.006813515813382224, 0.006352567960225245, 0.010032095396211943, 0.008942781342010571, 0.00894170650502997, 0.01131110839723579, 0.009524731051437824, 0.008639589558433169, 0.005682759149228403, 0.006943326402761779, 0.009714321354388673, 0.008305459859797604, 0.00799051193041711, 0.008028779123834704, 0.006061423944739034, 0.008319483412555034, 0.008973858253180124, 0.00809255284898587, 0.011251322978010894, 0.009678038399730174, 0.01431019062357328, 0.007536223678603221, 0.006932757733875215, 0.005945008250484833, 0.006529945365579896, 0.006344097702409954, 0.010716222682862186, 0.012566851099685701, 0.008299951514399457, 0.008990993523764805, 0.013759245740400505, 0.007255009179407439, 0.009381717732364141, 0.008029674055431996, 0.00698296416658348, 0.00827352127047428, 0.008223788877530875, 0.004904134893941747, 0.009623365286280898, 0.008894529616396078, 0.011170322612585272, 0.0078871535616056, 0.010089791896127551, 0.006091168878974504, 0.008445530237157545, 0.011522553734934306, 0.009679808354049397, 0.009436607208002436, 0.004927161708303809, 0.006672455871116844, 0.0042566150390857095, 0.006065442204250695, 0.005553504362575944, 0.006918427630513428, 0.007565081682770764, 0.008307455597972808, 0.00944531197382758, 0.006738454822785789, 0.008644027861984028, 0.009268923936080706, 0.00749226196443093, 0.011020618343769264, 0.009496451728054271, 0.009815507622472321, 0.010453654845441968, 0.011158987580987285, 0.01049311967040107, 0.0088167823214061, 0.010259308038948147, 0.008016187108458634, 0.006861655790136125, 0.009077221982780739, 0.011031914181018941, 0.008782290512334775, 0.008103619931382419, 0.008830469674398928, 0.007889054557483158, 0.008020143107639346, 0.009101154589509462, 0.010759833003418331, 0.006554108326122247, 0.008931913575109808, 0.006217496897401665, 0.007876272667349919, 0.007778154663971581, 0.0059820712516795455, 0.005417881534176302, 0.009478646064853056, 0.012190826198499382, 0.0114654197800477, 0.009407942640106397, 0.008334866186210675, 0.006502641906671084, 0.012007734075107678, 0.008641884585132946], "moving_avg_accuracy_train": [0.06518365431201549, 0.1336988683554817, 0.20037024660275926, 0.26326170901681883, 0.3216030923037213, 0.3753146561988106, 0.42512419726382245, 0.47059667019847745, 0.5126191858336684, 0.5511418250899103, 0.586139577768027, 0.6185373517187991, 0.6476441589518657, 0.675153922441369, 0.7002240992783044, 0.7229662227922422, 0.7438411070940903, 0.7627864328407076, 0.7804788589376354, 0.7964649656380025, 0.8111546228671148, 0.824740362736411, 0.8369326513866348, 0.8482614589396933, 0.8586828170255135, 0.8680319205146843, 0.8766413180084817, 0.8846455781707656, 0.8922446515656215, 0.8992303740936293, 0.9053407409616749, 0.9112097337548116, 0.9164244340019772, 0.9216315221113309, 0.9254391033062056, 0.9297307375434606, 0.933453807574875, 0.9370788660650342, 0.9396857988395293, 0.9430736329056041, 0.9459319853138716, 0.948776508843208, 0.9510647178529902, 0.9534377847581674, 0.9548644827323783, 0.9566507430520254, 0.9584025005170793, 0.9599326874058937, 0.9615516350331984, 0.9630365536346681, 0.9645612453319249, 0.9658893621297124, 0.9669799995024739, 0.9682336515974923, 0.9689155099115803, 0.9701336850359169, 0.9708720418287907, 0.9717457902864155, 0.9722067512114008, 0.9724796738200503, 0.973474074182139, 0.9742201889353906, 0.9745894228680789, 0.9756423853431758, 0.9763552475898198, 0.9765344073892542, 0.9772256409420416, 0.9779825016240464, 0.9783312520557264, 0.9789891773704102, 0.9792093584417395, 0.9796958038094981, 0.9801405440380905, 0.9805292205485948, 0.980999937146144, 0.9816142082375003, 0.982206579749483, 0.9824374087162105, 0.9827870609612839, 0.983183164239002, 0.9831723197258622, 0.9833415240247322, 0.9835031084889533, 0.9836462093579428, 0.983984191435253, 0.9843652133620027, 0.9844871718615351, 0.9847155531492189, 0.9845141592176487, 0.9849141918816166, 0.9851161472089588, 0.9855001228523579, 0.9855829591159408, 0.9858110797210504, 0.9860558076489545, 0.9861854180293156, 0.9865114028621352, 0.9866188494045486, 0.9867574760689295, 0.9866006447191886, 0.9867152628734694, 0.9870974010206464, 0.9870112088721624, 0.9872475310278125, 0.9877718630060113, 0.9877624920316376, 0.9878539674558732, 0.988138547235295, 0.9885155407260513, 0.9888247160796643, 0.9888495687264967, 0.9890903919502848, 0.9893141803957602, 0.9891295792454884, 0.9893378232173958, 0.9893089318551893, 0.9893643098375366, 0.9893769476406971, 0.9896952773552172, 0.9898353257721042, 0.989624150672284, 0.9897084606419697, 0.9897471732825531, 0.9896774190114684, 0.9896913700782064, 0.9897945347442045, 0.9897479100638502, 0.9899081997491411, 0.9896922065957017, 0.9898836432647121, 0.9899931212001457, 0.9901406236623109, 0.9905010962663179, 0.9907185647646861, 0.9906516527441976, 0.9909192058102633, 0.9908671429661786, 0.9907132574636268, 0.9908979201470353, 0.990954870616874, 0.9911199862337581, 0.9907083736211334, 0.9908331429173811, 0.9910547533268703, 0.9910587820489545, 0.9914018796250206, 0.9913898329565847, 0.9916161921823825, 0.9914897083058294, 0.9916641912693125, 0.9915562671186179, 0.9916240407043752, 0.9914246923625275, 0.9912871315334361, 0.991456259488435, 0.9915247692907911, 0.9914679176212635, 0.9916049800258038, 0.9916470280791942, 0.9917662875843977, 0.991801469428348, 0.9920423604319417, 0.9922383080935279, 0.9920798756092027, 0.9923185386804345, 0.9923891762183527, 0.9923736949429552, 0.9925108604188978, 0.992699521660369, 0.9925090268586733, 0.9926349842918535, 0.9927972101555345, 0.9930362914828659, 0.9929514844322167, 0.9928078008687938, 0.9925946721581141, 0.9925424012958927, 0.9926535036877596, 0.9927814697237918, 0.9929639242764219, 0.9927258826297413, 0.992860453517976, 0.992804928105501, 0.9929641465294932, 0.9931283334015532, 0.9933528314971214, 0.9931597486807888, 0.9933275907769956, 0.9932415195338291, 0.9932873603995216, 0.993337881725064, 0.9934902717144716, 0.9935367779501858, 0.9932694248194807, 0.9934728383268275, 0.9934745849251156, 0.9936783727123659, 0.9937921714518806, 0.9939177697079015, 0.9939890275573863, 0.9941321065349902, 0.9942214221827094, 0.9941715979323232, 0.9941685366879097, 0.9940774619619943, 0.9941768563158133, 0.9942267476556699, 0.9941693072651029, 0.9939129978183545, 0.9938753066674714, 0.9938695027103034, 0.9940222811214436, 0.9940597642438415, 0.9941818186599427, 0.9940428767118148, 0.9942456388918237, 0.9941677802848027, 0.99422551862537, 0.9940822427295181, 0.994167280211365, 0.9941948776735712, 0.9943708861109944, 0.9943967602225324, 0.99445259900625, 0.9945075763068524, 0.9943245049476234, 0.9941085153528703, 0.9941931425747352, 0.9941624223268132, 0.9942835836274929, 0.9943693773100093, 0.9944395440802081, 0.9946609484877096, 0.9947577977603856, 0.9946775513915085, 0.9947471997857187, 0.9947632722178611, 0.994852286363969, 0.9947766141252281, 0.9947736853746655, 0.9950150098800652, 0.9950276248885057, 0.995050568091331, 0.9951269844964835, 0.9950818269694541], "dataset": "Cifar10", "nb_examples_train": 42500, "seed": 701542665, "moving_var_accuracy_train": [0.03824017910521503, 0.07666517219349143, 0.10900430907066633, 0.13370190256481135, 0.15096516534279358, 0.16183303767302057, 0.16797864733568246, 0.16979049475525065, 0.16870447166251445, 0.16518996811366193, 0.15969455553496342, 0.15317164179415502, 0.1454793336604656, 0.13774248407965473, 0.12962485957140618, 0.12131721125157437, 0.11310733727795684, 0.10502693185897008, 0.09734143614383034, 0.08990729299636702, 0.08285863796230962, 0.07623392511624434, 0.06994839972739329, 0.0641086366798221, 0.058675215351015914, 0.053594345440375335, 0.04890200642319364, 0.04458841940758401, 0.040649290714969276, 0.03702356451661719, 0.03365723731431447, 0.030601519270536035, 0.02778610523149253, 0.025251518607550438, 0.022856845817795464, 0.020736924355853337, 0.018787983174397345, 0.01702745429847129, 0.015385873755040792, 0.013950583156470023, 0.012629056447231663, 0.01143897262948903, 0.010342198470792163, 0.00935866164254097, 0.008441114682273432, 0.007625719747411997, 0.0068907656606181505, 0.006222762341788632, 0.005624075030389368, 0.005081512376627349, 0.004594283301909766, 0.004150730019775879, 0.003746362426708068, 0.003385870976215357, 0.0030514682554382395, 0.0027596769855963883, 0.0024886158238189957, 0.002246625168741912, 0.00202387501663699, 0.0018221578957260997, 0.0016488415948745895, 0.0014889676204123076, 0.001341297861644513, 0.0012171466452457211, 0.0011000055339653624, 0.0009902938646724267, 0.0008955647126256759, 0.0008111637841907909, 0.0007311420475440841, 0.000661923634266993, 0.0005961675881778389, 0.0005386804912223784, 0.0004865925869384968, 0.00043929295311300777, 0.0003973578248385813, 0.00036101800311780935, 0.00032807433887990664, 0.0002957464430988407, 0.0002672721090213198, 0.00024195697837875864, 0.00021776233897206993, 0.00019624377592766787, 0.00017685438418659977, 0.00015935324649628973, 0.000144446008807907, 0.00013130800730509287, 0.00011831107145505751, 0.00010694938642262832, 9.66194834214248e-05, 8.839777026945346e-05, 7.992506683068528e-05, 7.325949580013024e-05, 6.59953028391967e-05, 5.986412364955675e-05, 5.441673711286759e-05, 4.9126253057856974e-05, 4.517002275312736e-05, 4.075692331310374e-05, 3.685418715048969e-05, 3.339013308579458e-05, 3.0169355668831848e-05, 2.846668617369858e-05, 2.5686879334471283e-05, 2.3620824852284272e-05, 2.3733058577312873e-05, 2.1360543056028005e-05, 1.9299798529577046e-05, 1.809868953432177e-05, 1.7567937409542513e-05, 1.6671448262123984e-05, 1.5009862322402769e-05, 1.4030838516203872e-05, 1.3078486079538158e-05, 1.2077335733719537e-05, 1.1259892126869576e-05, 1.0141415311473966e-05, 9.154874268686433e-06, 8.240824268436262e-06, 8.328746105911148e-06, 7.672393526972812e-06, 7.306508479332334e-06, 6.639831170294562e-06, 5.989336070133557e-06, 5.4341933881313085e-06, 4.892525739686327e-06, 4.499059700512211e-06, 4.0687184778243245e-06, 3.893081678937703e-06, 3.923650892038177e-06, 3.861117787010861e-06, 3.5828747734309144e-06, 3.420400083191002e-06, 4.247824559028208e-06, 4.248675033168107e-06, 3.8641024962240315e-06, 4.12195403505181e-06, 3.7341534891542662e-06, 3.573864871299383e-06, 3.5233811439619456e-06, 3.200233233699434e-06, 3.1255784127804217e-06, 4.337845057347197e-06, 4.044166947187755e-06, 4.0817508148150584e-06, 3.6737218087482308e-06, 4.36579314819573e-06, 3.930519933359817e-06, 3.998614431957798e-06, 3.742736528013186e-06, 3.6424616161245883e-06, 3.383044055240541e-06, 3.086078980054054e-06, 3.1351289346252297e-06, 2.9919228764656048e-06, 2.9501689752782257e-06, 2.697394414920387e-06, 2.4567439843810403e-06, 2.3801445105882917e-06, 2.1580424086748083e-06, 2.0702436340398044e-06, 1.874359129929589e-06, 2.2091794974483625e-06, 2.3338209224334105e-06, 2.326346498994872e-06, 2.6063524032236167e-06, 2.3906241187695134e-06, 2.153718735883953e-06, 2.1076761724105223e-06, 2.217246131470716e-06, 2.322115943581776e-06, 2.232691823983913e-06, 2.246277719209006e-06, 2.536088876994911e-06, 2.3472101118535772e-06, 2.298293798249203e-06, 2.4772790442681153e-06, 2.254141327177742e-06, 2.139820867767069e-06, 2.0732165383902492e-06, 2.1655018585301037e-06, 2.458926102666683e-06, 2.3760174080427686e-06, 2.166163310113126e-06, 2.17770153794877e-06, 2.2025473447652438e-06, 2.4358871645124662e-06, 2.527827213727792e-06, 2.528583215686935e-06, 2.342399224220313e-06, 2.127071766505129e-06, 1.9373362288657488e-06, 1.9526069858240046e-06, 1.776811756884311e-06, 2.2424298496766015e-06, 2.390580359449346e-06, 2.1515497789546307e-06, 2.3101599611506984e-06, 2.195695343071658e-06, 2.118100106003861e-06, 1.951989225422345e-06, 1.941034647369811e-06, 1.818726746980241e-06, 1.6591961756210561e-06, 1.4933608990151874e-06, 1.4186762604187108e-06, 1.3657217725167586e-06, 1.2515519073991399e-06, 1.1560913028756184e-06, 1.6317329650202132e-06, 1.4813452742122008e-06, 1.333513920060247e-06, 1.410233714248955e-06, 1.2818552030063318e-06, 1.2877452071140976e-06, 1.3327144709488757e-06, 1.5694555386320135e-06, 1.4670676489541429e-06, 1.3503643278019696e-06, 1.4000797360111916e-06, 1.3251541222800124e-06, 1.1994932893339449e-06, 1.358354690798105e-06, 1.2285444485492524e-06, 1.133751731597873e-06, 1.0475790906718167e-06, 1.244457284734149e-06, 1.539875101635239e-06, 1.4503434915971106e-06, 1.3138027451289133e-06, 1.3145430176576016e-06, 1.249333719529511e-06, 1.1687107283377109e-06, 1.4930188604538978e-06, 1.428135008969462e-06, 1.34327682553437e-06, 1.2526072323254356e-06, 1.1296714167676471e-06, 1.0880159389568228e-06, 1.0307509345057365e-06, 9.27753039273888e-07, 1.359115387504737e-06, 1.22463609469585e-06, 1.1069100002292207e-06, 1.0487742029943382e-06, 9.622496029215223e-07], "duration": 268501.710138, "accuracy_train": [0.651836543120155, 0.7503357947466777, 0.8004126508282576, 0.8292848707433554, 0.8466755418858435, 0.8587187312546143, 0.8734100668489295, 0.8798489266103728, 0.8908218265503876, 0.8978455783960871, 0.901119351871078, 0.9101173172757475, 0.9096054240494648, 0.9227417938468992, 0.9258556908107235, 0.9276453344176817, 0.9317150658107235, 0.9332943645602622, 0.9397106938099853, 0.9403399259413067, 0.9433615379291252, 0.9470120215600776, 0.946663249238649, 0.9502207269172205, 0.9524750397978959, 0.9521738519172205, 0.9541258954526578, 0.9566839196313216, 0.9606363121193245, 0.9621018768456996, 0.9603340427740864, 0.9640306688930418, 0.9633567362264673, 0.968495315095515, 0.9597073340600776, 0.968355445678756, 0.9669614378576044, 0.9697043924764673, 0.9631481938099853, 0.9735641395002769, 0.9716571569882798, 0.9743772206072352, 0.97165859894103, 0.9747953869047619, 0.9677047645002769, 0.9727270859288483, 0.9741683177025655, 0.9737043694052234, 0.9761221636789406, 0.9764008210478959, 0.9782834706072352, 0.9778424133098007, 0.9767957358573275, 0.9795165204526578, 0.9750522347383721, 0.9810972611549464, 0.9775172529646549, 0.9796095264050388, 0.976355399536268, 0.9749359772978959, 0.9824236774409376, 0.9809352217146549, 0.9779125282622739, 0.9851190476190477, 0.9827710078096161, 0.9781468455841639, 0.9834467429171282, 0.9847942477620893, 0.9814700059408453, 0.9849105052025655, 0.9811909880837025, 0.9840738121193245, 0.9841432060954227, 0.9840273091431341, 0.9852363865240864, 0.9871426480597084, 0.9875379233573275, 0.9845148694167589, 0.9859339311669435, 0.9867480937384644, 0.9830747191076044, 0.9848643627145626, 0.9849573686669435, 0.9849341171788483, 0.9870260301310447, 0.9877944107027501, 0.9855847983573275, 0.9867709847383721, 0.982701613833518, 0.9885144858573275, 0.9869337451550388, 0.9889559036429494, 0.9863284854881875, 0.9878641651670359, 0.9882583590000923, 0.9873519114525655, 0.9894452663575121, 0.987585868286268, 0.9880051160483574, 0.9851891625715209, 0.9877468262619971, 0.9905366443452381, 0.9862354795358066, 0.9893744304286637, 0.9924908508098007, 0.9876781532622739, 0.9886772462739941, 0.9906997652500923, 0.9919084821428571, 0.9916072942621816, 0.9890732425479882, 0.991257800964378, 0.9913282764050388, 0.9874681688930418, 0.9912120189645626, 0.9890489095953304, 0.9898627116786637, 0.98949068786914, 0.9925602447858989, 0.9910957615240864, 0.9877235747739018, 0.99046725036914, 0.9900955870478036, 0.9890496305717055, 0.9898169296788483, 0.9907230167381875, 0.9893282879406607, 0.9913508069167589, 0.9877482682147471, 0.9916065732858066, 0.9909784226190477, 0.9914681458217978, 0.9937453497023809, 0.99267578125, 0.9900494445598007, 0.9933271834048542, 0.9903985773694168, 0.9893282879406607, 0.9925598842977114, 0.9914674248454227, 0.9926060267857143, 0.9870038601075121, 0.9919560665836102, 0.9930492470122739, 0.9910950405477114, 0.9944897578096161, 0.9912814129406607, 0.9936534252145626, 0.9903513534168512, 0.9932345379406607, 0.9905849497623662, 0.9922340029761905, 0.9896305572858989, 0.9900490840716132, 0.9929784110834257, 0.9921413575119971, 0.990956252595515, 0.9928385416666666, 0.9920254605597084, 0.9928396231312293, 0.9921181060239018, 0.9942103794642857, 0.9940018370478036, 0.9906539832502769, 0.9944665063215209, 0.9930249140596161, 0.992234363464378, 0.9937453497023809, 0.9943974728336102, 0.990794573643411, 0.9937686011904762, 0.9942572429286637, 0.9951880234288483, 0.992188220976375, 0.9915146487979882, 0.9906765137619971, 0.9920719635358989, 0.9936534252145626, 0.9939331640480805, 0.9946060152500923, 0.9905835078096161, 0.9940715915120893, 0.9923051993932264, 0.9943971123454227, 0.9946060152500923, 0.9953733143572352, 0.9914220033337948, 0.9948381696428571, 0.9924668783453304, 0.993699928190753, 0.9937925736549464, 0.99486178161914, 0.9939553340716132, 0.9908632466431341, 0.9953035598929494, 0.9934903043097084, 0.9955124627976191, 0.9948163601075121, 0.9950481540120893, 0.9946303482027501, 0.9954198173334257, 0.9950252630121816, 0.9937231796788483, 0.9941409854881875, 0.993257789428756, 0.9950714055001846, 0.994675769714378, 0.99365234375, 0.9916062127976191, 0.9935360863095238, 0.9938172670957919, 0.9953972868217055, 0.9943971123454227, 0.9952803084048542, 0.9927923991786637, 0.9960704985119048, 0.9934670528216132, 0.9947451636904762, 0.9927927596668512, 0.9949326175479882, 0.9944432548334257, 0.9959549620478036, 0.994629627226375, 0.9949551480597084, 0.9950023720122739, 0.9926768627145626, 0.9921646090000923, 0.9949547875715209, 0.993885940095515, 0.9953740353336102, 0.9951415204526578, 0.9950710450119971, 0.9966535881552234, 0.9956294412144703, 0.9939553340716132, 0.9953740353336102, 0.9949079241071429, 0.9956534136789406, 0.9940955639765596, 0.9947473266196014, 0.9971869304286637, 0.9951411599644703, 0.9952570569167589, 0.9958147321428571, 0.9946754092261905], "end": "2016-01-26 15:27:46.130000", "learning_rate_per_epoch": [0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896, 0.0004799088346771896], "accuracy_valid": [0.6461446371423193, 0.7424934111445783, 0.7891772166792168, 0.8074480539344879, 0.8242643425263554, 0.8309267342808735, 0.8359110269201807, 0.8428396201995482, 0.8493093467620482, 0.8535921027861446, 0.8541509789156627, 0.8574777626129518, 0.8578439735504518, 0.8644048851656627, 0.8635915733245482, 0.8655549934111446, 0.8702848503388554, 0.8678949195218373, 0.8688508918486446, 0.8705495811370482, 0.8744867163968373, 0.8764192512236446, 0.8758397849209337, 0.8820859610316265, 0.874232280685241, 0.8759824454066265, 0.8748117469879518, 0.8745573112763554, 0.8766428016754518, 0.8791047980986446, 0.8791959831513554, 0.8783620811370482, 0.8802343161709337, 0.8819021201995482, 0.878138530685241, 0.8813329489834337, 0.8796842644013554, 0.885340679122741, 0.8780267554593373, 0.8911500494164157, 0.8868261130459337, 0.8901117163968373, 0.8874261695218373, 0.8860010353915663, 0.8828580925263554, 0.8852494940700302, 0.8822683311370482, 0.883509624435241, 0.8868864128388554, 0.8901323065700302, 0.887049663497741, 0.8855745246611446, 0.8899690559111446, 0.8936723456325302, 0.8843023461031627, 0.891322124435241, 0.8844758918486446, 0.8897455054593373, 0.8846288474209337, 0.881260883377259, 0.8918515860316265, 0.8932046545557228, 0.890589702560241, 0.8946592032191265, 0.894495952560241, 0.8847097373870482, 0.8945165427334337, 0.8893484092620482, 0.8886468726468373, 0.8968564688441265, 0.8906911826995482, 0.8903661521084337, 0.8919633612575302, 0.8929502188441265, 0.8912103492093373, 0.895472515060241, 0.895716655685241, 0.8926751929593373, 0.8978845067771084, 0.8938650108245482, 0.889735210372741, 0.8893792945218373, 0.8914647849209337, 0.891200054122741, 0.8945165427334337, 0.8972226797816265, 0.8906102927334337, 0.9025128835655121, 0.8886880529932228, 0.8999185217432228, 0.8968167592243976, 0.895594585372741, 0.8908029579254518, 0.8955739951995482, 0.893885600997741, 0.8938150061182228, 0.8968255835843373, 0.8909250282379518, 0.893153179122741, 0.8904367469879518, 0.8922780967620482, 0.9027055487575302, 0.8956357657191265, 0.8970197195030121, 0.8988301840173193, 0.8928281485316265, 0.8911794639495482, 0.8983316076807228, 0.9000508871423193, 0.8997861563441265, 0.8999082266566265, 0.9022069724209337, 0.9010171545557228, 0.895594585372741, 0.9027673192771084, 0.8965005529932228, 0.8980065770896084, 0.8949239340173193, 0.8985963384789157, 0.896937358810241, 0.894862163497741, 0.8979551016566265, 0.8932958396084337, 0.8912103492093373, 0.8968770590173193, 0.9004788685993976, 0.8941503317959337, 0.8993184652673193, 0.8946386130459337, 0.897791850997741, 0.8999082266566265, 0.8970903143825302, 0.9003053228539157, 0.9026658391378012, 0.8963887777673193, 0.9029702795557228, 0.8924928228539157, 0.8980977621423193, 0.9037438817771084, 0.8996949712914157, 0.9025025884789157, 0.8941606268825302, 0.9015363210655121, 0.9015054358057228, 0.8983419027673193, 0.9045366034450302, 0.8968564688441265, 0.9002847326807228, 0.8977609657379518, 0.8989522543298193, 0.9006612387048193, 0.8986272237387049, 0.8950151190700302, 0.8946592032191265, 0.9013024755271084, 0.8987595891378012, 0.8947606833584337, 0.8978124411709337, 0.9006406485316265, 0.8960122717432228, 0.8984433829066265, 0.9003862128200302, 0.9022378576807228, 0.8988404791039157, 0.9059617375753012, 0.9030011648155121, 0.9007936041039157, 0.9040997976280121, 0.9061955831137049, 0.8967446936182228, 0.901402484939759, 0.9015157308923193, 0.9028379141566265, 0.9080266378012049, 0.8990949148155121, 0.8972020896084337, 0.898402202560241, 0.9004671027861446, 0.9042321630271084, 0.9022275625941265, 0.895665180252259, 0.9007936041039157, 0.8978227362575302, 0.9049028143825302, 0.9038865422628012, 0.9007318335843373, 0.8985448630459337, 0.9036115163780121, 0.9005391683923193, 0.9010274496423193, 0.8995111304593373, 0.9033776708396084, 0.9025128835655121, 0.8972226797816265, 0.9088002400225903, 0.9002538474209337, 0.8986360480986446, 0.9044351233057228, 0.9001729574548193, 0.9056970067771084, 0.9030923498682228, 0.9070088949548193, 0.9029496893825302, 0.9002641425075302, 0.9015260259789157, 0.9009862692959337, 0.9028687994164157, 0.9006406485316265, 0.8989625494164157, 0.9023599279932228, 0.9027364340173193, 0.9074059911521084, 0.9021569677146084, 0.899867046310241, 0.8995111304593373, 0.900721538497741, 0.9018113469503012, 0.9024717032191265, 0.9010171545557228, 0.9029599844691265, 0.9013833654932228, 0.9035497458584337, 0.9002126670745482, 0.9044351233057228, 0.9033159003200302, 0.8948930487575302, 0.8991963949548193, 0.9039674322289157, 0.9003053228539157, 0.9028379141566265, 0.9039571371423193, 0.9042012777673193, 0.9080060476280121, 0.9070603703878012, 0.8992772849209337, 0.8999391119164157, 0.9012818853539157, 0.9043439382530121, 0.8971609092620482, 0.8997140907379518, 0.9067235739834337, 0.9058896719691265, 0.9025937735316265, 0.9014642554593373, 0.8985654532191265], "accuracy_test": 0.6587113360969388, "start": "2016-01-23 12:52:44.420000", "epoch": [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0], "accuracy_train_last": 0.9946754092261905, "batch_size_eval": 1024, "accuracy_train_std": [0.021261795977485554, 0.019553311072276407, 0.018569873596691752, 0.020037452440591675, 0.018337723753157245, 0.01859188341761059, 0.017981426958328897, 0.017334729889441344, 0.016831717634409934, 0.015515452614896523, 0.01716593591091809, 0.016039905384324666, 0.018026446170737162, 0.015667483192115486, 0.01510402005291105, 0.01654498985776399, 0.01535863113752053, 0.015264785625122112, 0.015151447270351585, 0.015519770276810958, 0.015551122918445934, 0.013190042458440888, 0.01477948752424844, 0.013133322935321594, 0.01432500738094833, 0.013285988294462862, 0.01357753882454725, 0.011905364816740623, 0.011448404099767393, 0.010944212481600902, 0.011642086367924675, 0.012101825708441212, 0.010395658197644018, 0.010156075754678903, 0.010714219258348595, 0.009841919146231979, 0.009498693641614328, 0.009928544857931538, 0.010544232388857556, 0.00872000289511731, 0.009964184193037313, 0.008473870004251526, 0.008041868528934144, 0.00988404322489458, 0.00987810283490036, 0.008657386873297215, 0.007847007612301612, 0.00815857175209338, 0.006925777370894233, 0.007247905647364782, 0.006688607566162455, 0.006883159113847505, 0.007828245054449576, 0.006599966753387405, 0.007283376416197539, 0.006610665882382333, 0.007334045000550738, 0.00597790415093571, 0.006747932637411266, 0.00689079831387439, 0.006033585961240003, 0.006212812790389407, 0.006983359564822517, 0.005966170550583938, 0.006264167607313184, 0.007117695887497508, 0.0052437914440056875, 0.005422642790951492, 0.0056025152208495155, 0.0065459802103332776, 0.006560539294153895, 0.005621927477344436, 0.006627445660399009, 0.005671530973463525, 0.004558757496779347, 0.005057341128309568, 0.005202873696635317, 0.00636386290070964, 0.005484883904429199, 0.004767472607558179, 0.005671266181903927, 0.0054192532649826935, 0.00505867279774301, 0.005600130726059876, 0.004675960828476566, 0.003827155355057724, 0.005537178249731501, 0.005497714773063378, 0.005981002313486579, 0.004535903281823526, 0.004930462886166028, 0.004365409388428826, 0.004761257454731479, 0.004395406319993095, 0.0043654669901157855, 0.004841859713893003, 0.0047861251526887345, 0.004670594666427371, 0.005193048642190091, 0.005642698664276381, 0.004156150411052024, 0.0035943672186452714, 0.005038429642191394, 0.004420753997842044, 0.0035439793787422546, 0.004016536899294137, 0.003971366579677739, 0.004242603933684201, 0.0036370560075969266, 0.003470258560459668, 0.004327824521811987, 0.0036605452210690683, 0.0031416490166389375, 0.005097543277560747, 0.003654835849706305, 0.0040302958593321616, 0.0042784585906605384, 0.0041209234079386285, 0.0037645491802472467, 0.003148948160837592, 0.0038847230062952656, 0.003733447529515108, 0.004114399234395448, 0.0036213743567126613, 0.003255323843196501, 0.004431149090555872, 0.003725399682397728, 0.0036018754117635035, 0.0037241477786889646, 0.0035026959584047637, 0.0041531089214594695, 0.0036421808602913074, 0.0028674845256184676, 0.0036555155170453052, 0.003994958931129849, 0.003175110056118729, 0.0034953652071354415, 0.003903971653866028, 0.0032039274677862326, 0.004383961903193714, 0.0038661848383233863, 0.0039686426046438026, 0.0032171887606383316, 0.003096603167257555, 0.003919671366719004, 0.0024749190234256216, 0.00400694565580476, 0.0025949163017576792, 0.0034255019381269265, 0.002525829531557322, 0.0034742828204546187, 0.0034883431988634115, 0.003698176755091841, 0.003966417879862123, 0.00286953599224808, 0.0033966187189568772, 0.0037290800747037606, 0.003557401692504702, 0.0031897696237535556, 0.0030267416872219255, 0.0032978542900348813, 0.002885902167017343, 0.0032573352174297544, 0.003060910018934299, 0.0028409460430820904, 0.0030929467807765975, 0.003409952755133988, 0.003239308666824137, 0.0023638960672020754, 0.0038412318124271465, 0.003050822073448052, 0.0029854461724260492, 0.0023763092100722327, 0.0026966171344438607, 0.003214492335570874, 0.003778122796646154, 0.0031703783954341934, 0.0027889229202159795, 0.0027968162629937996, 0.0025598398440669365, 0.0036473695166337255, 0.003002093513962627, 0.0033027376154313014, 0.0026282993569601404, 0.002797203207219842, 0.002089088398880138, 0.0037668371908980867, 0.0027808624233121378, 0.0037844574962002902, 0.0027392242641583356, 0.002400560356437888, 0.0026454898936007104, 0.0026812650717132863, 0.0036600386671887543, 0.002550855552825088, 0.002919981933981647, 0.0024209477988979336, 0.002469822730934192, 0.0026907337038137944, 0.0020450915618155374, 0.0025352134767727273, 0.002292902537483472, 0.0027220892700585207, 0.002593058988823018, 0.0022238447334380165, 0.0022950488598162773, 0.0023174054912810564, 0.002845149982651463, 0.003514975989831005, 0.003189100737648796, 0.0026371816596775324, 0.002133451112689206, 0.0023061873982368974, 0.0022948052350398943, 0.0031682673920723652, 0.002167881767141278, 0.0034531432417867713, 0.002314428411110362, 0.0025577530615323654, 0.0029146574590257312, 0.0027085554646382177, 0.001840309603753463, 0.0022278937690125254, 0.0018449551326407889, 0.002411230877498147, 0.003031172748895411, 0.0029954608679685518, 0.002703692582463372, 0.002721329368715151, 0.002285298203642487, 0.0020153942304408966, 0.0022248623321506353, 0.0021694343255064894, 0.0020578919618872826, 0.0025061765961458937, 0.0019991085981129826, 0.002462572996619292, 0.002448225694804542, 0.0026772538370858946, 0.002113281929490716, 0.0015545766783532674, 0.0023969997370883126, 0.0021481821695739155, 0.0020023298122778077, 0.0022773405290123583], "accuracy_test_std": 0.01759286340560467, "error_valid": [0.3538553628576807, 0.25750658885542166, 0.2108227833207832, 0.19255194606551207, 0.1757356574736446, 0.1690732657191265, 0.1640889730798193, 0.15716037980045183, 0.15069065323795183, 0.1464078972138554, 0.14584902108433728, 0.14252223738704817, 0.14215602644954817, 0.13559511483433728, 0.13640842667545183, 0.1344450065888554, 0.1297151496611446, 0.13210508047816272, 0.1311491081513554, 0.12945041886295183, 0.12551328360316272, 0.12358074877635539, 0.12416021507906627, 0.11791403896837349, 0.12576771931475905, 0.12401755459337349, 0.12518825301204817, 0.1254426887236446, 0.12335719832454817, 0.12089520190135539, 0.12080401684864461, 0.12163791886295183, 0.11976568382906627, 0.11809787980045183, 0.12186146931475905, 0.11866705101656627, 0.12031573559864461, 0.11465932087725905, 0.12197324454066272, 0.10884995058358427, 0.11317388695406627, 0.10988828360316272, 0.11257383047816272, 0.11399896460843373, 0.11714190747364461, 0.11475050592996983, 0.11773166886295183, 0.11649037556475905, 0.11311358716114461, 0.10986769342996983, 0.11295033650225905, 0.11442547533885539, 0.11003094408885539, 0.10632765436746983, 0.11569765389683728, 0.10867787556475905, 0.11552410815135539, 0.11025449454066272, 0.11537115257906627, 0.11873911662274095, 0.10814841396837349, 0.10679534544427716, 0.10941029743975905, 0.10534079678087349, 0.10550404743975905, 0.11529026261295183, 0.10548345726656627, 0.11065159073795183, 0.11135312735316272, 0.10314353115587349, 0.10930881730045183, 0.10963384789156627, 0.10803663874246983, 0.10704978115587349, 0.10878965079066272, 0.10452748493975905, 0.10428334431475905, 0.10732480704066272, 0.1021154932228916, 0.10613498917545183, 0.11026478962725905, 0.11062070547816272, 0.10853521507906627, 0.10879994587725905, 0.10548345726656627, 0.10277732021837349, 0.10938970726656627, 0.09748711643448793, 0.11131194700677716, 0.10008147825677716, 0.10318324077560237, 0.10440541462725905, 0.10919704207454817, 0.10442600480045183, 0.10611439900225905, 0.10618499388177716, 0.10317441641566272, 0.10907497176204817, 0.10684682087725905, 0.10956325301204817, 0.10772190323795183, 0.09729445124246983, 0.10436423428087349, 0.10298028049698793, 0.10116981598268071, 0.10717185146837349, 0.10882053605045183, 0.10166839231927716, 0.09994911285768071, 0.10021384365587349, 0.10009177334337349, 0.09779302757906627, 0.09898284544427716, 0.10440541462725905, 0.0972326807228916, 0.10349944700677716, 0.1019934229103916, 0.10507606598268071, 0.10140366152108427, 0.10306264118975905, 0.10513783650225905, 0.10204489834337349, 0.10670416039156627, 0.10878965079066272, 0.10312294098268071, 0.09952113140060237, 0.10584966820406627, 0.10068153473268071, 0.10536138695406627, 0.10220814900225905, 0.10009177334337349, 0.10290968561746983, 0.09969467714608427, 0.09733416086219882, 0.10361122223268071, 0.09702972044427716, 0.10750717714608427, 0.10190223785768071, 0.0962561182228916, 0.10030502870858427, 0.09749741152108427, 0.10583937311746983, 0.09846367893448793, 0.09849456419427716, 0.10165809723268071, 0.09546339655496983, 0.10314353115587349, 0.09971526731927716, 0.10223903426204817, 0.10104774567018071, 0.09933876129518071, 0.10137277626129515, 0.10498488092996983, 0.10534079678087349, 0.0986975244728916, 0.10124041086219882, 0.10523931664156627, 0.10218755882906627, 0.09935935146837349, 0.10398772825677716, 0.10155661709337349, 0.09961378717996983, 0.09776214231927716, 0.10115952089608427, 0.09403826242469882, 0.09699883518448793, 0.09920639589608427, 0.09590020237198793, 0.09380441688629515, 0.10325530638177716, 0.09859751506024095, 0.09848426910768071, 0.09716208584337349, 0.09197336219879515, 0.10090508518448793, 0.10279791039156627, 0.10159779743975905, 0.09953289721385539, 0.0957678369728916, 0.09777243740587349, 0.10433481974774095, 0.09920639589608427, 0.10217726374246983, 0.09509718561746983, 0.09611345773719882, 0.09926816641566272, 0.10145513695406627, 0.09638848362198793, 0.09946083160768071, 0.09897255035768071, 0.10048886954066272, 0.0966223291603916, 0.09748711643448793, 0.10277732021837349, 0.0911997599774097, 0.09974615257906627, 0.10136395190135539, 0.09556487669427716, 0.09982704254518071, 0.0943029932228916, 0.09690765013177716, 0.09299110504518071, 0.09705031061746983, 0.09973585749246983, 0.09847397402108427, 0.09901373070406627, 0.09713120058358427, 0.09935935146837349, 0.10103745058358427, 0.09764007200677716, 0.09726356598268071, 0.0925940088478916, 0.0978430322853916, 0.10013295368975905, 0.10048886954066272, 0.09927846150225905, 0.09818865304969882, 0.09752829678087349, 0.09898284544427716, 0.09704001553087349, 0.09861663450677716, 0.09645025414156627, 0.09978733292545183, 0.09556487669427716, 0.09668409967996983, 0.10510695124246983, 0.10080360504518071, 0.09603256777108427, 0.09969467714608427, 0.09716208584337349, 0.09604286285768071, 0.09579872223268071, 0.09199395237198793, 0.09293962961219882, 0.10072271507906627, 0.10006088808358427, 0.09871811464608427, 0.09565606174698793, 0.10283909073795183, 0.10028590926204817, 0.09327642601656627, 0.09411032803087349, 0.09740622646837349, 0.09853574454066272, 0.10143454678087349], "tags": ["deepconvnets", "zoonormalized"], "hp": {"zoom_range": [1, 1], "translation_range": [-3, 3], "momentum": 0.7440380869075113, "shear_range": [1, 1], "patience_check_each": 1, "learning_rate": 0.0004799088267838855, "patience_threshold": 1, "do_flip": true, "batch_size": 32, "optimization": "adam", "nb_data_augmentation": 3, "learning_rate_decay_method": "none", "max_epochs": 1000, "patience_nb_epochs": 50, "weight_decay": 3.181195014432298e-08, "valid_ratio": 0.15, "rotation_range": [0, 0], "learning_rate_decay": 0.07745229994661618}, "accuracy_valid_max": 0.9088002400225903, "code_": "from datetime import datetime\nimport matplotlib as mpl\nmpl.use('Agg')   # NOQA\nfrom lasagnekit.easy import BatchOptimizer, BatchIterator, get_batch_slice\nfrom lasagnekit.nnet.capsule import Capsule\nfrom lasagnekit.easy import iterate_minibatches\nfrom lasagne import updates\nimport theano\nimport theano.tensor as T\n\nimport numpy as np\nimport json\n\nfrom skimage.io import imsave\nfrom lasagnekit.datasets.infinite_image_dataset import Transform\n\n\nclass MyBatchIterator(BatchIterator):\n\n    def __init__(self, nb_data_augmentation=1,  **transform_params):\n        super(MyBatchIterator, self).__init__()\n\n        self.nb_data_augmentation = nb_data_augmentation\n        self.transform_params = transform_params\n\n    def transform(self, batch_index, V):\n        assert self.batch_size is not None\n        assert self.nb_batches is not None\n\n        if isinstance(batch_index, T.TensorVariable):\n            batch_slice = get_batch_slice(batch_index,\n                                          self.batch_size)\n        else:\n            batch_slice = slice(batch_index * self.batch_size,\n                                (batch_index+1) * self.batch_size)\n\n        d = OrderedDict()\n        X = V[\"X\"][batch_slice]\n        y = V[\"y\"][batch_slice]\n\n        X_list = [X]\n        y_list = [y]\n        for i in range(self.nb_data_augmentation):\n            tr, _ = Transform(X.transpose(0, 2, 3, 1),\n                              np.random,\n                              **self.transform_params)\n            imsave(\"out.png\", (((tr[0] + 1) / 2.)))\n            X_transformed = tr.transpose((0, 3, 1, 2))\n            X_list.append(X_transformed)\n            y_list.append(y)\n        d[\"X\"] = np.concatenate(X_list, axis=0)\n        d[\"y\"] = np.concatenate(y_list, axis=0)\n        d[\"X\"], d[\"y\"] = shuffle(d[\"X\"], d[\"y\"])\n        return d\n\n\nif __name__ == \"__main__\":\n    from lasagnekit.datasets.cifar10 import Cifar10\n    from sklearn.utils import shuffle\n    from sklearn.cross_validation import train_test_split\n    from collections import OrderedDict\n\n    from lightexperiments.light import Light\n    from hp_toolkit.hp import (\n            Param, make_constant_param,\n            instantiate_random, instantiate_default\n    )\n    import argparse\n    import vgg  # NOQA\n    import vgg_small  # NOQA\n    import vgg_very_small  # NOQA\n    import spatially_sparse  # NOQA\n    import nin  # NOQA\n    import fully  # NOQA\n    import residual  # NOQA\n    import residualv2  # NOQA\n    import residualv3  # NOQA\n    import residualv4  # NOQA\n    import residualv5  # NOQA\n\n    parser = argparse.ArgumentParser(description='zoo')\n    parser.add_argument(\"--budget-hours\",\n                        default=np.inf,\n                        help=\"nb of maximum hours (defaut=inf)\")\n    parser.add_argument(\"--fast-test\", default=False, type=bool)\n    parser.add_argument(\"--model\", default=\"vgg\", type=str)\n    parser.add_argument(\"--default-model\", default=False, type=bool)\n\n    models = {\n        \"vgg\": vgg,\n        \"vgg_small\": vgg_small,\n        \"vgg_very_small\": vgg_very_small,\n        \"spatially_sparse\": spatially_sparse,\n        \"nin\": nin,\n        \"fully\": fully,\n        \"residual\": residual,\n        \"residualv2\": residualv2,\n        \"residualv3\": residualv3,\n        \"residualv4\": residualv4,\n        \"residualv5\": residualv5\n    }\n    args = parser.parse_args()\n    model_class = models[args.model]\n    budget_sec = args.budget_hours * 3600\n    begin = datetime.now()\n    seed = np.random.randint(0, 1000000000)\n    np.random.seed(seed)\n    fast_test = args.fast_test\n    np.random.seed(seed)\n    rng = np.random\n\n    if args.default_model is True:\n        instantiate = instantiate_default\n    else:\n        instantiate = instantiate_random\n\n    light = Light()\n    light.launch()\n    light.initials()\n    light.file_snapshot()\n    light.set_seed(seed)\n    light.tag(\"deepconvnets\")\n    light.tag(\"zoonormalized\")\n\n    data = Cifar10(batch_indexes=[1, 2, 3, 4, 5])\n    data.load()\n\n    data_test = Cifar10(batch_indexes=[6])\n    data_test.load()\n\n    light.set(\"dataset\", data.__class__.__name__)\n\n    hp = dict(\n        learning_rate=Param(initial=0.001, interval=[-4, -2], type='real', scale='log10'),\n        learning_rate_decay=Param(initial=0.05, interval=[0, 0.1], type='real'),\n        learning_rate_decay_method=Param(initial='sqrt', interval=['exp', 'none', 'sqrt', 'lin'], type='choice'),\n        momentum=Param(initial=0.9, interval=[0.5, 0.99], type='real'),\n        weight_decay=Param(initial=0, interval=[-10, -3], type='real', scale='log10'),\n        max_epochs=make_constant_param(1000),\n        batch_size=Param(initial=32,\n                         interval=[16, 32, 64, 128],\n                         type='choice'),\n        patience_nb_epochs=make_constant_param(50),\n        valid_ratio=make_constant_param(0.15),\n\n        patience_threshold=make_constant_param(1),\n        patience_check_each=make_constant_param(1),\n\n        optimization=Param(initial='adam',\n                           interval=['adam', 'nesterov_momentum', 'adadelta', 'rmsprop'],\n                           type='choice'),\n        # data augmentation\n        nb_data_augmentation=Param(initial=1, interval=[0, 1, 2, 3, 4], type='choice'),\n        zoom_range=make_constant_param((1, 1)),\n        rotation_range=make_constant_param((0, 0)),\n        shear_range=make_constant_param((1, 1)),\n        translation_range=make_constant_param((-3, 3)),\n        do_flip=make_constant_param(True)\n\n    )\n\n    if fast_test is True:\n        instantiate = instantiate_default\n\n    default_params = {}\n    if fast_test is True:\n        default_params[\"max_epochs\"] = 1\n    hp = instantiate(hp, default_params=default_params)\n    light.set(\"hp\", hp)\n\n    hp_model = model_class.params\n    hp_model = instantiate(hp_model)\n    light.set(\"hp_model\", hp_model)\n\n    model = model_class.build_model(\n        input_width=data.img_dim[1],\n        input_height=data.img_dim[2],\n        output_dim=data.output_dim,\n        **hp_model)\n    light.set(\"model\", model_class.__name__)\n    print(model_class.__name__)\n    print(json.dumps(hp, indent=4))\n    print(json.dumps(hp_model, indent=4))\n\n    initial_lr = hp[\"learning_rate\"]\n\n    def evaluate(X, y, batch_size=None):\n        if batch_size is None:\n            batch_size = hp[\"batch_size\"]\n        accs = []\n        for mini_batch in iterate_minibatches(X.shape[0],\n                                              batch_size):\n            acc = (nnet.predict(X[mini_batch]) == y[mini_batch]).mean()\n            accs.append(acc)\n        return accs\n\n    class MyBatchOptimizer(BatchOptimizer):\n\n        def quitter(self, update_status):\n            quit = super(MyBatchOptimizer, self).quitter(update_status)\n            if (datetime.now() - begin).total_seconds() >= budget_sec:\n                print(\"Budget finished.quit.\")\n                quit = True\n            return quit\n\n        def iter_update(self, epoch, nb_batches, iter_update_batch):\n            start = datetime.now()\n            status = super(MyBatchOptimizer, self).iter_update(epoch,\n                                                               nb_batches,\n                                                               iter_update_batch)\n            duration = (datetime.now() - start).total_seconds()\n            status[\"duration\"] = duration\n            accs = evaluate(X_train, y_train, batch_size=self.batch_size_eval)\n            status[\"accuracy_train\"] = np.mean(accs)\n            status[\"accuracy_train_std\"] = np.std(accs)\n            accs = evaluate(X_valid, y_valid, batch_size=self.batch_size_eval)\n            status[\"accuracy_valid\"] = np.mean(accs)\n            status[\"accuracy_valid_std\"] = np.std(accs)\n\n            status[\"error_valid\"] = 1 - status[\"accuracy_valid\"]\n\n            status = self.add_moving_avg(\"accuracy_train\", status)\n            status = self.add_moving_var(\"accuracy_train\", status)\n\n            for k, v in status.items():\n                light.append(k, float(v))\n\n            lr = self.learning_rate\n            lr_decay_method = hp[\"learning_rate_decay_method\"]\n            lr_decay = hp[\"learning_rate_decay\"]\n            cur_lr = lr.get_value()\n            t = status[\"epoch\"]\n\n            if lr_decay_method == \"exp\":\n                new_lr = cur_lr * (1 - lr_decay)\n            elif lr_decay_method == \"lin\":\n                new_lr = initial_lr / (1 + t)\n            elif lr_decay_method == \"sqrt\":\n                new_lr = initial_lr / np.sqrt(1 + t)\n            else:\n                new_lr = cur_lr\n\n            new_lr = np.array(new_lr, dtype=\"float32\")\n            lr.set_value(new_lr)\n\n            light.append(\"learning_rate_per_epoch\",\n                         float(self.learning_rate.get_value()))\n            return status\n\n        def add_moving_avg(self, name, status, B=0.9):\n            if len(self.stats) >= 2:\n                old_avg = self.stats[-2][\"moving_avg_\" + name]\n            else:\n                old_avg = 0\n            avg = B * old_avg + (1 - B) * status[name]\n            status[\"moving_avg_\" + name] = avg\n            return status\n\n        def add_moving_var(self, name, status, B=0.9):\n            if len(self.stats) >= 2:\n                old_avg = self.stats[-2][\"moving_avg_\" + name]\n                old_var = self.stats[-2][\"moving_var_\" + name]\n            else:\n                old_avg = 0\n                old_var = 0\n            new_avg = B * old_avg + (1 - B) * status[name]\n            var = B * old_var + (1 - B) * (status[name] - old_avg) * (status[name] - new_avg)\n            status[\"moving_var_\" + name] = var\n            return status\n\n    learning_rate = theano.shared(np.array(hp[\"learning_rate\"],\n                                  dtype=\"float32\"))\n    momentum = hp[\"momentum\"]\n\n    optim_params = {\"learning_rate\": learning_rate}\n    if \"momentum\" in hp[\"optimization\"]:\n        optim_params[\"momentum\"] = hp[\"momentum\"]\n\n    batch_optimizer = MyBatchOptimizer(\n        verbose=1, max_nb_epochs=hp[\"max_epochs\"],\n        batch_size=hp[\"batch_size\"],\n        optimization_procedure=(getattr(updates, hp[\"optimization\"]),\n                                optim_params),\n        patience_stat=\"error_valid\",\n        patience_nb_epochs=hp[\"patience_nb_epochs\"],\n        patience_progression_rate_threshold=hp[\"patience_threshold\"],\n        patience_check_each=hp[\"patience_check_each\"],\n        verbose_stat_show=[\n            \"epoch\",\n            \"duration\",\n            \"accuracy_train\",\n            \"accuracy_train_std\",\n            \"accuracy_valid\",\n            \"accuracy_valid_std\",\n        ]\n    )\n    batch_size_eval = 1024\n    light.set(\"batch_size_eval\", batch_size_eval)\n    batch_optimizer.learning_rate = learning_rate\n    batch_optimizer.batch_size_eval = batch_size_eval\n\n    input_variables = OrderedDict()\n    input_variables[\"X\"] = dict(tensor_type=T.tensor4)\n    input_variables[\"y\"] = dict(tensor_type=T.ivector)\n    functions = dict(\n        predict=dict(\n            get_output=lambda model, X: (model.get_output(X, deterministic=True)[0]).argmax(axis=1),\n            params=[\"X\"]\n        )\n    )\n\n    def loss_function(model, tensors):\n        X = tensors[\"X\"]\n        y = tensors[\"y\"]\n        y_hat, = model.get_output(X)\n        if hp[\"weight_decay\"] > 0:\n            l1 = sum(T.abs_(param).sum() for param in model.capsule.all_params_regularizable) * hp[\"weight_decay\"]\n        else:\n            l1 = 0\n        return T.nnet.categorical_crossentropy(y_hat, y).mean() + l1\n\n    batch_iterator = MyBatchIterator(hp[\"nb_data_augmentation\"],\n                                     zoom_range=hp[\"zoom_range\"],\n                                     rotation_range=hp[\"rotation_range\"],\n                                     shear_range=hp[\"shear_range\"],\n                                     translation_range=hp[\"translation_range\"],\n                                     do_flip=hp[\"do_flip\"])\n\n    nnet = Capsule(\n        input_variables, model,\n        loss_function,\n        functions=functions,\n        batch_optimizer=batch_optimizer,\n        batch_iterator=batch_iterator,\n    )\n\n    from sklearn.preprocessing import LabelEncoder\n\n    imshape = ([data.X.shape[0]] +\n               list(data.img_dim))\n    X = data.X.reshape(imshape).astype(np.float32)\n    y = data.y\n    label_encoder = LabelEncoder()\n    y = label_encoder.fit_transform(y)\n    y = y.astype(np.int32)\n\n    # rescaling to [-1, 1]\n    X_min = X.min(axis=(0, 2, 3))[None, :, None, None]\n    X_max = X.max(axis=(0, 2, 3))[None, :, None, None]\n    X = 2 * ((X - X_min) / (X_max - X_min)) - 1\n    X, y = shuffle(X, y)\n\n    if fast_test is True:\n        X = X[0:100]\n        y = y[0:100]\n\n    X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=hp[\"valid_ratio\"])\n    light.set(\"nb_examples_train\", X_train.shape[0])\n    light.set(\"nb_examples_valid\", X_valid.shape[0])\n    try:\n        nnet.fit(X=X_train, y=y_train)\n    except KeyboardInterrupt:\n        print(\"interruption...\")\n\n    imshape = ([data_test.X.shape[0]] +\n               list(data_test.img_dim))\n    X_test = data_test.X.reshape(imshape).astype(np.float32)\n    X_test = 2 * ((X_test - X_min) / (X_max - X_min)) - 1\n    y_test = data_test.y\n    y_test = label_encoder.transform(y_test)\n    y_test = y_test.astype(np.int32)\n\n    accs = evaluate(X_test, y_test, batch_size_eval)\n    m, s = np.mean(accs), np.std(accs)\n    light.set(\"accuracy_test\", m)\n    light.set(\"accuracy_test_std\", s)\n    print(\"Test accuracy : {}+-{}\".format(m, s))\n\n    light.endings()  # save the duration\n\n    if fast_test is False:\n        light.store_experiment()  # update the DB\n    light.close()\n", "nb_examples_valid": 7500, "accuracy_valid_last": 0.8985654532191265, "loss_train": [1.3572616577148438, 0.9049469828605652, 0.7293994426727295, 0.6358786225318909, 0.5680651068687439, 0.5142655968666077, 0.4733770191669464, 0.4361482262611389, 0.4048527479171753, 0.37728825211524963, 0.35374319553375244, 0.3311813771724701, 0.31090936064720154, 0.2942982614040375, 0.27853381633758545, 0.2608318328857422, 0.24769334495067596, 0.2351173460483551, 0.22569502890110016, 0.2120727300643921, 0.2011723816394806, 0.19094280898571014, 0.18401141464710236, 0.1716521978378296, 0.16827748715877533, 0.15840452909469604, 0.15379904210567474, 0.15094387531280518, 0.14218667149543762, 0.13766437768936157, 0.12969888746738434, 0.12519259750843048, 0.11906250566244125, 0.11855810135602951, 0.11396248638629913, 0.10886165499687195, 0.10693719983100891, 0.10128618776798248, 0.0984993726015091, 0.09303813427686691, 0.09399920701980591, 0.09253145754337311, 0.08826328814029694, 0.08350352197885513, 0.08295571058988571, 0.08222755044698715, 0.07765942066907883, 0.07654418051242828, 0.07555530965328217, 0.0728096067905426, 0.07185900211334229, 0.07004760205745697, 0.06943731009960175, 0.06574001163244247, 0.06294405460357666, 0.06474250555038452, 0.06122814863920212, 0.061842139810323715, 0.057888928800821304, 0.059313807636499405, 0.05732468143105507, 0.05552788823843002, 0.0582486093044281, 0.05236947163939476, 0.05317022651433945, 0.05138268694281578, 0.055069439113140106, 0.04861912876367569, 0.04953131079673767, 0.051471542567014694, 0.04720388352870941, 0.04630816727876663, 0.046743154525756836, 0.04900441691279411, 0.04654267057776451, 0.043555937707424164, 0.04263446480035782, 0.044473834335803986, 0.04273894056677818, 0.043331556022167206, 0.04160989075899124, 0.040664851665496826, 0.03879465162754059, 0.03986778110265732, 0.039482735097408295, 0.037779416888952255, 0.038611046969890594, 0.03898797556757927, 0.03840440884232521, 0.037709303200244904, 0.034891292452812195, 0.03722254931926727, 0.036446649581193924, 0.035919785499572754, 0.03654875233769417, 0.034260958433151245, 0.03308316692709923, 0.031355325132608414, 0.03529106453061104, 0.030991895124316216, 0.030146105214953423, 0.03600948303937912, 0.03046480379998684, 0.03549119830131531, 0.03045450523495674, 0.03298696503043175, 0.029885485768318176, 0.03269929066300392, 0.029661456122994423, 0.029028775170445442, 0.030865775421261787, 0.02916243113577366, 0.03358561545610428, 0.026882601901888847, 0.028466375544667244, 0.03049270622432232, 0.027769742533564568, 0.027638081461191177, 0.028176913037896156, 0.027371052652597427, 0.028092216700315475, 0.026169121265411377, 0.02854410745203495, 0.026595650240778923, 0.024303307756781578, 0.028965994715690613, 0.025135640054941177, 0.025227058678865433, 0.024342002347111702, 0.026765713468194008, 0.02874789759516716, 0.023711571469902992, 0.025346992537379265, 0.023045705631375313, 0.024651307612657547, 0.02472112700343132, 0.022911448031663895, 0.023529309779405594, 0.02686171419918537, 0.021953465417027473, 0.023396210744976997, 0.02367449551820755, 0.0243239626288414, 0.020287100225687027, 0.025205401703715324, 0.02104111574590206, 0.023745451122522354, 0.022658133879303932, 0.02231157012283802, 0.0223150122910738, 0.02317030541598797, 0.021805541589856148, 0.02054360881447792, 0.020930897444486618, 0.021633869037032127, 0.022644123062491417, 0.021290717646479607, 0.019848693162202835, 0.02156643569469452, 0.02414919249713421, 0.018117474392056465, 0.02014271169900894, 0.02152685821056366, 0.01944422721862793, 0.020094089210033417, 0.018437672406435013, 0.022078225389122963, 0.019512223079800606, 0.01953328587114811, 0.019055353477597237, 0.019188787788152695, 0.02007715031504631, 0.018096573650836945, 0.020218634977936745, 0.019461769610643387, 0.019642135128378868, 0.019847510382533073, 0.018054930493235588, 0.019167203456163406, 0.01814238540828228, 0.02036006934940815, 0.018450578674674034, 0.01826973259449005, 0.019427383318543434, 0.017565004527568817, 0.01869179680943489, 0.01638040691614151, 0.01795213483273983, 0.019985580816864967, 0.016822630539536476, 0.018163461238145828, 0.017620809376239777, 0.01744069904088974, 0.016849232837557793, 0.018962593749165535, 0.017054913565516472, 0.018809668719768524, 0.017966676503419876, 0.01628086157143116, 0.01711391657590866, 0.01864968240261078, 0.016520362347364426, 0.016912857070565224, 0.016197586432099342, 0.018057992681860924, 0.016418103128671646, 0.017044048756361008, 0.015579679980874062, 0.01657949574291706, 0.016796039417386055, 0.016256360337138176, 0.01684853993356228, 0.016760436818003654, 0.01750972308218479, 0.015648415312170982, 0.017355429008603096, 0.014732759445905685, 0.016743946820497513, 0.01525016687810421, 0.01649746671319008, 0.016654998064041138, 0.014980846084654331, 0.01669664867222309, 0.01473276223987341, 0.01653832383453846, 0.016514573246240616, 0.015910400077700615, 0.017598537728190422, 0.013332751579582691, 0.015275918878614902, 0.016614334657788277, 0.013917607255280018, 0.01799858547747135, 0.014718406833708286, 0.0135646415874362, 0.016328871250152588, 0.014663901180028915, 0.015296278521418571, 0.012561298906803131, 0.019090237095952034, 0.014515215530991554, 0.014126837253570557, 0.01677093468606472, 0.012853986583650112, 0.0155666284263134], "accuracy_train_first": 0.651836543120155, "model": "residualv5", "loss_std": [0.29820704460144043, 0.18629449605941772, 0.17176871001720428, 0.16629385948181152, 0.15913325548171997, 0.1521158069372177, 0.14826436340808868, 0.14167648553848267, 0.13376741111278534, 0.13052400946617126, 0.12741714715957642, 0.12125804275274277, 0.11753758043050766, 0.11343328654766083, 0.10844895988702774, 0.10503485798835754, 0.10228794068098068, 0.09692048281431198, 0.09633908420801163, 0.09338801354169846, 0.08840497583150864, 0.08629141002893448, 0.08373423665761948, 0.08017642050981522, 0.07898319512605667, 0.07473895698785782, 0.07103880494832993, 0.07431842386722565, 0.0697476789355278, 0.0674920454621315, 0.065461166203022, 0.06235893443226814, 0.060146622359752655, 0.06196949630975723, 0.05936297029256821, 0.056509580463171005, 0.05640783533453941, 0.05288700386881828, 0.05149167776107788, 0.0516199953854084, 0.05307585746049881, 0.05265917256474495, 0.04989439994096756, 0.04756295680999756, 0.04753643646836281, 0.04622228816151619, 0.0449460968375206, 0.04434450715780258, 0.044934675097465515, 0.0436539463698864, 0.04350847005844116, 0.043338872492313385, 0.043375879526138306, 0.039561331272125244, 0.040867824107408524, 0.04103291034698486, 0.03781568631529808, 0.04073244333267212, 0.03722981736063957, 0.03809687867760658, 0.0388689786195755, 0.036856453865766525, 0.039472583681344986, 0.03435482457280159, 0.03581316024065018, 0.03468708693981171, 0.03927242383360863, 0.03342346474528313, 0.03445849567651749, 0.03710009530186653, 0.03392941877245903, 0.033154599368572235, 0.03344639763236046, 0.03586860001087189, 0.034657981246709824, 0.032765310257673264, 0.031797125935554504, 0.03321008384227753, 0.0331471785902977, 0.032088156789541245, 0.03170938789844513, 0.030828673392534256, 0.030797211453318596, 0.03204553574323654, 0.030462278053164482, 0.02855588309466839, 0.030252061784267426, 0.028927873820066452, 0.03144889697432518, 0.030167939141392708, 0.028188293799757957, 0.030398767441511154, 0.029267895966768265, 0.030551716685295105, 0.029628746211528778, 0.028424374759197235, 0.02710624784231186, 0.026177983731031418, 0.02991635538637638, 0.02588626556098461, 0.02574232593178749, 0.03303606063127518, 0.026833444833755493, 0.031558915972709656, 0.02669898048043251, 0.028711875900626183, 0.026088057085871696, 0.02950963005423546, 0.026086201891303062, 0.02436819113790989, 0.027073919773101807, 0.024567293003201485, 0.03210246190428734, 0.025636421516537666, 0.025608422234654427, 0.02862120419740677, 0.02456226572394371, 0.02558278478682041, 0.025484073907136917, 0.025033824145793915, 0.02545943111181259, 0.023948900401592255, 0.026968462392687798, 0.025025108829140663, 0.022186318412423134, 0.025836706161499023, 0.02325390838086605, 0.023476986214518547, 0.02353234961628914, 0.02556542493402958, 0.02769414894282818, 0.02220795303583145, 0.024920281022787094, 0.02104252576828003, 0.02415511943399906, 0.02321072667837143, 0.020536981523036957, 0.022690249606966972, 0.027343736961483955, 0.020251663401722908, 0.023195993155241013, 0.024168184027075768, 0.02358320541679859, 0.020045913755893707, 0.02528887242078781, 0.020081963390111923, 0.023925893008708954, 0.020904753357172012, 0.022229773923754692, 0.0226647537201643, 0.023951705545186996, 0.022098015993833542, 0.01952228881418705, 0.019962243735790253, 0.021279094740748405, 0.022517960518598557, 0.022420745342969894, 0.01973104290664196, 0.021306270733475685, 0.024799946695566177, 0.017071282491087914, 0.020318353548645973, 0.02140454575419426, 0.01961064152419567, 0.020039113238453865, 0.01982482708990574, 0.022248318418860435, 0.020369265228509903, 0.021093985065817833, 0.018741922453045845, 0.01909523829817772, 0.020665401592850685, 0.018870186060667038, 0.021986354142427444, 0.019481800496578217, 0.020722297951579094, 0.020506929606199265, 0.017600974068045616, 0.020316217094659805, 0.01839415729045868, 0.021472379565238953, 0.019541313871741295, 0.02100224606692791, 0.021244896575808525, 0.017469225451350212, 0.019494162872433662, 0.01789918541908264, 0.01976717635989189, 0.021359216421842575, 0.017754049971699715, 0.018721308559179306, 0.018267225474119186, 0.01932811550796032, 0.018170787021517754, 0.020974386483430862, 0.017985902726650238, 0.019438179209828377, 0.018930433318018913, 0.017800303176045418, 0.017419004812836647, 0.020319338887929916, 0.01874416135251522, 0.018411098048090935, 0.017342928797006607, 0.01803249679505825, 0.017783507704734802, 0.01941218227148056, 0.016849258914589882, 0.018231293186545372, 0.0180427897721529, 0.017105160281062126, 0.018027905374765396, 0.018860088661313057, 0.02034410648047924, 0.016937220469117165, 0.018682504072785378, 0.015998004004359245, 0.018197784200310707, 0.016291974112391472, 0.017617754638195038, 0.0184472743421793, 0.017649292945861816, 0.0180169939994812, 0.01737581565976143, 0.01849961094558239, 0.018241290003061295, 0.017785051837563515, 0.02144978567957878, 0.014595713466405869, 0.016217540949583054, 0.018288221210241318, 0.015784285962581635, 0.02027774788439274, 0.015086573548614979, 0.013700409792363644, 0.01882246881723404, 0.017637286335229874, 0.01721877232193947, 0.01304710190743208, 0.021206537261605263, 0.01647569052875042, 0.016180986538529396, 0.01806040294468403, 0.015276148915290833, 0.016986144706606865]}, "state": "available", "life": [{"dt": "Sun May 15 22:05:15 2016", "state": "available"}], "summary": "c0cb2732ace9b7b0466613a47638186c"}