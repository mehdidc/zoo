{"content": {"hp_model": {"f0": 16, "f1": 32, "f2": 32, "f3": 16, "nonlin": "very_leaky_rectify", "nbg1": 5, "nbg3": 5, "nbg2": 5, "fs0": 3, "fs1": 3, "fs2": 3, "fs3": 3, "pg2": 2, "pg3": 2, "pg1": 2}, "accuracy_valid_std": [0.011262030673541128, 0.007316273106811254, 0.007896504266953014, 0.009355756289714837, 0.010994109687142284, 0.011120236415522108, 0.01292104399396458, 0.012029404004233527, 0.01081609900761447, 0.01147817865915011, 0.011609091592577088, 0.01145304613542308, 0.011136833932082287, 0.0109048858538175, 0.011121371636035741, 0.011195294868373748, 0.01082183250303907, 0.010716941133008544, 0.010910128203126224, 0.011033236893778657, 0.010968217944571906, 0.011040597487041642, 0.01128982317304742, 0.01174523412960113, 0.01120503273738484, 0.010844503605377339, 0.011115792837741263, 0.010792653176490093, 0.010124362235465825, 0.009886067928802396, 0.009556016205003556, 0.009622246881732934, 0.009729095837626047, 0.009722228857785419, 0.009385168100910585, 0.009516631944152858, 0.009453792395909844, 0.009559998290001051, 0.00985472542505678, 0.01007919097938193, 0.010204636138625938, 0.01077703365726396, 0.01072158391070519, 0.010806570816128921, 0.011303308063963874, 0.011595428336564706, 0.011727742107159196, 0.011849659184379389, 0.012167804277881097, 0.012619870607997333, 0.012562315543776756, 0.012245160624143053, 0.012477373741139261, 0.012581280100992036, 0.012609986682295753, 0.012543322313614201, 0.012429511759540829, 0.01249646720614569, 0.01249646720614569, 0.012284807035278995, 0.012467376846841231, 0.012039112118216795, 0.012233433162567395, 0.012439098888571684, 0.012667013344040606, 0.012731979667170506, 0.012667013344040606, 0.012732719941623382, 0.012664972239372685, 0.012539199503762906, 0.012539199503762906, 0.012639373803409125, 0.012873004102378119, 0.012765636274951545, 0.013075750157508555, 0.013020513785990107, 0.012372058945718653, 0.01249138142442273, 0.012456198362119834, 0.012240740452839141, 0.01221137169131571, 0.01213302311671144, 0.01213302311671144, 0.01145406150306079, 0.011840924620191224, 0.012010853912431757, 0.011947992184163127, 0.0118308527706987, 0.01167048245327849, 0.01167048245327849, 0.011568576111814057, 0.011749967176513158, 0.01156838988301021, 0.011972729634927669, 0.012062580407682584, 0.012265841888081478, 0.012214057529320945, 0.012214057529320945, 0.012214057529320945, 0.01210138595594094, 0.012217151236188672, 0.012217151236188672, 0.01227742140998967, 0.01227742140998967, 0.012403648510029716, 0.011651527554454892, 0.011521143574798557, 0.011651527554454892, 0.011722621000588114, 0.011869331984481746, 0.011858807387709672, 0.011858807387709672, 0.011858807387709672, 0.011858807387709672, 0.011858807387709672, 0.011858807387709672, 0.011858807387709672, 0.011354479097477941, 0.011354479097477941, 0.010920968902291918, 0.010786132325752491, 0.010786132325752491, 0.010781695597599181, 0.010781695597599181, 0.010812930311362845, 0.010812930311362845, 0.01073577270096888, 0.010556317283932568, 0.010556317283932568, 0.010556317283932568, 0.010556317283932568, 0.010567901248608694, 0.010567901248608694, 0.010567901248608694, 0.010567901248608694, 0.010567901248608694, 0.01065746695096764, 0.010690970842176692, 0.010690970842176692, 0.010690970842176692, 0.010690970842176692, 0.010690970842176692, 0.010447510507335896, 0.010447510507335896, 0.010447510507335896, 0.010447510507335896, 0.010384745725782093, 0.010384745725782093, 0.010384745725782093, 0.010099401884658668, 0.010099401884658668, 0.010099401884658668, 0.009938965629445053, 0.009938965629445053, 0.009938965629445053, 0.009938965629445053, 0.010058191864063128, 0.010058191864063128, 0.010227329114788708, 0.010227329114788708, 0.010227329114788708, 0.010227329114788708, 0.010292501890033197, 0.010292501890033197, 0.010292501890033197, 0.010292501890033197, 0.010292501890033197, 0.010292501890033197, 0.010292501890033197, 0.010292501890033197, 0.010030379843035243, 0.010030379843035243, 0.010276930960004572, 0.010110097676639389, 0.010110097676639389, 0.010110097676639389, 0.010257696594218036, 0.010257696594218036, 0.01007780700906571, 0.010238978435435165, 0.010324851416306608, 0.010324851416306608, 0.01045875151587447, 0.010323773282722219, 0.010323773282722219, 0.010323773282722219, 0.010470143353837526, 0.010518241803541866, 0.010518241803541866, 0.010518241803541866, 0.010518241803541866, 0.010518241803541866, 0.010367166181652248, 0.010367166181652248, 0.010367166181652248, 0.010367166181652248, 0.010374532106232388, 0.010540007400070144, 0.010476374452042138, 0.010476374452042138, 0.010422365546361483, 0.010292702482524996, 0.010292702482524996, 0.010468016903807003, 0.010650241671423045, 0.010307352608258208, 0.010307352608258208, 0.010307352608258208, 0.010307352608258208, 0.010307352608258208, 0.010307352608258208, 0.010307352608258208, 0.010307352608258208, 0.010307352608258208, 0.010307352608258208, 0.010307352608258208, 0.01027423157950824, 0.01027423157950824, 0.01027423157950824, 0.01027423157950824, 0.01027423157950824, 0.01027423157950824, 0.01027423157950824, 0.01027423157950824, 0.01025118371528261, 0.010250999823976257, 0.010250999823976257, 0.010250999823976257, 0.010250999823976257, 0.010250999823976257, 0.010250999823976257, 0.010250999823976257, 0.010250999823976257, 0.010144144009404905, 0.010144144009404905, 0.010332264883276382, 0.010332264883276382, 0.010332264883276382, 0.010332264883276382, 0.010332264883276382, 0.010332264883276382, 0.010332264883276382, 0.010903727003262089, 0.010903727003262089, 0.010903727003262089, 0.010903727003262089, 0.010903727003262089, 0.010903727003262089, 0.010903727003262089, 0.010903727003262089, 0.010903727003262089, 0.010903727003262089, 0.010903727003262089, 0.010903727003262089, 0.010651291227316008, 0.010651291227316008, 0.010651291227316008, 0.010762337430963796, 0.010762337430963796, 0.010762337430963796, 0.010762337430963796, 0.010762337430963796, 0.010762337430963796, 0.01075154742448793, 0.01075154742448793, 0.01061736622000033, 0.01061736622000033, 0.01061736622000033, 0.01061736622000033, 0.010628883650266185, 0.010628883650266185, 0.010628883650266185, 0.010628883650266185, 0.010872827433153265, 0.010872827433153265], "moving_avg_accuracy_train": [0.012677053773301953, 0.023535125608504053, 0.03328635577444397, 0.04212277259756251, 0.05014759130264568, 0.05743975469914375, 0.06399572630956345, 0.06997286671847422, 0.07535690733529421, 0.08019320724637535, 0.08455285261277695, 0.08854163760920505, 0.09214785619647575, 0.09546549648929588, 0.09846532364569113, 0.1011977201697802, 0.10364990159503178, 0.10588701971464451, 0.10792832780801026, 0.10976085479442038, 0.1114217548262371, 0.11294214149177692, 0.11433141583004847, 0.11558870213210268, 0.11674347524322795, 0.11781299797776451, 0.11879416962932361, 0.11969586135502173, 0.12052365994981672, 0.12127100383394172, 0.12195523907370186, 0.12258035138472408, 0.12314062731583454, 0.12366115169550063, 0.12413659908362867, 0.12456450173294392, 0.12495658956375622, 0.12533039495077297, 0.12567612039432616, 0.12599657388876212, 0.12628265688494497, 0.12654710702793812, 0.12680371334710813, 0.1270416344807897, 0.1272627389475317, 0.12747568386045666, 0.1276766348773272, 0.12786446623893927, 0.12805909110129488, 0.12824820437027207, 0.12843933265163726, 0.12860204750962784, 0.12874620178182858, 0.12888756637085685, 0.12901944479860136, 0.12915208627642857, 0.12930165449217812, 0.12944091618397174, 0.12957787745063362, 0.1297104431858674, 0.12983669174518764, 0.1299665914902425, 0.13008582640960142, 0.13018383724178637, 0.13028134758599091, 0.1303714320445845, 0.13043859321328036, 0.130487412521059, 0.13053134989805978, 0.13056856838855097, 0.1305997398811835, 0.1306301193733623, 0.13065978606513276, 0.13067486034367853, 0.13068842719436974, 0.1307076128064204, 0.13072720500607551, 0.13075646372981273, 0.13079442232522384, 0.13082625991228433, 0.1308479382942102, 0.1308860500284197, 0.13091570029158917, 0.13096563701653693, 0.1310244949130283, 0.1310821173174896, 0.13114327807674284, 0.13120064790888028, 0.13125228075780399, 0.1312964251730258, 0.1313408054443445, 0.1313807476885313, 0.131423671154728, 0.1314599771254955, 0.13149497764799578, 0.1315311284158651, 0.1315776149998046, 0.13162410322296922, 0.13166594262381737, 0.13170592323339023, 0.13174655607962485, 0.1317924262364741, 0.13184068482406702, 0.13188644270171015, 0.13193227508920802, 0.13197584938676563, 0.1320290171474246, 0.1320861687272558, 0.13213993029791338, 0.13219064086031473, 0.13224325581290453, 0.13229525956785437, 0.1323467132449283, 0.13239534670310435, 0.13244376711308184, 0.13249432092849014, 0.13253981936235762, 0.1325830931016479, 0.13263134006224722, 0.1326747623267866, 0.1327161675136816, 0.13276040762831565, 0.13279092313624818, 0.13282071224219702, 0.1328428721399319, 0.13286277999907456, 0.13288767251873151, 0.13291007578642278, 0.13293488902496395, 0.13296884668369863, 0.13299708342775032, 0.1330271467950159, 0.13306815471841205, 0.13310738699827812, 0.1331450211989671, 0.13318354227720622, 0.1332228615452405, 0.13325824888647134, 0.1332924226423886, 0.13333709386675255, 0.13338427341510867, 0.13343832470385805, 0.13349394631016107, 0.1335463309046433, 0.13359812733729637, 0.1336517195731127, 0.1337022777341569, 0.1337477800790967, 0.13380268308239968, 0.13385209578537233, 0.13390121751566678, 0.1339477522217413, 0.13399660890363693, 0.13404523021496206, 0.13409363969277371, 0.13413953337161372, 0.13418548798018878, 0.13422684712790633, 0.13426639550966166, 0.13430896449967, 0.1343426262930585, 0.13437292190710812, 0.13439553766213375, 0.13441821699046633, 0.13443630323715614, 0.13445490600798649, 0.1344809490969719, 0.13450438787705876, 0.13453478337437505, 0.13456446447076922, 0.13459117745752397, 0.1346198694432223, 0.13464569223035078, 0.13467125788757595, 0.13469891727669764, 0.13473078617333575, 0.13476411847792907, 0.13479876784968214, 0.13482762713545035, 0.13485127534383223, 0.13486790843375687, 0.1348829142635078, 0.13490106980790267, 0.1349197349466676, 0.13494118386917506, 0.13496513819705083, 0.13498902224094855, 0.13501284302926603, 0.13503195658994221, 0.13505613424097937, 0.13508021927572234, 0.13510883520460082, 0.1351392398382105, 0.13515962856203065, 0.13517565326465925, 0.13519472579464403, 0.1352165413692494, 0.13523385023758472, 0.13525175336789602, 0.1352701913339857, 0.1352821352058474, 0.1352952098393324, 0.13531162730708798, 0.13533105332568704, 0.13535318704004526, 0.13537543253177717, 0.13539777862314542, 0.13541789010537683, 0.13543366529057557, 0.13544786295725444, 0.13546529115488448, 0.1354809765327515, 0.1354997436704509, 0.1355212843919994, 0.13554299619020255, 0.13556718710620444, 0.1355866337817966, 0.1356064609386391, 0.1356312808262259, 0.13565361872505402, 0.13567604798280886, 0.13569390916597868, 0.13571463452845056, 0.13573096220586575, 0.13574333196672989, 0.1357544647515076, 0.13576448425780757, 0.13577350181347753, 0.13578859306000907, 0.13579985003307793, 0.135819281904078, 0.13584142088559711, 0.13586134596896432, 0.1358816036928043, 0.13590216079306983, 0.13591833703449926, 0.13593754594940483, 0.13595483397281982, 0.13597504349151238, 0.13599323205833566, 0.1360072766196671, 0.13602224187367493, 0.13604036089990101, 0.1360612822723048, 0.13608476180508725, 0.13610821853340097, 0.13613165473769284, 0.13615274732155552, 0.13617405579584146, 0.13619323342269882, 0.13621049328687043, 0.13622602716462487, 0.13624465795222293, 0.1362637508098707, 0.13628325953056322, 0.13630081737918648, 0.13631894459175695, 0.1363352951318891, 0.13635233576681757, 0.13636999748706272, 0.13638589303528334, 0.13640019902868192, 0.13641307442274064, 0.1364246622773935, 0.13643509134658105, 0.13644680265765938, 0.13645501768882035, 0.1364600860680557, 0.136462322460558, 0.13646433521381007, 0.13646847184054645, 0.1364721948046092, 0.1364801957698847, 0.13649669723387076, 0.1365115485514582], "dataset": "Cifar10", "nb_examples_train": 42500, "seed": 746562033, "moving_var_accuracy_train": [0.0014463692313407036, 0.0023628118240123157, 0.002982309049353315, 0.003386818504865015, 0.0036277160916235885, 0.003743525305472267, 0.0037559996487347017, 0.003701935551071737, 0.0035926330362366686, 0.003443877904082312, 0.003270548683161163, 0.003086687466574616, 0.0028950620324097454, 0.002704616463181663, 0.002515145483577715, 0.0023308248521036294, 0.002151861110574407, 0.0019817172768468627, 0.001821047997750541, 0.001669166594378779, 0.0015270772351821005, 0.0013951736921786523, 0.0012730270716436057, 0.0011599512840872435, 0.001055957664122121, 0.000960656807627124, 0.0008732554071528204, 0.0007932472981512707, 0.0007200898229580445, 0.0006531075465924916, 0.000592010392703209, 0.0005363262420454118, 0.0004855187999117059, 0.0004394054305889762, 0.0003974993394999786, 0.00035939731164559975, 0.00032484117628467954, 0.00029361463286247644, 0.00026532890431710927, 0.00023972022786426437, 0.00021648479640418253, 0.00019546572166692611, 0.00017651177072757534, 0.00015937005184748877, 0.00014387303132965928, 0.00012989383802015884, 0.00011726788601877469, 0.00010585862300054257, 9.561367023391078e-05, 8.637417766704886e-05, 7.806553007978247e-05, 7.049726219690225e-05, 6.363456006495557e-05, 5.7450959581740253e-05, 5.186239090090551e-05, 4.683449566557662e-05, 4.235238195948146e-05, 3.829168813274433e-05, 3.463134481656055e-05, 3.132637340232719e-05, 2.833718435066839e-05, 2.565533140948946e-05, 2.3217750962491263e-05, 2.098243097527238e-05, 1.8969762282787118e-05, 1.7145822941629327e-05, 1.5471836250691725e-05, 1.3946102548930427e-05, 1.2568866731916761e-05, 1.1324447003035063e-05, 1.0200747260308018e-05, 9.188978756182595e-06, 8.278001893969762e-06, 7.45224680943587e-06, 6.70867866343138e-06, 6.0411235864760675e-06, 5.440465916414394e-06, 4.904123981005537e-06, 4.426679277595251e-06, 3.993134037384232e-06, 3.5980502038321224e-06, 3.25131772200899e-06, 2.9340981927622617e-06, 2.6631314619726124e-06, 2.427996583589861e-06, 2.215079998693978e-06, 2.027237745076494e-06, 1.8541356493241633e-06, 1.6927156441835558e-06, 1.5409826443226853e-06, 1.4046108562312936e-06, 1.2785082164442744e-06, 1.1672392103529035e-06, 1.0623784009379558e-06, 9.671658900217965e-07, 8.822112031774787e-07, 8.134391052370229e-07, 7.515455887503455e-07, 6.921458490453014e-07, 6.373173064171281e-07, 5.884448295135516e-07, 5.485369881665724e-07, 5.146433108380691e-07, 4.82023030051897e-07, 4.5272619674049793e-07, 4.2454205173519664e-07, 4.0752914352309966e-07, 3.9617295686558997e-07, 3.825684194951704e-07, 3.6745562779720804e-07, 3.5562506414171825e-07, 3.4440207248751155e-07, 3.337891931986054e-07, 3.216971931662001e-07, 3.10628298771079e-07, 3.025666631650147e-07, 2.909409642080595e-07, 2.7870041639670883e-07, 2.717802976206977e-07, 2.615717053781933e-07, 2.5084404035664955e-07, 2.433743260064944e-07, 2.274176594252818e-07, 2.1266241098182575e-07, 1.9581571949223218e-07, 1.7980105324380257e-07, 1.6739768573327062e-07, 1.5517507478916073e-07, 1.451988385723609e-07, 1.410570579957985e-07, 1.3412717562798614e-07, 1.2884871252729003e-07, 1.3109868930594794e-07, 1.318413664267572e-07, 1.314042273375692e-07, 1.3161866582216227e-07, 1.323708427887018e-07, 1.304041337843235e-07, 1.2787433074733593e-07, 1.3304656224816844e-07, 1.3977509407114028e-07, 1.5209146100324216e-07, 1.647261826924619e-07, 1.7295087607482747e-07, 1.7980162238758718e-07, 1.8767060980695796e-07, 1.9190869765981433e-07, 1.9135199844900962e-07, 1.993458565492646e-07, 2.0138580782991424e-07, 2.0296372653099786e-07, 2.0215666370287508e-07, 2.0342377562525083e-07, 2.043576852974959e-07, 2.0501321464572164e-07, 2.0346796099838343e-07, 2.0212759934212814e-07, 1.973100513072175e-07, 1.9165571667168014e-07, 1.8879921519750146e-07, 1.8011734068491054e-07, 1.7036602469221845e-07, 1.5793267360140636e-07, 1.4676857364382002e-07, 1.3503572715335646e-07, 1.2464672218111768e-07, 1.182862323181204e-07, 1.1140199679395084e-07, 1.0857677342848631e-07, 1.0564780343407525e-07, 1.0150527604290202e-07, 9.876381882842673e-08, 9.488878396133428e-08, 9.128233102939272e-08, 8.903947418572175e-08, 8.927616592351739e-08, 9.034793209669109e-08, 9.21183495529515e-08, 9.040223997312167e-08, 8.639515581286212e-08, 8.024557735554612e-08, 7.424759395861604e-08, 6.978944869322623e-08, 6.594599046992715e-08, 6.349189791351957e-08, 6.230699653798997e-08, 6.121032486036644e-08, 6.01961619789232e-08, 5.7464499596537526e-08, 5.697907892395374e-08, 5.650197111868707e-08, 5.822161647702583e-08, 6.071943053377602e-08, 5.838878801152646e-08, 5.486102905939118e-08, 5.264877875364052e-08, 5.1667174536535846e-08, 4.9196829390321724e-08, 4.7161845125778215e-08, 4.550528795492062e-08, 4.2238663834860846e-08, 3.955331181828509e-08, 3.802377986400471e-08, 3.761773366510507e-08, 3.826507210020978e-08, 3.8892322011737625e-08, 3.949722000550384e-08, 3.918774346285474e-08, 3.7508677329062925e-08, 3.557197324827664e-08, 3.474845457713369e-08, 3.3487888828904986e-08, 3.3308949062860774e-08, 3.4154078320039886e-08, 3.4981290118969265e-08, 3.6749964860168e-08, 3.6478527098438824e-08, 3.636871972470394e-08, 3.827608913063123e-08, 3.893931573407056e-08, 3.95730285915616e-08, 3.848692251044308e-08, 3.850409610572343e-08, 3.7053023943120754e-08, 3.4724820403333985e-08, 3.2367788435166414e-08, 3.003452415010413e-08, 2.7762918527441708e-08, 2.7036338171578213e-08, 2.5473179338477708e-08, 2.6324239899700157e-08, 2.8103026434061245e-08, 2.8865804315362948e-08, 2.967260226042646e-08, 3.050869137632668e-08, 2.981285931974881e-08, 3.0152415094413575e-08, 2.982705536735029e-08, 3.0520171642674406e-08, 3.044557014617484e-08, 2.9176260458490202e-08, 2.8274263860307668e-08, 2.8401529476710845e-08, 2.950071093835476e-08, 3.1512235981654855e-08, 3.33129753121424e-08, 3.492497882542093e-08, 3.543655478891794e-08, 3.59793589975767e-08, 3.569145544473477e-08, 3.480343610126282e-08, 3.349480471394787e-08, 3.326928046126698e-08, 3.322318733356283e-08, 3.332618024773441e-08, 3.276806465745842e-08, 3.244862071188503e-08, 3.160982010421935e-08, 3.106228724268767e-08, 3.076348577658109e-08, 2.996115327803469e-08, 2.8806990974311848e-08, 2.741827382638583e-08, 2.5884951822846217e-08, 2.427534599763174e-08, 2.3082204662428744e-08, 2.1381364828967463e-08, 1.9474424558730714e-08, 1.7571995165676387e-08, 1.585125622999191e-08, 1.4420135733797835e-08, 1.3102866313130153e-08, 1.2368718689876717e-08, 1.3582531644037522e-08, 1.420933318638439e-08], "duration": 118370.815588, "accuracy_train": [0.12677053773301955, 0.12125777212532299, 0.1210474272679033, 0.1216505240056294, 0.12237095964839424, 0.12306922526762643, 0.12299947080334071, 0.1237671303986711, 0.12381327288667404, 0.12371990644610557, 0.1237896609103913, 0.12444070257705796, 0.12460382348191214, 0.125324259124677, 0.12546376805324844, 0.12578928888658178, 0.12571953442229605, 0.12602108279115912, 0.12630010064830197, 0.12625359767211147, 0.12636985511258766, 0.1266256214816353, 0.12683488487449243, 0.1269042788505906, 0.1271364332433555, 0.12743870258859358, 0.1276247144933555, 0.1278110868863049, 0.12797384730297157, 0.1279970987910668, 0.128113356231543, 0.12820636218392395, 0.12818311069582872, 0.12834587111249537, 0.1284156255767811, 0.1284156255767811, 0.1284853800410668, 0.12869464343392395, 0.1287876493863049, 0.12888065533868587, 0.1288574038505906, 0.12892715831487633, 0.12911317021963825, 0.12918292468392395, 0.12925267914820968, 0.1293921880767811, 0.12948519402916206, 0.12955494849344776, 0.12981071486249537, 0.1299502237910668, 0.13015948718392395, 0.130066481231543, 0.1300435902316353, 0.13015984767211147, 0.13020635064830197, 0.1303458595768734, 0.13064776843392395, 0.13069427141011442, 0.1308105288505906, 0.13090353480297157, 0.13097292877906977, 0.13113568919573643, 0.1311589406838317, 0.13106593473145073, 0.1311589406838317, 0.13118219217192692, 0.131043043731543, 0.1309267862910668, 0.1309267862910668, 0.13090353480297157, 0.13088028331487633, 0.13090353480297157, 0.1309267862910668, 0.1308105288505906, 0.1308105288505906, 0.13088028331487633, 0.13090353480297157, 0.13101979224344776, 0.13113604968392395, 0.13111279819582872, 0.131043043731543, 0.1312290556363049, 0.13118255266011442, 0.1314150675410668, 0.13155421598145073, 0.1316007189576412, 0.13169372491002215, 0.13171697639811739, 0.13171697639811739, 0.13169372491002215, 0.13174022788621262, 0.13174022788621262, 0.13180998235049834, 0.1317867308624031, 0.13180998235049834, 0.1318564853266888, 0.13199599425526026, 0.13204249723145073, 0.13204249723145073, 0.13206574871954596, 0.13211225169573643, 0.13220525764811739, 0.1322750121124031, 0.13229826360049834, 0.1323447665766888, 0.13236801806478407, 0.1325075269933555, 0.13260053294573643, 0.1326237844338317, 0.13264703592192692, 0.13271679038621262, 0.1327632933624031, 0.13280979633859358, 0.1328330478266888, 0.1328795508028793, 0.132949305267165, 0.132949305267165, 0.13297255675526026, 0.1330655627076412, 0.1330655627076412, 0.13308881419573643, 0.13315856866002215, 0.1330655627076412, 0.13308881419573643, 0.13304231121954596, 0.13304195073135844, 0.13311170519564414, 0.13311170519564414, 0.13315820817183463, 0.13327446561231082, 0.13325121412421556, 0.13329771710040605, 0.13343722602897748, 0.1334604775170727, 0.13348372900516794, 0.13353023198135844, 0.1335767349575489, 0.1335767349575489, 0.13359998644564414, 0.13373913488602807, 0.13380888935031376, 0.13392478630260243, 0.13399454076688816, 0.1340177922549834, 0.13406429523117386, 0.13413404969545958, 0.13415730118355482, 0.13415730118355482, 0.13429681011212624, 0.13429681011212624, 0.1343433130883167, 0.13436656457641197, 0.13443631904069767, 0.13448282201688816, 0.13452932499307863, 0.13455257648117386, 0.13459907945736432, 0.13459907945736432, 0.13462233094545958, 0.13469208540974528, 0.13464558243355482, 0.13464558243355482, 0.13459907945736432, 0.13462233094545958, 0.13459907945736432, 0.13462233094545958, 0.13471533689784052, 0.13471533689784052, 0.13480834285022147, 0.1348315943383167, 0.1348315943383167, 0.1348780973145072, 0.1348780973145072, 0.13490134880260243, 0.1349478517787929, 0.13501760624307863, 0.1350641092192691, 0.13511061219545958, 0.13508736070736432, 0.1350641092192691, 0.13501760624307863, 0.13501796673126615, 0.13506446970745664, 0.13508772119555187, 0.13513422417174234, 0.13518072714793283, 0.13520397863602807, 0.1352272301241233, 0.13520397863602807, 0.13527373310031376, 0.13529698458840902, 0.1353663785645072, 0.13541288154069767, 0.13534312707641197, 0.1353198755883167, 0.1353663785645072, 0.13541288154069767, 0.13538963005260243, 0.13541288154069767, 0.1354361330287929, 0.13538963005260243, 0.13541288154069767, 0.13545938451688816, 0.13550588749307863, 0.1355523904692691, 0.13557564195736432, 0.13559889344545958, 0.13559889344545958, 0.13557564195736432, 0.13557564195736432, 0.13562214493355482, 0.13562214493355482, 0.13566864790974528, 0.13571515088593578, 0.135738402374031, 0.13578490535022147, 0.13576165386212624, 0.13578490535022147, 0.1358546598145072, 0.1358546598145072, 0.13587791130260243, 0.1358546598145072, 0.13590116279069767, 0.13587791130260243, 0.1358546598145072, 0.1358546598145072, 0.1358546598145072, 0.1358546598145072, 0.1359244142787929, 0.13590116279069767, 0.13599416874307863, 0.1360406717192691, 0.1360406717192691, 0.13606392320736432, 0.13608717469545958, 0.13606392320736432, 0.13611042618355482, 0.13611042618355482, 0.13615692915974528, 0.13615692915974528, 0.13613367767165005, 0.13615692915974528, 0.13620343213593578, 0.13624957462393872, 0.1362960776001292, 0.13631932908822444, 0.13634258057631968, 0.13634258057631968, 0.1363658320644149, 0.1363658320644149, 0.1363658320644149, 0.1363658320644149, 0.1364123350406054, 0.13643558652870064, 0.13645883801679587, 0.13645883801679587, 0.1364820895048911, 0.13648244999307863, 0.13650570148117386, 0.1365289529692691, 0.1365289529692691, 0.1365289529692691, 0.1365289529692691, 0.1365289529692691, 0.1365289529692691, 0.13655220445736432, 0.1365289529692691, 0.13650570148117386, 0.13648244999307863, 0.13648244999307863, 0.13650570148117386, 0.13650570148117386, 0.13655220445736432, 0.13664521040974528, 0.13664521040974528], "end": "2016-01-24 04:01:37.604000", "learning_rate_per_epoch": [0.00018771670875139534, 9.385835437569767e-05, 6.257223867578432e-05, 4.6929177187848836e-05, 3.754334102268331e-05, 3.128611933789216e-05, 2.681667319848202e-05, 2.3464588593924418e-05, 2.0857412891928107e-05, 1.8771670511341654e-05, 1.7065154679585248e-05, 1.564305966894608e-05, 1.4439747246797197e-05, 1.340833659924101e-05, 1.2514447007561103e-05, 1.1732294296962209e-05, 1.1042159712815192e-05, 1.0428706445964053e-05, 9.879826393444091e-06, 9.385835255670827e-06, 8.938890459830873e-06, 8.532577339792624e-06, 8.16159626992885e-06, 7.82152983447304e-06, 7.5086682045366615e-06, 7.219873623398598e-06, 6.952470812393585e-06, 6.704168299620505e-06, 6.472989753092406e-06, 6.257223503780551e-06, 6.055377525626682e-06, 5.8661471484811045e-06, 5.688385044777533e-06, 5.521079856407596e-06, 5.363334366847994e-06, 5.214353222982027e-06, 5.073424745205557e-06, 4.9399131967220455e-06, 4.813248779100832e-06, 4.6929176278354134e-06, 4.578456355375238e-06, 4.469445229915436e-06, 4.36550499216537e-06, 4.266288669896312e-06, 4.171482487436151e-06, 4.080798134964425e-06, 3.993972313764971e-06, 3.91076491723652e-06, 3.8309531191771384e-06, 3.7543341022683308e-06, 3.6807198284805054e-06, 3.609936811699299e-06, 3.5418247534835245e-06, 3.4762354061967926e-06, 3.4130309813917847e-06, 3.3520841498102527e-06, 3.293275540272589e-06, 3.236494876546203e-06, 3.18163915835612e-06, 3.1286117518902756e-06, 3.0773230719205458e-06, 3.027688762813341e-06, 2.979630380650633e-06, 2.9330735742405523e-06, 2.8879494493594393e-06, 2.8441925223887665e-06, 2.801741857183515e-06, 2.760539928203798e-06, 2.720531938393833e-06, 2.681667183423997e-06, 2.64389723270142e-06, 2.6071766114910133e-06, 2.571461664047092e-06, 2.5367123726027785e-06, 2.5028894015122205e-06, 2.4699565983610228e-06, 2.437879402350518e-06, 2.406624389550416e-06, 2.3761608645145316e-06, 2.3464588139177067e-06, 2.3174902707978617e-06, 2.289228177687619e-06, 2.2616470687353285e-06, 2.234722614957718e-06, 2.208431851613568e-06, 2.182752496082685e-06, 2.1576634026132524e-06, 2.133144334948156e-06, 2.109176421072334e-06, 2.0857412437180756e-06, 2.062821067738696e-06, 2.0403990674822126e-06, 2.018459326791344e-06, 1.9969861568824854e-06, 1.9759654605877586e-06, 1.95538245861826e-06, 1.9352237359271385e-06, 1.9154765595885692e-06, 1.8961284240504028e-06, 1.8771670511341654e-06, 1.8585812995297601e-06, 1.8403599142402527e-06, 1.822492322389735e-06, 1.8049684058496496e-06, 1.7877781601782772e-06, 1.7709123767417623e-06, 1.7543617332194117e-06, 1.7381177030983963e-06, 1.7221716461790493e-06, 1.7065154906958924e-06, 1.6911415059439605e-06, 1.6760420749051264e-06, 1.661209807934938e-06, 1.6466377701362944e-06, 1.63231925398577e-06, 1.6182474382731016e-06, 1.6044162975958898e-06, 1.59081957917806e-06, 1.5774513713040506e-06, 1.5643058759451378e-06, 1.5513777498199488e-06, 1.5386615359602729e-06, 1.5261521184584126e-06, 1.5138443814066704e-06, 1.5017336636446998e-06, 1.4898151903253165e-06, 1.4780843002881738e-06, 1.4665367871202761e-06, 1.45516833072179e-06, 1.4439747246797197e-06, 1.432951989954745e-06, 1.4220962611943833e-06, 1.4114037867329898e-06, 1.4008709285917575e-06, 1.390494162478717e-06, 1.380269964101899e-06, 1.3701949228561716e-06, 1.3602659691969166e-06, 1.3504799198926776e-06, 1.3408335917119985e-06, 1.3313241424839362e-06, 1.32194861635071e-06, 1.3127042848282144e-06, 1.3035883057455067e-06, 1.2945979506184813e-06, 1.285730832023546e-06, 1.2769844488502713e-06, 1.2683561863013892e-06, 1.2598436569533078e-06, 1.2514447007561103e-06, 1.2431570439730422e-06, 1.2349782991805114e-06, 1.2269066473891144e-06, 1.218939701175259e-06, 1.2110755278627039e-06, 1.203312194775208e-06, 1.1956477692365297e-06, 1.1880804322572658e-06, 1.1806082511611748e-06, 1.1732294069588534e-06, 1.1659423080345732e-06, 1.1587451353989309e-06, 1.1516362974361982e-06, 1.1446140888438094e-06, 1.1376770316928742e-06, 1.1308235343676643e-06, 1.1240521189392894e-06, 1.117361307478859e-06, 1.1107497357443208e-06, 1.104215925806784e-06, 1.0977585134241963e-06, 1.0913762480413425e-06, 1.0850676517293323e-06, 1.0788317013066262e-06, 1.0726669188443338e-06, 1.066572167474078e-06, 1.0605464240143192e-06, 1.054588210536167e-06, 1.0486967312317574e-06, 1.0428706218590378e-06, 1.0371088592364686e-06, 1.031410533869348e-06, 1.0257743952024612e-06, 1.0201995337411063e-06, 1.0146849263037439e-06, 1.009229663395672e-06, 1.0038327218353515e-06, 9.984930784412427e-07, 9.932100510923192e-07, 9.879827302938793e-07, 9.828099791775458e-07, 9.7769122930913e-07, 9.726254575070925e-07, 9.676118679635692e-07, 9.626497785575339e-07, 9.577382797942846e-07, 9.528766895527951e-07, 9.480642120252014e-07, 9.433000514036394e-07, 9.385835255670827e-07, 9.33913952394505e-07, 9.292906497648801e-07, 9.247128218703438e-07, 9.201799571201263e-07, 9.156912597063638e-07, 9.112461611948675e-07, 9.06843979464611e-07, 9.024842029248248e-07, 8.981660926110635e-07, 8.938890800891386e-07, 8.896526537682803e-07, 8.854561883708811e-07, 8.812991154627525e-07, 8.771808666097058e-07, 8.731009870643902e-07, 8.690588515491982e-07, 8.650539484733599e-07, 8.610858230895246e-07, 8.571539069635037e-07, 8.532577453479462e-07, 8.493968834955012e-07, 8.455707529719803e-07, 8.417789558734512e-07, 8.380210374525632e-07, 8.342964861185465e-07, 8.30604903967469e-07, 8.269458362519799e-07, 8.233188850681472e-07, 8.1972359566862e-07, 8.16159626992885e-07, 8.126264674501726e-07, 8.091237191365508e-07, 8.056510978349252e-07, 8.022081487979449e-07, 7.987945309650968e-07, 7.9540978958903e-07, 7.920536404526501e-07, 7.887256856520253e-07, 7.854255841266422e-07, 7.821529379725689e-07, 7.789075198161299e-07, 7.756888749099744e-07, 7.72496719037008e-07, 7.693307679801364e-07, 7.661906238354277e-07, 7.630760592292063e-07, 7.599866762575402e-07, 7.569221907033352e-07, 7.538823751929158e-07, 7.508668318223499e-07, 7.478753332179622e-07, 7.449075951626583e-07, 7.41963276595925e-07, 7.390421501440869e-07, 7.361439315900498e-07, 7.332683935601381e-07, 7.304151949938387e-07, 7.27584165360895e-07, 7.247749636007939e-07, 7.219873623398598e-07, 7.192210773609986e-07, 7.164759949773725e-07, 7.137517172850494e-07, 7.110481305971916e-07, 7.083649506967049e-07, 7.057018933664949e-07, 7.030588449197239e-07, 7.004354642958788e-07, 6.978316378081217e-07, 6.952470812393585e-07, 6.926815672159137e-07, 6.901349820509495e-07, 6.876069846839528e-07, 6.850974614280858e-07, 6.826061849096732e-07], "accuracy_valid": [0.1311196936182229, 0.11882000658885541, 0.11754782803087349, 0.1181478845067771, 0.11910385683358433, 0.11812729433358433, 0.11810670416039157, 0.11983627870858433, 0.12057899567018072, 0.12045692535768072, 0.11984657379518072, 0.1203451501317771, 0.12120993740587349, 0.12108786709337349, 0.12108786709337349, 0.12072165615587349, 0.12096579678087349, 0.12145407803087349, 0.12194235928087349, 0.12230857021837349, 0.12230857021837349, 0.12218649990587349, 0.12279685146837349, 0.12279685146837349, 0.12279685146837349, 0.12218649990587349, 0.12194235928087349, 0.12182028896837349, 0.12219679499246988, 0.12219679499246988, 0.12293951195406627, 0.12281744164156627, 0.12293951195406627, 0.12342779320406627, 0.12403814476656627, 0.12416021507906627, 0.12416021507906627, 0.12440435570406627, 0.12440435570406627, 0.12477056664156627, 0.12489263695406627, 0.12476027155496988, 0.12476027155496988, 0.12512648249246988, 0.12462790615587349, 0.12450583584337349, 0.12462790615587349, 0.12450583584337349, 0.1244955407567771, 0.1244955407567771, 0.1243734704442771, 0.1243734704442771, 0.1244955407567771, 0.1243734704442771, 0.1246176110692771, 0.1243734704442771, 0.1244955407567771, 0.1244955407567771, 0.1244955407567771, 0.1244955407567771, 0.1246176110692771, 0.1240072595067771, 0.1242514001317771, 0.1244955407567771, 0.1244955407567771, 0.1243734704442771, 0.1244955407567771, 0.1244955407567771, 0.1247396813817771, 0.1248617516942771, 0.1248617516942771, 0.1249838220067771, 0.1249838220067771, 0.1251058923192771, 0.1254721032567771, 0.1255941735692771, 0.1259706795933735, 0.1260927499058735, 0.1262148202183735, 0.1260927499058735, 0.1258486092808735, 0.1258486092808735, 0.1258486092808735, 0.12634718561746988, 0.12671339655496988, 0.12671339655496988, 0.12683546686746988, 0.12671339655496988, 0.12659132624246988, 0.12659132624246988, 0.12646925592996988, 0.12671339655496988, 0.12695753717996988, 0.12732374811746988, 0.12744581842996988, 0.12768995905496988, 0.12781202936746988, 0.12781202936746988, 0.12781202936746988, 0.12756788874246988, 0.12768995905496988, 0.12768995905496988, 0.12756788874246988, 0.12756788874246988, 0.12744581842996988, 0.12782232445406627, 0.12770025414156627, 0.12782232445406627, 0.12806646507906627, 0.12843267601656627, 0.12831060570406627, 0.12831060570406627, 0.12831060570406627, 0.12831060570406627, 0.12831060570406627, 0.12831060570406627, 0.12831060570406627, 0.12868711172816266, 0.12868711172816266, 0.12918568806475905, 0.12906361775225905, 0.12906361775225905, 0.12894154743975905, 0.12894154743975905, 0.12930775837725905, 0.12930775837725905, 0.12942982868975905, 0.12930775837725905, 0.12930775837725905, 0.12930775837725905, 0.12930775837725905, 0.12942982868975905, 0.12942982868975905, 0.12942982868975905, 0.12942982868975905, 0.12942982868975905, 0.12930775837725905, 0.12930775837725905, 0.12930775837725905, 0.12930775837725905, 0.12930775837725905, 0.12930775837725905, 0.12980633471385541, 0.12980633471385541, 0.12980633471385541, 0.12980633471385541, 0.12992840502635541, 0.12992840502635541, 0.12992840502635541, 0.12980633471385541, 0.12980633471385541, 0.12980633471385541, 0.12992840502635541, 0.12992840502635541, 0.12992840502635541, 0.12992840502635541, 0.12992840502635541, 0.12992840502635541, 0.13005047533885541, 0.13005047533885541, 0.13005047533885541, 0.13005047533885541, 0.12992840502635541, 0.12992840502635541, 0.12992840502635541, 0.12992840502635541, 0.12992840502635541, 0.12992840502635541, 0.12992840502635541, 0.12992840502635541, 0.13017254565135541, 0.13017254565135541, 0.13017254565135541, 0.13005047533885541, 0.13005047533885541, 0.13005047533885541, 0.12992840502635541, 0.12992840502635541, 0.13017254565135541, 0.13005047533885541, 0.13029461596385541, 0.13029461596385541, 0.13066082690135541, 0.13053875658885541, 0.13053875658885541, 0.13053875658885541, 0.13066082690135541, 0.13053875658885541, 0.13053875658885541, 0.13053875658885541, 0.13053875658885541, 0.13053875658885541, 0.13066082690135541, 0.13066082690135541, 0.13066082690135541, 0.13066082690135541, 0.13078289721385541, 0.13090496752635541, 0.13102703783885541, 0.13102703783885541, 0.13114910815135541, 0.13102703783885541, 0.13102703783885541, 0.13114910815135541, 0.13127117846385541, 0.13114910815135541, 0.13114910815135541, 0.13114910815135541, 0.13114910815135541, 0.13114910815135541, 0.13114910815135541, 0.13114910815135541, 0.13114910815135541, 0.13114910815135541, 0.13114910815135541, 0.13114910815135541, 0.13127117846385541, 0.13127117846385541, 0.13127117846385541, 0.13127117846385541, 0.13127117846385541, 0.13127117846385541, 0.13127117846385541, 0.13127117846385541, 0.13139324877635541, 0.13127117846385541, 0.13127117846385541, 0.13127117846385541, 0.13127117846385541, 0.13127117846385541, 0.13127117846385541, 0.13127117846385541, 0.13127117846385541, 0.13114910815135541, 0.13114910815135541, 0.13139324877635541, 0.13139324877635541, 0.13139324877635541, 0.13139324877635541, 0.13139324877635541, 0.13139324877635541, 0.13139324877635541, 0.13113881306475905, 0.13113881306475905, 0.13113881306475905, 0.13113881306475905, 0.13113881306475905, 0.13113881306475905, 0.13113881306475905, 0.13113881306475905, 0.13113881306475905, 0.13113881306475905, 0.13113881306475905, 0.13113881306475905, 0.13138295368975905, 0.13138295368975905, 0.13138295368975905, 0.13126088337725905, 0.13126088337725905, 0.13126088337725905, 0.13126088337725905, 0.13126088337725905, 0.13126088337725905, 0.13138295368975905, 0.13138295368975905, 0.13126088337725905, 0.13126088337725905, 0.13126088337725905, 0.13126088337725905, 0.13138295368975905, 0.13138295368975905, 0.13138295368975905, 0.13138295368975905, 0.13138295368975905, 0.13138295368975905], "accuracy_test": 0.13628194888178913, "start": "2016-01-22 19:08:46.788000", "epoch": [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0], "accuracy_train_last": 0.13664521040974528, "batch_size_eval": 1024, "accuracy_train_std": [0.010433765107672823, 0.008759940253741248, 0.007789143947522928, 0.007551136385825771, 0.008655448438193047, 0.008823146217729673, 0.008451048052518033, 0.008632557555039768, 0.008396100085931932, 0.008371028009925948, 0.007980328387962695, 0.008133555624826257, 0.008122709098563202, 0.007908710354026828, 0.007950458144174827, 0.008239426653829835, 0.008153039994104818, 0.008140179988913674, 0.008435358455352693, 0.008541329531276993, 0.008646445609081498, 0.008470356125675923, 0.008797915145196235, 0.008642766005283811, 0.008689695438748144, 0.008700266327450508, 0.00904137102248313, 0.0090617512833993, 0.00867190638094891, 0.008704425849506259, 0.008662213168534716, 0.00851430583498313, 0.008595977421334442, 0.008755887837651166, 0.008617648872055649, 0.00877172974848842, 0.00864894733725276, 0.00864478371296879, 0.008763936586838054, 0.008923878383501898, 0.00885096617648925, 0.008733570672630088, 0.008712920660453538, 0.008740909778325022, 0.008894241382564162, 0.008740873099323528, 0.00868567636819418, 0.008679437418125947, 0.008780233904666947, 0.008893330982596901, 0.008811029052019604, 0.008704579197209867, 0.008720130019953195, 0.0086057953376278, 0.008690823667234017, 0.008765185981839004, 0.008944794784452809, 0.009039201026571431, 0.009041832501168884, 0.00892050132158384, 0.008965998427411156, 0.008897619885554875, 0.00887770531125653, 0.008785239948368086, 0.008826403023870607, 0.008762322693009172, 0.00876463210593977, 0.008728658342741245, 0.008744252674781443, 0.008664839907491879, 0.008658373455581386, 0.008635965894612931, 0.008652889554733263, 0.008670054261059861, 0.008633310953053764, 0.008629477806146223, 0.008617541151286465, 0.00863064329787136, 0.008644788803309301, 0.008725239104476486, 0.008798246743947817, 0.009041940960916818, 0.008917301339489795, 0.00877484168416044, 0.008588698869888401, 0.008555665825290775, 0.008555063295691251, 0.00868057032388174, 0.008802653866539277, 0.008782940535319974, 0.008716098261705593, 0.008744707690783803, 0.008883017399022738, 0.008968142956483476, 0.008933994591730002, 0.009037612870210333, 0.00902112920115617, 0.009090395429320353, 0.009062877323006322, 0.009020880420644695, 0.0090472255921349, 0.00908898664353122, 0.009169221704311595, 0.00913955237054773, 0.009114688056303876, 0.00913451403734335, 0.009060390960020535, 0.009015315560759712, 0.008989348917972427, 0.008970843394168055, 0.008942706470233758, 0.008981087572785306, 0.008861598841472947, 0.008785660690839404, 0.00878025819963192, 0.008829737759617975, 0.008801404729591596, 0.008835773824434288, 0.008802699572019467, 0.008943446662387068, 0.008959247418709602, 0.008940330833895999, 0.008928200256874075, 0.009024901879770826, 0.009036262641621884, 0.009145248618208188, 0.009166794438263376, 0.009179171290852264, 0.009251464050430829, 0.0092598844935724, 0.009269592693202603, 0.009294187798601932, 0.00928829870975366, 0.009295259350317386, 0.009309476772750166, 0.009419988370955213, 0.009440412896823767, 0.009384929153741025, 0.009323529125454451, 0.009253408109839502, 0.009249840091366878, 0.009241550948773184, 0.009216888817582805, 0.00913840423807254, 0.009218764956954152, 0.009116092100459538, 0.009046418760877717, 0.009033860032330048, 0.009019544333618994, 0.009014507965537913, 0.008991588473803106, 0.009001483607200829, 0.009003044341010681, 0.008954049979761073, 0.008947788089018825, 0.008947103060574477, 0.008917586482782841, 0.008937933384144198, 0.00894722320781736, 0.008979732263760011, 0.008948834149214994, 0.008933596938190147, 0.008986072633271643, 0.008952297428921672, 0.008902295788266934, 0.008883550898337627, 0.00890753604653819, 0.008838441363037653, 0.008830770669555862, 0.008847325493440195, 0.00887295322954747, 0.008875044451071231, 0.008920978037011328, 0.008949878682343428, 0.009007221726044455, 0.008930849339504932, 0.00893450042072966, 0.008998672905599825, 0.009020954904800562, 0.009015459820440157, 0.008923218631014128, 0.008868234026602596, 0.008874467991311575, 0.008862132110655568, 0.008850062932304397, 0.008812002416269235, 0.008788943704137782, 0.008781291100822831, 0.008788943704137782, 0.008770960019196566, 0.008781225954833527, 0.008897610618535291, 0.008899453053993608, 0.008885105462025021, 0.008859716521803304, 0.008877171295946916, 0.008873901849433315, 0.00889473387613838, 0.008909653018551294, 0.008942278975185326, 0.008948182220078553, 0.00894526130353856, 0.008999991055138093, 0.009091691211389002, 0.009142588534838755, 0.009144283303999854, 0.009148401006161934, 0.009148401006161934, 0.009164126889414977, 0.009109453016850483, 0.009120148777128774, 0.009102704119005593, 0.00911815237867307, 0.00908847749302951, 0.009089766021409377, 0.009077167538554604, 0.009063478612193527, 0.009069659934911089, 0.009092817507442093, 0.009125223287052411, 0.009205425229004726, 0.009253711649831986, 0.009253029567482989, 0.009234977552708447, 0.009300216529160514, 0.009300216529160514, 0.009300216529160514, 0.009292889125627854, 0.009280779759360026, 0.009255483198591008, 0.009287708582486509, 0.009342399738433513, 0.009342399738433513, 0.009367115297392533, 0.009394125660001387, 0.009413059926808041, 0.009404114638547768, 0.009404114638547768, 0.009462361638926966, 0.009462361638926966, 0.00947893553006483, 0.009491113977719831, 0.00942895444898676, 0.009478209735281783, 0.009456415956112548, 0.00946102728153227, 0.009448772354468936, 0.009448772354468936, 0.009438850173116626, 0.009438850173116626, 0.009438850173116626, 0.009438850173116626, 0.009433255765874397, 0.009461621063071284, 0.009497020051709196, 0.009497020051709196, 0.009501213370178754, 0.009521498880961144, 0.009532772301074247, 0.00952969017904565, 0.00952969017904565, 0.009462738987914165, 0.009402558300071341, 0.009402558300071341, 0.009402558300071341, 0.009418682125902862, 0.009414625212915835, 0.009439419383594203, 0.00939667290483561, 0.009401504550115567, 0.00944903648792394, 0.00944903648792394, 0.009466775282139229, 0.009549146962963951, 0.009549146962963951], "accuracy_test_std": 0.05783845190878689, "error_valid": [0.8688803063817772, 0.8811799934111446, 0.8824521719691265, 0.8818521154932228, 0.8808961431664156, 0.8818727056664156, 0.8818932958396084, 0.8801637212914156, 0.8794210043298193, 0.8795430746423193, 0.8801534262048193, 0.8796548498682228, 0.8787900625941265, 0.8789121329066265, 0.8789121329066265, 0.8792783438441265, 0.8790342032191265, 0.8785459219691265, 0.8780576407191265, 0.8776914297816265, 0.8776914297816265, 0.8778135000941265, 0.8772031485316265, 0.8772031485316265, 0.8772031485316265, 0.8778135000941265, 0.8780576407191265, 0.8781797110316265, 0.8778032050075302, 0.8778032050075302, 0.8770604880459337, 0.8771825583584337, 0.8770604880459337, 0.8765722067959337, 0.8759618552334337, 0.8758397849209337, 0.8758397849209337, 0.8755956442959337, 0.8755956442959337, 0.8752294333584337, 0.8751073630459337, 0.8752397284450302, 0.8752397284450302, 0.8748735175075302, 0.8753720938441265, 0.8754941641566265, 0.8753720938441265, 0.8754941641566265, 0.8755044592432228, 0.8755044592432228, 0.8756265295557228, 0.8756265295557228, 0.8755044592432228, 0.8756265295557228, 0.8753823889307228, 0.8756265295557228, 0.8755044592432228, 0.8755044592432228, 0.8755044592432228, 0.8755044592432228, 0.8753823889307228, 0.8759927404932228, 0.8757485998682228, 0.8755044592432228, 0.8755044592432228, 0.8756265295557228, 0.8755044592432228, 0.8755044592432228, 0.8752603186182228, 0.8751382483057228, 0.8751382483057228, 0.8750161779932228, 0.8750161779932228, 0.8748941076807228, 0.8745278967432228, 0.8744058264307228, 0.8740293204066265, 0.8739072500941265, 0.8737851797816265, 0.8739072500941265, 0.8741513907191265, 0.8741513907191265, 0.8741513907191265, 0.8736528143825302, 0.8732866034450302, 0.8732866034450302, 0.8731645331325302, 0.8732866034450302, 0.8734086737575302, 0.8734086737575302, 0.8735307440700302, 0.8732866034450302, 0.8730424628200302, 0.8726762518825302, 0.8725541815700302, 0.8723100409450302, 0.8721879706325302, 0.8721879706325302, 0.8721879706325302, 0.8724321112575302, 0.8723100409450302, 0.8723100409450302, 0.8724321112575302, 0.8724321112575302, 0.8725541815700302, 0.8721776755459337, 0.8722997458584337, 0.8721776755459337, 0.8719335349209337, 0.8715673239834337, 0.8716893942959337, 0.8716893942959337, 0.8716893942959337, 0.8716893942959337, 0.8716893942959337, 0.8716893942959337, 0.8716893942959337, 0.8713128882718373, 0.8713128882718373, 0.870814311935241, 0.870936382247741, 0.870936382247741, 0.871058452560241, 0.871058452560241, 0.870692241622741, 0.870692241622741, 0.870570171310241, 0.870692241622741, 0.870692241622741, 0.870692241622741, 0.870692241622741, 0.870570171310241, 0.870570171310241, 0.870570171310241, 0.870570171310241, 0.870570171310241, 0.870692241622741, 0.870692241622741, 0.870692241622741, 0.870692241622741, 0.870692241622741, 0.870692241622741, 0.8701936652861446, 0.8701936652861446, 0.8701936652861446, 0.8701936652861446, 0.8700715949736446, 0.8700715949736446, 0.8700715949736446, 0.8701936652861446, 0.8701936652861446, 0.8701936652861446, 0.8700715949736446, 0.8700715949736446, 0.8700715949736446, 0.8700715949736446, 0.8700715949736446, 0.8700715949736446, 0.8699495246611446, 0.8699495246611446, 0.8699495246611446, 0.8699495246611446, 0.8700715949736446, 0.8700715949736446, 0.8700715949736446, 0.8700715949736446, 0.8700715949736446, 0.8700715949736446, 0.8700715949736446, 0.8700715949736446, 0.8698274543486446, 0.8698274543486446, 0.8698274543486446, 0.8699495246611446, 0.8699495246611446, 0.8699495246611446, 0.8700715949736446, 0.8700715949736446, 0.8698274543486446, 0.8699495246611446, 0.8697053840361446, 0.8697053840361446, 0.8693391730986446, 0.8694612434111446, 0.8694612434111446, 0.8694612434111446, 0.8693391730986446, 0.8694612434111446, 0.8694612434111446, 0.8694612434111446, 0.8694612434111446, 0.8694612434111446, 0.8693391730986446, 0.8693391730986446, 0.8693391730986446, 0.8693391730986446, 0.8692171027861446, 0.8690950324736446, 0.8689729621611446, 0.8689729621611446, 0.8688508918486446, 0.8689729621611446, 0.8689729621611446, 0.8688508918486446, 0.8687288215361446, 0.8688508918486446, 0.8688508918486446, 0.8688508918486446, 0.8688508918486446, 0.8688508918486446, 0.8688508918486446, 0.8688508918486446, 0.8688508918486446, 0.8688508918486446, 0.8688508918486446, 0.8688508918486446, 0.8687288215361446, 0.8687288215361446, 0.8687288215361446, 0.8687288215361446, 0.8687288215361446, 0.8687288215361446, 0.8687288215361446, 0.8687288215361446, 0.8686067512236446, 0.8687288215361446, 0.8687288215361446, 0.8687288215361446, 0.8687288215361446, 0.8687288215361446, 0.8687288215361446, 0.8687288215361446, 0.8687288215361446, 0.8688508918486446, 0.8688508918486446, 0.8686067512236446, 0.8686067512236446, 0.8686067512236446, 0.8686067512236446, 0.8686067512236446, 0.8686067512236446, 0.8686067512236446, 0.868861186935241, 0.868861186935241, 0.868861186935241, 0.868861186935241, 0.868861186935241, 0.868861186935241, 0.868861186935241, 0.868861186935241, 0.868861186935241, 0.868861186935241, 0.868861186935241, 0.868861186935241, 0.868617046310241, 0.868617046310241, 0.868617046310241, 0.868739116622741, 0.868739116622741, 0.868739116622741, 0.868739116622741, 0.868739116622741, 0.868739116622741, 0.868617046310241, 0.868617046310241, 0.868739116622741, 0.868739116622741, 0.868739116622741, 0.868739116622741, 0.868617046310241, 0.868617046310241, 0.868617046310241, 0.868617046310241, 0.868617046310241, 0.868617046310241], "tags": ["deepconvnets", "zoonormalized"], "hp": {"zoom_range": [1, 1], "translation_range": [-3, 3], "momentum": 0.7549236290341994, "shear_range": [1, 1], "patience_check_each": 1, "learning_rate": 0.00018771670851610146, "patience_threshold": 1, "do_flip": true, "batch_size": 32, "optimization": "adadelta", "nb_data_augmentation": 0, "learning_rate_decay_method": "lin", "max_epochs": 1000, "patience_nb_epochs": 50, "weight_decay": 2.271594950938026e-09, "valid_ratio": 0.15, "rotation_range": [0, 0], "learning_rate_decay": 0.09565385345229159}, "accuracy_valid_max": 0.13139324877635541, "code_": "from datetime import datetime\nimport matplotlib as mpl\nmpl.use('Agg')   # NOQA\nfrom lasagnekit.easy import BatchOptimizer, BatchIterator, get_batch_slice\nfrom lasagnekit.nnet.capsule import Capsule\nfrom lasagnekit.easy import iterate_minibatches\nfrom lasagne import updates\nimport theano\nimport theano.tensor as T\n\nimport numpy as np\nimport json\n\nfrom skimage.io import imsave\nfrom lasagnekit.datasets.infinite_image_dataset import Transform\n\n\nclass MyBatchIterator(BatchIterator):\n\n    def __init__(self, nb_data_augmentation=1,  **transform_params):\n        super(MyBatchIterator, self).__init__()\n\n        self.nb_data_augmentation = nb_data_augmentation\n        self.transform_params = transform_params\n\n    def transform(self, batch_index, V):\n        assert self.batch_size is not None\n        assert self.nb_batches is not None\n\n        if isinstance(batch_index, T.TensorVariable):\n            batch_slice = get_batch_slice(batch_index,\n                                          self.batch_size)\n        else:\n            batch_slice = slice(batch_index * self.batch_size,\n                                (batch_index+1) * self.batch_size)\n\n        d = OrderedDict()\n        X = V[\"X\"][batch_slice]\n        y = V[\"y\"][batch_slice]\n\n        X_list = [X]\n        y_list = [y]\n        for i in range(self.nb_data_augmentation):\n            tr, _ = Transform(X.transpose(0, 2, 3, 1),\n                              np.random,\n                              **self.transform_params)\n            imsave(\"out.png\", (((tr[0] + 1) / 2.)))\n            X_transformed = tr.transpose((0, 3, 1, 2))\n            X_list.append(X_transformed)\n            y_list.append(y)\n        d[\"X\"] = np.concatenate(X_list, axis=0)\n        d[\"y\"] = np.concatenate(y_list, axis=0)\n        d[\"X\"], d[\"y\"] = shuffle(d[\"X\"], d[\"y\"])\n        return d\n\n\nif __name__ == \"__main__\":\n    from lasagnekit.datasets.cifar10 import Cifar10\n    from sklearn.utils import shuffle\n    from sklearn.cross_validation import train_test_split\n    from collections import OrderedDict\n\n    from lightexperiments.light import Light\n    from hp_toolkit.hp import (\n            Param, make_constant_param,\n            instantiate_random, instantiate_default\n    )\n    import argparse\n    import vgg  # NOQA\n    import vgg_small  # NOQA\n    import vgg_very_small  # NOQA\n    import spatially_sparse  # NOQA\n    import nin  # NOQA\n    import fully  # NOQA\n    import os\n    import residual  # NOQA\n    import residualv2  # NOQA\n    import residualv3  # NOQA\n    import residualv4  # NOQA\n\n    parser = argparse.ArgumentParser(description='zoo')\n    parser.add_argument(\"--budget-hours\",\n                        default=np.inf,\n                        help=\"nb of maximum hours (defaut=inf)\")\n    parser.add_argument(\"--fast-test\", default=False, type=bool)\n    parser.add_argument(\"--model\", default=\"vgg\", type=str)\n    parser.add_argument(\"--default-model\", default=False, type=bool)\n\n    models = {\n        \"vgg\": vgg,\n        \"vgg_small\": vgg_small,\n        \"vgg_very_small\": vgg_very_small,\n        \"spatially_sparse\": spatially_sparse,\n        \"nin\": nin,\n        \"fully\": fully,\n        \"residual\": residual,\n        \"residualv2\": residualv2,\n        \"residualv3\": residualv3,\n        \"residualv4\": residualv4,\n    }\n    args = parser.parse_args()\n    model_class = models[args.model]\n    budget_sec = args.budget_hours * 3600\n    begin = datetime.now()\n    seed = np.random.randint(0, 1000000000)\n    np.random.seed(seed)\n    fast_test = args.fast_test\n    np.random.seed(seed)\n    rng = np.random\n\n    if args.default_model is True:\n        instantiate = instantiate_default\n    else:\n        instantiate = instantiate_random\n\n    light = Light()\n    light.launch()\n    light.initials()\n    light.file_snapshot()\n    light.set_seed(seed)\n    light.tag(\"deepconvnets\")\n    light.tag(\"zoonormalized\")\n\n    data = Cifar10(batch_indexes=[1, 2, 3, 4, 5])\n    data.load()\n\n    data_test = Cifar10(batch_indexes=[6])\n    data_test.load()\n\n    light.set(\"dataset\", data.__class__.__name__)\n\n    hp = dict(\n        learning_rate=Param(initial=0.001, interval=[-4, -2], type='real', scale='log10'),\n        learning_rate_decay=Param(initial=0.05, interval=[0, 0.1], type='real'),\n        learning_rate_decay_method=Param(initial='sqrt', interval=['exp', 'none', 'sqrt', 'lin'], type='choice'),\n        momentum=Param(initial=0.9, interval=[0.5, 0.99], type='real'),\n        weight_decay=Param(initial=0, interval=[-10, -3], type='real', scale='log10'),\n        max_epochs=make_constant_param(1000),\n        batch_size=Param(initial=32,\n                         interval=[16, 32, 64, 128],\n                         type='choice'),\n        patience_nb_epochs=make_constant_param(50),\n        valid_ratio=make_constant_param(0.15),\n\n        patience_threshold=make_constant_param(1),\n        patience_check_each=make_constant_param(1),\n\n        optimization=Param(initial='adam',\n                           interval=['adam', 'nesterov_momentum', 'adadelta', 'rmsprop'],\n                           type='choice'),\n        # data augmentation\n        nb_data_augmentation=Param(initial=1, interval=[0, 1, 2, 3, 4], type='choice'),\n        zoom_range=make_constant_param((1, 1)),\n        rotation_range=make_constant_param((0, 0)),\n        shear_range=make_constant_param((1, 1)),\n        translation_range=make_constant_param((-3, 3)),\n        do_flip=make_constant_param(True)\n\n    )\n\n    if fast_test is True:\n        instantiate = instantiate_default\n\n    default_params = {}\n    if fast_test is True:\n        default_params[\"max_epochs\"] = 1\n    hp = instantiate(hp, default_params=default_params)\n    light.set(\"hp\", hp)\n\n    hp_model = model_class.params\n    hp_model = instantiate(hp_model)\n    light.set(\"hp_model\", hp_model)\n\n    model = model_class.build_model(\n        input_width=data.img_dim[1],\n        input_height=data.img_dim[2],\n        output_dim=data.output_dim,\n        **hp_model)\n    light.set(\"model\", model_class.__name__)\n    print(model_class.__name__)\n    print(json.dumps(hp, indent=4))\n    print(json.dumps(hp_model, indent=4))\n\n    initial_lr = hp[\"learning_rate\"]\n\n    def evaluate(X, y, batch_size=None):\n        if batch_size is None:\n            batch_size = hp[\"batch_size\"]\n        accs = []\n        for mini_batch in iterate_minibatches(X.shape[0],\n                                              batch_size):\n            acc = (nnet.predict(X[mini_batch]) == y[mini_batch]).mean()\n            accs.append(acc)\n        return accs\n\n    class MyBatchOptimizer(BatchOptimizer):\n\n        def quitter(self, update_status):\n            quit = super(MyBatchOptimizer, self).quitter(update_status)\n            if (datetime.now() - begin).total_seconds() >= budget_sec:\n                print(\"Budget finished.quit.\")\n                quit = True\n            return quit\n\n        def iter_update(self, epoch, nb_batches, iter_update_batch):\n            start = datetime.now()\n            status = super(MyBatchOptimizer, self).iter_update(epoch,\n                                                               nb_batches,\n                                                               iter_update_batch)\n            duration = (datetime.now() - start).total_seconds()\n            status[\"duration\"] = duration\n            accs = evaluate(X_train, y_train, batch_size=self.batch_size_eval)\n            status[\"accuracy_train\"] = np.mean(accs)\n            status[\"accuracy_train_std\"] = np.std(accs)\n            accs = evaluate(X_valid, y_valid, batch_size=self.batch_size_eval)\n            status[\"accuracy_valid\"] = np.mean(accs)\n            status[\"accuracy_valid_std\"] = np.std(accs)\n\n            status[\"error_valid\"] = 1 - status[\"accuracy_valid\"]\n\n            status = self.add_moving_avg(\"accuracy_train\", status)\n            status = self.add_moving_var(\"accuracy_train\", status)\n\n            for k, v in status.items():\n                light.append(k, float(v))\n\n            lr = self.learning_rate\n            lr_decay_method = hp[\"learning_rate_decay_method\"]\n            lr_decay = hp[\"learning_rate_decay\"]\n            cur_lr = lr.get_value()\n            t = status[\"epoch\"]\n\n            if lr_decay_method == \"exp\":\n                new_lr = cur_lr * (1 - lr_decay)\n            elif lr_decay_method == \"lin\":\n                new_lr = initial_lr / (1 + t)\n            elif lr_decay_method == \"sqrt\":\n                new_lr = initial_lr / np.sqrt(1 + t)\n            else:\n                new_lr = cur_lr\n\n            new_lr = np.array(new_lr, dtype=\"float32\")\n            lr.set_value(new_lr)\n\n            light.append(\"learning_rate_per_epoch\",\n                         float(self.learning_rate.get_value()))\n            return status\n\n        def add_moving_avg(self, name, status, B=0.9):\n            if len(self.stats) >= 2:\n                old_avg = self.stats[-2][\"moving_avg_\" + name]\n            else:\n                old_avg = 0\n            avg = B * old_avg + (1 - B) * status[name]\n            status[\"moving_avg_\" + name] = avg\n            return status\n\n        def add_moving_var(self, name, status, B=0.9):\n            if len(self.stats) >= 2:\n                old_avg = self.stats[-2][\"moving_avg_\" + name]\n                old_var = self.stats[-2][\"moving_var_\" + name]\n            else:\n                old_avg = 0\n                old_var = 0\n            new_avg = B * old_avg + (1 - B) * status[name]\n            var = B * old_var + (1 - B) * (status[name] - old_avg) * (status[name] - new_avg)\n            status[\"moving_var_\" + name] = var\n            return status\n\n    learning_rate = theano.shared(np.array(hp[\"learning_rate\"],\n                                  dtype=\"float32\"))\n    momentum = hp[\"momentum\"]\n\n    optim_params = {\"learning_rate\": learning_rate}\n    if \"momentum\" in hp[\"optimization\"]:\n        optim_params[\"momentum\"] = hp[\"momentum\"]\n\n    batch_optimizer = MyBatchOptimizer(\n        verbose=1, max_nb_epochs=hp[\"max_epochs\"],\n        batch_size=hp[\"batch_size\"],\n        optimization_procedure=(getattr(updates, hp[\"optimization\"]),\n                                optim_params),\n        patience_stat=\"error_valid\",\n        patience_nb_epochs=hp[\"patience_nb_epochs\"],\n        patience_progression_rate_threshold=hp[\"patience_threshold\"],\n        patience_check_each=hp[\"patience_check_each\"],\n        verbose_stat_show=[\n            \"epoch\",\n            \"duration\",\n            \"accuracy_train\",\n            \"accuracy_train_std\",\n            \"accuracy_valid\",\n            \"accuracy_valid_std\",\n        ]\n    )\n    batch_size_eval = 1024\n    light.set(\"batch_size_eval\", batch_size_eval)\n    batch_optimizer.learning_rate = learning_rate\n    batch_optimizer.batch_size_eval = batch_size_eval\n\n    input_variables = OrderedDict()\n    input_variables[\"X\"] = dict(tensor_type=T.tensor4)\n    input_variables[\"y\"] = dict(tensor_type=T.ivector)\n    functions = dict(\n        predict=dict(\n            get_output=lambda model, X: (model.get_output(X, deterministic=True)[0]).argmax(axis=1),\n            params=[\"X\"]\n        )\n    )\n\n    def loss_function(model, tensors):\n        X = tensors[\"X\"]\n        y = tensors[\"y\"]\n        y_hat, = model.get_output(X)\n        if hp[\"weight_decay\"] > 0:\n            l1 = sum(T.abs_(param).sum() for param in model.capsule.all_params_regularizable) * hp[\"weight_decay\"]\n        else:\n            l1 = 0\n        return T.nnet.categorical_crossentropy(y_hat, y).mean() + l1\n\n    batch_iterator = MyBatchIterator(hp[\"nb_data_augmentation\"],\n                                     zoom_range=hp[\"zoom_range\"],\n                                     rotation_range=hp[\"rotation_range\"],\n                                     shear_range=hp[\"shear_range\"],\n                                     translation_range=hp[\"translation_range\"],\n                                     do_flip=hp[\"do_flip\"])\n\n    nnet = Capsule(\n        input_variables, model,\n        loss_function,\n        functions=functions,\n        batch_optimizer=batch_optimizer,\n        batch_iterator=batch_iterator,\n    )\n\n    from sklearn.preprocessing import LabelEncoder\n\n    imshape = ([data.X.shape[0]] +\n               list(data.img_dim))\n    X = data.X.reshape(imshape).astype(np.float32)\n    y = data.y\n    label_encoder = LabelEncoder()\n    y = label_encoder.fit_transform(y)\n    y = y.astype(np.int32)\n\n    # rescaling to [-1, 1]\n    X_min = X.min(axis=(0, 2, 3))[None, :, None, None]\n    X_max = X.max(axis=(0, 2, 3))[None, :, None, None]\n    X = 2 * ((X - X_min) / (X_max - X_min)) - 1\n    X, y = shuffle(X, y)\n\n    if fast_test is True:\n        X = X[0:100]\n        y = y[0:100]\n\n    X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=hp[\"valid_ratio\"])\n    light.set(\"nb_examples_train\", X_train.shape[0])\n    light.set(\"nb_examples_valid\", X_valid.shape[0])\n    try:\n        nnet.fit(X=X_train, y=y_train)\n    except KeyboardInterrupt:\n        print(\"interruption...\")\n\n    imshape = ([data_test.X.shape[0]] +\n               list(data_test.img_dim))\n    X_test = data_test.X.reshape(imshape).astype(np.float32)\n    X_test = 2 * ((X_test - X_min) / (X_max - X_min)) - 1\n    y_test = data_test.y\n    y_test = label_encoder.transform(y_test)\n    y_test = y_test.astype(np.int32)\n\n    accs = evaluate(X_test, y_test)\n    m, s = np.mean(accs), np.std(accs)\n    light.set(\"accuracy_test\", m)\n    light.set(\"accuracy_test_std\", s)\n    print(\"Test accuracy : {}+-{}\".format(m, s))\n\n    light.endings()  # save the duration\n\n    if fast_test is False:\n        light.store_experiment()  # update the DB\n    light.close()\n", "nb_examples_valid": 7500, "accuracy_valid_last": 0.13138295368975905, "loss_train": [2.40472412109375, 2.3685178756713867, 2.3455159664154053, 2.334481954574585, 2.3274264335632324, 2.322324514389038, 2.3183670043945312, 2.315164804458618, 2.3124852180480957, 2.310187578201294, 2.308178186416626, 2.3064002990722656, 2.3048110008239746, 2.303377628326416, 2.302072763442993, 2.3008766174316406, 2.299772262573242, 2.2987496852874756, 2.297797918319702, 2.2969067096710205, 2.2960703372955322, 2.2952826023101807, 2.2945399284362793, 2.2938361167907715, 2.29316782951355, 2.292531728744507, 2.291924476623535, 2.291344404220581, 2.2907886505126953, 2.2902557849884033, 2.2897443771362305, 2.289252519607544, 2.2887794971466064, 2.2883236408233643, 2.287883758544922, 2.287459373474121, 2.287048816680908, 2.286651134490967, 2.2862660884857178, 2.2858924865722656, 2.2855303287506104, 2.2851781845092773, 2.2848358154296875, 2.2845029830932617, 2.284179210662842, 2.2838640213012695, 2.283557415008545, 2.2832581996917725, 2.282966136932373, 2.282681465148926, 2.2824037075042725, 2.282132148742676, 2.281867265701294, 2.2816078662872314, 2.2813544273376465, 2.28110671043396, 2.2808642387390137, 2.2806270122528076, 2.2803947925567627, 2.2801671028137207, 2.2799439430236816, 2.279724597930908, 2.2795095443725586, 2.279298782348633, 2.2790920734405518, 2.2788891792297363, 2.2786898612976074, 2.2784948348999023, 2.2783031463623047, 2.2781147956848145, 2.2779300212860107, 2.2777483463287354, 2.2775700092315674, 2.2773947715759277, 2.2772223949432373, 2.2770533561706543, 2.2768867015838623, 2.2767226696014404, 2.2765612602233887, 2.276402711868286, 2.2762467861175537, 2.276092767715454, 2.2759416103363037, 2.275792360305786, 2.2756454944610596, 2.275501012802124, 2.2753584384918213, 2.2752182483673096, 2.2750799655914307, 2.2749435901641846, 2.2748091220855713, 2.2746763229370117, 2.274545669555664, 2.27441668510437, 2.274289608001709, 2.2741641998291016, 2.274040460586548, 2.273918628692627, 2.2737982273101807, 2.273679733276367, 2.273562431335449, 2.273446798324585, 2.2733325958251953, 2.2732200622558594, 2.273108720779419, 2.2729992866516113, 2.272890567779541, 2.2727835178375244, 2.2726778984069824, 2.272573709487915, 2.272470712661743, 2.272368907928467, 2.272268533706665, 2.2721688747406006, 2.27207088470459, 2.2719738483428955, 2.271878242492676, 2.2717833518981934, 2.2716896533966064, 2.271597146987915, 2.27150559425354, 2.2714149951934814, 2.2713253498077393, 2.2712366580963135, 2.271149158477783, 2.2710626125335693, 2.2709767818450928, 2.2708919048309326, 2.2708077430725098, 2.2707247734069824, 2.2706422805786133, 2.2705609798431396, 2.270480155944824, 2.2704005241394043, 2.2703216075897217, 2.2702431678771973, 2.2701656818389893, 2.2700891494750977, 2.2700133323669434, 2.2699382305145264, 2.269864082336426, 2.2697906494140625, 2.2697179317474365, 2.2696454524993896, 2.2695741653442383, 2.269503593444824, 2.2694332599639893, 2.26936411857605, 2.2692954540252686, 2.2692275047302246, 2.2691597938537598, 2.2690930366516113, 2.269026517868042, 2.268960952758789, 2.2688961029052734, 2.268831729888916, 2.268768072128296, 2.268704891204834, 2.2686421871185303, 2.2685799598693848, 2.2685186862945557, 2.2684576511383057, 2.268397331237793, 2.2683374881744385, 2.268278121948242, 2.268219232559204, 2.2681612968444824, 2.26810359954834, 2.2680461406707764, 2.2679896354675293, 2.2679333686828613, 2.2678775787353516, 2.267822265625, 2.2677674293518066, 2.2677130699157715, 2.2676591873168945, 2.267605781555176, 2.2675528526306152, 2.267500162124634, 2.2674484252929688, 2.267396926879883, 2.267345666885376, 2.2672948837280273, 2.267244815826416, 2.267194986343384, 2.2671453952789307, 2.2670960426330566, 2.267047643661499, 2.2669992446899414, 2.266951322555542, 2.2669036388397217, 2.2668564319610596, 2.2668097019195557, 2.266763210296631, 2.2667171955108643, 2.266671657562256, 2.2666263580322266, 2.2665812969207764, 2.2665369510650635, 2.2664926052093506, 2.266448736190796, 2.2664053440093994, 2.266361951828003, 2.2663190364837646, 2.2662763595581055, 2.2662343978881836, 2.2661921977996826, 2.266150712966919, 2.2661094665527344, 2.266068458557129, 2.2660279273986816, 2.2659873962402344, 2.2659473419189453, 2.2659075260162354, 2.2658679485321045, 2.265828847885132, 2.2657902240753174, 2.265751600265503, 2.2657134532928467, 2.2656753063201904, 2.2656373977661133, 2.2656002044677734, 2.2655630111694336, 2.265526056289673, 2.265489339828491, 2.2654531002044678, 2.2654166221618652, 2.265380620956421, 2.2653450965881348, 2.2653098106384277, 2.2652745246887207, 2.2652394771575928, 2.265204906463623, 2.2651705741882324, 2.265136241912842, 2.2651021480560303, 2.265068292617798, 2.2650349140167236, 2.2650015354156494, 2.2649686336517334, 2.2649357318878174, 2.2649033069610596, 2.2648708820343018, 2.264838695526123, 2.2648067474365234, 2.264775037765503, 2.2647435665130615, 2.264712333679199, 2.264681339263916, 2.264650344848633, 2.264620065689087, 2.264589309692383, 2.264559268951416, 2.2645294666290283, 2.2644994258880615, 2.264469861984253, 2.2644405364990234, 2.264411211013794, 2.2643821239471436, 2.2643532752990723, 2.26432466506958, 2.264296054840088, 2.264267921447754, 2.26423978805542, 2.264211893081665, 2.2641842365264893, 2.2641565799713135, 2.264129400253296, 2.2641022205352783, 2.2640750408172607, 2.2640483379364014, 2.264021635055542, 2.2639951705932617, 2.2639687061309814, 2.2639427185058594], "accuracy_train_first": 0.12677053773301955, "model": "residualv4", "loss_std": [0.07589977234601974, 0.07186557352542877, 0.06912396848201752, 0.06803037971258163, 0.0673828199505806, 0.06693897396326065, 0.06661275774240494, 0.06635654717683792, 0.06614833325147629, 0.065972700715065, 0.06582459807395935, 0.06569931656122208, 0.06558959186077118, 0.06549178063869476, 0.0654044970870018, 0.06532444804906845, 0.06525078415870667, 0.06518381088972092, 0.06512201577425003, 0.06506458669900894, 0.06501147896051407, 0.06496208161115646, 0.0649162009358406, 0.06487300992012024, 0.06483244895935059, 0.06479460000991821, 0.0647592693567276, 0.064725860953331, 0.06469421088695526, 0.0646643340587616, 0.0646362379193306, 0.06460974365472794, 0.06458468735218048, 0.06456074863672256, 0.06453797221183777, 0.06451617926359177, 0.06449546664953232, 0.06447570770978928, 0.06445670872926712, 0.06443827599287033, 0.06442055106163025, 0.06440330296754837, 0.06438671052455902, 0.06437067687511444, 0.06435510516166687, 0.06433989852666855, 0.06432537734508514, 0.06431098282337189, 0.06429687887430191, 0.06428311765193939, 0.06426988542079926, 0.06425705552101135, 0.06424462050199509, 0.06423256546258926, 0.06422089040279388, 0.06420955806970596, 0.06419853866100311, 0.06418784707784653, 0.06417740136384964, 0.06416726857423782, 0.06415731459856033, 0.06414759159088135, 0.06413810700178146, 0.06412885338068008, 0.06411990523338318, 0.06411119550466537, 0.06410270929336548, 0.06409452855587006, 0.06408660113811493, 0.06407888233661652, 0.06407131254673004, 0.0640639141201973, 0.06405673921108246, 0.06404975801706314, 0.06404295563697815, 0.0640362948179245, 0.06402977555990219, 0.06402343511581421, 0.06401728838682175, 0.06401120871305466, 0.06400534510612488, 0.06399958580732346, 0.06399403512477875, 0.06398867070674896, 0.06398340314626694, 0.06397824734449387, 0.06397322565317154, 0.06396829336881638, 0.06396342068910599, 0.06395863741636276, 0.06395400315523148, 0.06394953280687332, 0.06394516676664352, 0.06394093483686447, 0.0639367327094078, 0.06393267214298248, 0.06392870098352432, 0.06392477452754974, 0.06392091512680054, 0.06391715258359909, 0.06391342729330063, 0.06390976160764694, 0.06390619277954102, 0.06390274316072464, 0.06389936059713364, 0.06389603018760681, 0.06389273703098297, 0.06388947367668152, 0.06388626247644424, 0.06388310343027115, 0.06387998908758163, 0.06387694180011749, 0.06387397646903992, 0.0638711154460907, 0.06386833637952805, 0.06386560201644897, 0.0638628602027893, 0.06386018544435501, 0.06385758519172668, 0.06385499238967896, 0.0638524666428566, 0.06384997814893723, 0.06384750455617905, 0.06384505331516266, 0.06384265422821045, 0.06384029239416122, 0.0638379380106926, 0.06383563578128815, 0.0638333261013031, 0.06383103132247925, 0.06382877379655838, 0.0638265535235405, 0.0638243705034256, 0.06382222473621368, 0.06382007151842117, 0.06381794065237045, 0.06381586194038391, 0.06381381303071976, 0.06381180137395859, 0.0638098195195198, 0.06380786746740341, 0.0638059452176094, 0.06380406767129898, 0.06380224972963333, 0.06380049139261246, 0.0637986958026886, 0.06379690766334534, 0.06379512697458267, 0.06379339098930359, 0.0637916624546051, 0.06378994137048721, 0.06378824263811111, 0.06378654390573502, 0.06378484517335892, 0.0637831836938858, 0.0637814924120903, 0.063779816031456, 0.06377815455198288, 0.06377651542425156, 0.06377490609884262, 0.06377331912517548, 0.06377173215150833, 0.06377017498016357, 0.06376864016056061, 0.06376712024211884, 0.06376563012599945, 0.06376414746046066, 0.06376269459724426, 0.06376124918460846, 0.06375984102487564, 0.06375844031572342, 0.06375706940889359, 0.06375572085380554, 0.0637543797492981, 0.06375306099653244, 0.06375177204608917, 0.0637504905462265, 0.06374924629926682, 0.06374803930521011, 0.06374683231115341, 0.06374563276767731, 0.06374446302652359, 0.06374328583478928, 0.06374210864305496, 0.06374094635248184, 0.06373980641365051, 0.06373867392539978, 0.06373754888772964, 0.0637364313006401, 0.06373534351587296, 0.0637342631816864, 0.06373320519924164, 0.06373212486505508, 0.06373105943202972, 0.06373001635074615, 0.0637289509177208, 0.06372790783643723, 0.06372688710689545, 0.06372588872909546, 0.06372489780187607, 0.06372391432523727, 0.06372294574975967, 0.06372198462486267, 0.06372103095054626, 0.06372009217739105, 0.06371916085481644, 0.06371824443340302, 0.06371734291315079, 0.06371644139289856, 0.06371553987264633, 0.0637146607041359, 0.06371378898620605, 0.06371293216943741, 0.06371207535266876, 0.06371121853590012, 0.06371036171913147, 0.06370951235294342, 0.06370865553617477, 0.06370782852172852, 0.06370698660612106, 0.06370613723993301, 0.06370529532432556, 0.0637044608592987, 0.06370360404253006, 0.06370275467634201, 0.06370192021131516, 0.0637010931968689, 0.06370027363300323, 0.06369945406913757, 0.0636986494064331, 0.06369785219430923, 0.06369706243276596, 0.06369626522064209, 0.06369548290967941, 0.06369473040103912, 0.06369398534297943, 0.06369324773550034, 0.06369249522686005, 0.06369175016880035, 0.06369099020957947, 0.06369024515151978, 0.06368950009346008, 0.06368876993656158, 0.06368803232908249, 0.06368730217218399, 0.06368657946586609, 0.06368587166070938, 0.06368515640497208, 0.06368444859981537, 0.06368371844291687, 0.06368301063776016, 0.06368229538202286, 0.06368159502744675, 0.06368090212345123, 0.06368020921945572, 0.0636795237660408, 0.06367884576320648, 0.06367818266153336, 0.06367752701044083, 0.0636768639087677, 0.06367620080709457, 0.06367554515600204, 0.06367488205432892, 0.06367423385381699, 0.06367357075214386, 0.06367290765047073, 0.0636722519993782, 0.06367160379886627, 0.06367095559835434, 0.063670314848423, 0.06366967409849167, 0.06366903334856033, 0.0636684000492096, 0.06366776674985886, 0.06366713345050812]}, "state": "available", "life": [{"dt": "Sun May 15 22:05:10 2016", "state": "available"}], "summary": "b6c92f6f5f7fad63c0f9476aa09e11cf"}