{"content": {"hp_model": {"f0": 32, "f1": 64, "f2": 16, "f3": 32, "nonlin": "very_leaky_rectify", "nbg1": 5, "nbg3": 5, "nbg2": 5, "fs0": 3, "fs1": 3, "fs2": 3, "fs3": 3, "pg2": 2, "pg3": 2, "pg1": 2}, "loss_train": [1.5228625535964966, 1.1124355792999268, 0.914308488368988, 0.8044248223304749, 0.728173553943634, 0.6686564683914185, 0.618507981300354, 0.5762231945991516, 0.5375553369522095, 0.5013726353645325, 0.4674763083457947, 0.4356485903263092, 0.40515363216400146, 0.3750724792480469, 0.3464817404747009, 0.3211779296398163, 0.2983959913253784, 0.2780919671058655, 0.2610805332660675, 0.24645203351974487, 0.23015783727169037, 0.21835003793239594, 0.2086997777223587, 0.19889141619205475, 0.18931998312473297, 0.17948271334171295, 0.17468774318695068, 0.16794301569461823, 0.1599748730659485, 0.1579606980085373, 0.15426330268383026, 0.14503076672554016, 0.14082133769989014, 0.1396668702363968, 0.13604013621807098, 0.1338631808757782, 0.12895604968070984, 0.12851275503635406, 0.12445242702960968, 0.12429872900247574, 0.12282094359397888, 0.12055313587188721, 0.11820339411497116, 0.1157899796962738, 0.11265376955270767, 0.11303509026765823, 0.11071815341711044, 0.10823018848896027, 0.11058174073696136, 0.10845380276441574, 0.1091458797454834, 0.10615113377571106, 0.10486618429422379, 0.10464078933000565, 0.10232973098754883, 0.10298027098178864, 0.10004233568906784, 0.10119950026273727, 0.10129724442958832, 0.09659469127655029, 0.09693586081266403, 0.09462685883045197, 0.09485450387001038, 0.09572168439626694, 0.09485824406147003, 0.09269585460424423, 0.09408009052276611, 0.09256777912378311, 0.09193394333124161, 0.08916030079126358, 0.08928992599248886, 0.08916757255792618, 0.08756952732801437, 0.08625771850347519, 0.08854321390390396, 0.08658236265182495, 0.08537790924310684, 0.0847892016172409, 0.08465892821550369, 0.08471410721540451, 0.08464343100786209, 0.08380793035030365, 0.08441386371850967, 0.08256208151578903, 0.08141545951366425, 0.08030442148447037, 0.08198696374893188, 0.08092750608921051, 0.07909445464611053, 0.07877221703529358, 0.07876556366682053, 0.07799391448497772, 0.07710925489664078, 0.0752866268157959, 0.07685405015945435, 0.07663125544786453, 0.07619011402130127, 0.07446930557489395, 0.07428675889968872, 0.07444021105766296, 0.07354556769132614, 0.07260794192552567, 0.07129646092653275, 0.07073581963777542, 0.06920618563890457, 0.07044995576143265, 0.06967093050479889, 0.06920019537210464, 0.06826043128967285, 0.06813248991966248, 0.06979991495609283, 0.06798054277896881, 0.06699640303850174, 0.06610262393951416, 0.06547264009714127, 0.06355898082256317, 0.062651127576828, 0.061641890555620193, 0.06091829761862755, 0.06026899069547653, 0.05963875353336334, 0.05901927500963211, 0.058409541845321655, 0.057809121906757355, 0.05721772462129593, 0.05663512647151947, 0.056061096489429474, 0.055495452135801315, 0.054938048124313354, 0.054388683289289474, 0.05384724587202072, 0.05331357568502426, 0.05278751254081726, 0.052268918603658676, 0.05175766348838806, 0.051253583282232285, 0.05075657740235329, 0.05026650428771973, 0.04978325217962265, 0.04930666834115982, 0.04883662238717079, 0.04837304353713989, 0.047915782779455185, 0.04746471717953682, 0.04701976478099823, 0.04658078774809837, 0.04614768922328949, 0.045720379799604416, 0.04529872536659241, 0.044882647693157196, 0.04447203502058983, 0.04406680166721344, 0.04366684705018997, 0.04327206686139107, 0.04288238659501076, 0.042497728019952774, 0.04211799427866936, 0.04174308851361275, 0.04137292504310608, 0.04100744426250458, 0.040646541863679886, 0.04029015451669693, 0.03993818536400795, 0.039590559899806976, 0.03924722597002983, 0.03890809789299965, 0.03857310488820076, 0.03824217617511749, 0.037915267050266266, 0.03759226202964783, 0.03727314993739128, 0.03695783019065857, 0.036646272987127304, 0.03633839264512062, 0.03603411465883255, 0.0357334241271019, 0.035436250269412994, 0.03514253720641136, 0.03485221788287163, 0.03456522524356842, 0.03428151458501816, 0.034001100808382034, 0.0337238609790802, 0.033449746668338776, 0.033178720623254776], "moving_avg_accuracy_train": [0.054946150274547786, 0.1099098202750092, 0.16729470558208745, 0.22406436047953576, 0.27788866715260474, 0.32906677467253254, 0.37699823945103417, 0.4221591488254213, 0.4641474706884495, 0.5028596839543683, 0.538142418118686, 0.570459384634383, 0.5998446347437575, 0.6263098528862145, 0.6509888182251309, 0.673169624046813, 0.693725190135118, 0.711532521562267, 0.7292329025501894, 0.7451424272464902, 0.7595377654326938, 0.7729050850907441, 0.7861260047781905, 0.7979227782910046, 0.8094395267977291, 0.8199883232585523, 0.82921710101137, 0.8375462885258199, 0.8463818069542918, 0.8553799823577459, 0.862899558411377, 0.8698508636155974, 0.8765277099898257, 0.8819208154385637, 0.8874883589293142, 0.8927177481079037, 0.8975844173435787, 0.9018295970735527, 0.9062105836448058, 0.9106650763946663, 0.9143346481433503, 0.918255788349318, 0.9217360945561451, 0.9248798156422434, 0.9275812093375706, 0.9305519702848121, 0.9331093976968532, 0.9355784930819759, 0.9382378069047769, 0.9404311544500411, 0.942944818057501, 0.9442700803339767, 0.9456718274339309, 0.9473357226655748, 0.9484148457836149, 0.9493581548041368, 0.9512578838915987, 0.9521260803965418, 0.9536677809117049, 0.9551296079908003, 0.9561826186929661, 0.957732541866582, 0.9585415352228364, 0.9600090626137125, 0.9614856222357392, 0.9625308216919826, 0.96285065042164, 0.9634757149533502, 0.9646403063294622, 0.9657396999882288, 0.9668174017894244, 0.9675270248902901, 0.9684378362382396, 0.969231917716852, 0.9697418698059088, 0.9705542853539262, 0.9712670023519407, 0.9721709731727175, 0.9726287991435595, 0.9735501222042405, 0.9740096503469579, 0.9745231710253942, 0.9751667372919485, 0.9748368497961424, 0.9755746062213362, 0.9761455450028109, 0.9766407526668432, 0.9772701623692435, 0.9775273863097369, 0.9779076973799906, 0.978156971390838, 0.9785347057243917, 0.9789932852626945, 0.979603572398339, 0.9796227329406664, 0.9799353794740269, 0.9803167427528608, 0.9808250913181064, 0.981008165369666, 0.9814797435124705, 0.9817367891755276, 0.9819169769984695, 0.9823325872593552, 0.9831368250727331, 0.9835769709500113, 0.9841498495979042, 0.9845421353964656, 0.9848719771758944, 0.9846085820607413, 0.9850178096796949, 0.9850560155034382, 0.9854786284983602, 0.9853961674342385, 0.9856382808610804, 0.9861723671345147, 0.9867949149068053, 0.9875783861387621, 0.9884834369963237, 0.9893352211979003, 0.9901111275745573, 0.9908071181647391, 0.9914381599935217, 0.9920084227882355, 0.9925332850475257, 0.9930079862296963, 0.9934375424424595, 0.9938241430339463, 0.994179059012713, 0.9945008085424125, 0.9947903831191421, 0.9950533253870083, 0.9952853231304687, 0.9954964462483927, 0.9956934325009529, 0.9958823458723046, 0.9960523679065212, 0.9962100380349351, 0.9963658920433649, 0.9965084857997611, 0.9966344950317083, 0.9967479033404607, 0.9968569462647665, 0.9969550848966418, 0.9970434096653293, 0.9971229019571481, 0.9971897947221661, 0.9972569736571107, 0.9973104592521325, 0.9973609214364615, 0.9974063374023576, 0.9974472117716641, 0.9974839987040399, 0.9975240823896068, 0.997564808004236, 0.9975991359085927, 0.9976323561713234, 0.997662254407781, 0.9976914879694023, 0.9977247736212901, 0.9977524055591795, 0.9977772743032801, 0.9978019813217801, 0.9978288679360492, 0.9978530658888913, 0.9978748440464493, 0.997896769537061, 0.9979165024786114, 0.9979342621260069, 0.9979502458086628, 0.9979669562718625, 0.9979819956887424, 0.9979908808663152, 0.9979965523773211, 0.9980016567372265, 0.9980062506611413, 0.9980103851926647, 0.9980141062710357, 0.9980174552415696, 0.9980181441662406, 0.9980257396448731, 0.9980325755756423, 0.9980410530621441, 0.9980463576511862, 0.9980603963277436, 0.9980660917390353], "dataset": "Cifar10", "nb_examples_train": 42500, "moving_avg_accuracy_valid": [0.05397155026355421, 0.10818074054028613, 0.16391201818994727, 0.21820849874105797, 0.26951173701642506, 0.3177426392748729, 0.3624007160382742, 0.40357572467729314, 0.44139109789856984, 0.4757036364991496, 0.5063976977362828, 0.5343448832055009, 0.5590883410445894, 0.5809312365146786, 0.6006030789776686, 0.6182487610554289, 0.6335530559306842, 0.6469271778131429, 0.6599139769275365, 0.6713619264674635, 0.6814972711418769, 0.6902772844738488, 0.6991223264048525, 0.7068326935384637, 0.7141839744952347, 0.7208723400351691, 0.7264197657643329, 0.7313311177364689, 0.736380952593093, 0.7416410183371722, 0.7462906577967532, 0.7502057491142164, 0.7536997696941351, 0.7565056798670409, 0.7593779434409542, 0.7625275926209552, 0.7656175950305464, 0.7670597947236514, 0.7692265326835152, 0.7712142474498023, 0.7726481573245509, 0.7747871384200327, 0.7768688537948969, 0.778256175399594, 0.7790682531721346, 0.7805366925857192, 0.7820496295959726, 0.7831121271032428, 0.7846807854396053, 0.7860528683226026, 0.7875004099918483, 0.7879456167806906, 0.7883065932709197, 0.7888431096780144, 0.7890950703593094, 0.789047103233017, 0.7901433047602424, 0.7900241938342935, 0.7904448377980027, 0.7907410566725699, 0.7909822100885208, 0.791642819322515, 0.7918355651105196, 0.792496288061064, 0.7925761843867347, 0.7928423740711787, 0.7929060458790458, 0.792540075374349, 0.7932188850432395, 0.7937311279865811, 0.7944220212120193, 0.7946573181495523, 0.7948507013101243, 0.7950787218229372, 0.7953704190118783, 0.7953815992963079, 0.7956897778455928, 0.7953872310192414, 0.7955951311289136, 0.796428184375209, 0.7965919947968749, 0.7966347084384224, 0.7965418148253784, 0.7962649570909581, 0.7967879166247087, 0.7971476874151746, 0.7978774016838228, 0.7977905451280158, 0.7980185795176993, 0.7978127423678872, 0.7977495592455564, 0.797416050751347, 0.797520784155128, 0.7981511240848711, 0.7982545628341401, 0.7983273616806207, 0.7984671523386129, 0.7986579700490287, 0.7982630350076048, 0.798621778334781, 0.7985968204749475, 0.7992366266145763, 0.7992610767166729, 0.8001752245984695, 0.8006073326920864, 0.801214927030182, 0.8013659893911699, 0.8017491746670379, 0.801300584384069, 0.8018531196015356, 0.8016972515890477, 0.8019231813153086, 0.8016525028675127, 0.8016987724885174, 0.8018777810171506, 0.8020835987832818, 0.8026147496824385, 0.8031751461844506, 0.8037761297776019, 0.8042193587614381, 0.8046548859406407, 0.805010239308173, 0.805305643276452, 0.8055959209104032, 0.8059182059372092, 0.8062326765238346, 0.8065279070830474, 0.8068312651887487, 0.8071164945151298, 0.8073609938776228, 0.8076054573663666, 0.807825474506236, 0.808085554597028, 0.8083694843124005, 0.8086992927523955, 0.8089483217320506, 0.8091846548449901, 0.8094217687091357, 0.8096107571243667, 0.8097808466980747, 0.8099339273144117, 0.8100472858066151, 0.8101493084495981, 0.8102289217970329, 0.8103005738097242, 0.8103650606211464, 0.8104230987514264, 0.8104997471311783, 0.8105443166104551, 0.8106210502355542, 0.8106524598957338, 0.8106441074961453, 0.8106610043990157, 0.810639590517849, 0.810632525056049, 0.810650580202929, 0.8107156579601211, 0.8107874644815036, 0.8108642973819978, 0.8109212399611926, 0.8109735177911276, 0.8109462961419094, 0.8109350331975227, 0.8109126895163246, 0.8108925802032463, 0.8108744818214759, 0.8108093651528826, 0.8107263460886486, 0.8106638359620879, 0.8106319909106834, 0.8106033303644193, 0.8105897429040316, 0.8105531001271827, 0.8105079145967686, 0.810479454650646, 0.8104538406991356, 0.8104185811115263, 0.8103624334201779, 0.8103241075292144, 0.8102652001648472, 0.8101999765056667, 0.8101412752124042, 0.810088444048468, 0.8100286889696755, 0.8099382883050122], "moving_var_accuracy_train": [0.027171714869938697, 0.05164358856222143, 0.07611645526135802, 0.0975099531898006, 0.1138324617703497, 0.12602200379720632, 0.1340966312598004, 0.13904253775351486, 0.14100545653402263, 0.14039262998413418, 0.13755720895670998, 0.13320096498402906, 0.12765230480154063, 0.1211907442633371, 0.11455313180879832, 0.10752571195001102, 0.10057592242990601, 0.09337223965992235, 0.08685474707798857, 0.08044728915474954, 0.07426759209273116, 0.06844899999702253, 0.06317723445375746, 0.05811198579619539, 0.05349450668208014, 0.049146549974819015, 0.04499842802663524, 0.041122963505829536, 0.037713264628345386, 0.034670642610832796, 0.031712474565986595, 0.028976112905767924, 0.026479724112736552, 0.02409352197889376, 0.02196314764569697, 0.020012951481757607, 0.018224816558627045, 0.01656452886122238, 0.01508081336513764, 0.013751314579550915, 0.012497374932964482, 0.01138601550430174, 0.010356426735511083, 0.009409730902364586, 0.008534435563202507, 0.007760420792333152, 0.007043242627810571, 0.006393786253217024, 0.005818055177968583, 0.005279546621260577, 0.004808458501717734, 0.0043434195324590094, 0.003926761633603177, 0.0035590023963198427, 0.0032135827170228573, 0.002900232932494353, 0.002642690374696658, 0.0023852052237677518, 0.0021680762656970643, 0.001970501084809944, 0.0017834304601788316, 0.0016267077707579531, 0.0014699272259363304, 0.0013423172331294448, 0.0012277075646730967, 0.0011147687853357696, 0.0010042125205490212, 0.0009073076195133371, 0.0008287833152218337, 0.0007567829814520762, 0.0006915576538575703, 0.0006269339729793523, 0.000571706771485401, 0.0005202111828889376, 0.00047053052479824423, 0.00042941764352236455, 0.00039104756884345796, 0.0003592972811624546, 0.00032525399462240555, 0.00030036812079944783, 0.00027223180374504627, 0.00024738195475517745, 0.00022637135713468, 0.0002047136532602152, 0.0001891408488204265, 0.00017316050376811048, 0.00015805152906594652, 0.00014581178532063153, 0.00013182608418863554, 0.00011994520436118964, 0.00010850992171742613, 9.894307858639086e-05, 9.094142746430193e-05, 8.519933820927085e-05, 7.668270852578429e-05, 6.989416836660667e-05, 6.421369308393271e-05, 6.011808814962373e-05, 5.4407924309851446e-05, 5.096860538180513e-05, 4.646639709969293e-05, 4.2111966253552455e-05, 3.94553566287793e-05, 4.1331007110102906e-05, 3.89414619386575e-05, 3.8001025251696416e-05, 3.558591605630318e-05, 3.300648484578333e-05, 3.0330229241383688e-05, 2.8804411514274883e-05, 2.5937107527558552e-05, 2.495081246609484e-05, 2.2516929663350153e-05, 2.0792806900129423e-05, 2.128075953735421e-05, 2.26407751426736e-05, 2.5901142170143982e-05, 3.068308144608626e-05, 3.414460023597645e-05, 3.614841656041171e-05, 3.689320101896468e-05, 3.6787805024128303e-05, 3.603582141702973e-05, 3.4911562796371184e-05, 3.344847742792204e-05, 3.1764296544440326e-05, 2.9933007046037774e-05, 2.8073394509289254e-05, 2.619775989711723e-05, 2.4332664826798587e-05, 2.2521646070194078e-05, 2.075388803991152e-05, 1.907965597421781e-05, 1.7520922630075206e-05, 1.609002472394701e-05, 1.4741189680624562e-05, 1.3490809537108768e-05, 1.2360342830890364e-05, 1.130730536207009e-05, 1.031947976468618e-05, 9.403284788664267e-06, 8.569969543868129e-06, 7.799653309078232e-06, 7.089899361043905e-06, 6.437780645067054e-06, 5.8342743586660505e-06, 5.2914640065022e-06, 4.7880639857253804e-06, 4.3321754755781515e-06, 3.917521417644836e-06, 3.5408057024762e-06, 3.1989046377712186e-06, 2.8934744906316955e-06, 2.6190542227508695e-06, 2.3677544456335297e-06, 2.140911273773195e-06, 1.934865287285317e-06, 1.7490701686823879e-06, 1.5841345634084805e-06, 1.4325928229913698e-06, 1.2948996305904582e-06, 1.1709035983998326e-06, 1.0603192488015058e-06, 9.595571922170948e-07, 8.678700663149314e-07, 7.854096039304793e-07, 7.103731443775343e-07, 6.421744756202634e-07, 5.802563310594267e-07, 5.247438541766515e-07, 4.743051252997523e-07, 4.2758513019427754e-07, 3.851161115086695e-07, 3.4683899076819667e-07, 3.1234502892379624e-07, 2.8126437518967625e-07, 2.532625554888991e-07, 2.2803724037274377e-07, 2.0523778789029052e-07, 1.852332307621715e-07, 1.6713047723129164e-07, 1.5106423950466371e-07, 1.3621106353835163e-07, 1.2436371713983224e-07, 1.1221928481388554e-07], "duration": 76219.78987, "accuracy_train": [0.549461502745478, 0.604582850279162, 0.6837586733457918, 0.7349912545565707, 0.7623074272102253, 0.7896697423518827, 0.808381422457549, 0.8286073331949059, 0.8420423674557033, 0.8512696033476375, 0.8556870255975452, 0.8613120832756552, 0.8643118857281286, 0.8644968161683279, 0.8730995062753784, 0.8727968764419527, 0.8787252849298633, 0.8717985044066077, 0.8885363314414912, 0.8883281495131967, 0.8890958091085271, 0.8932109620131967, 0.9051142819652085, 0.9040937399063308, 0.9130902633582503, 0.9149274914059615, 0.9122761007867294, 0.9125089761558692, 0.9259014728105389, 0.9363635609888336, 0.9305757428940569, 0.9324126104535806, 0.9366193273578812, 0.9304587644772055, 0.9375962503460686, 0.9397822507152085, 0.9413844404646549, 0.9400362146433187, 0.9456394627860835, 0.950755511143411, 0.9473607938815062, 0.9535460502030271, 0.9530588504175894, 0.9531733054171282, 0.951893752595515, 0.9572888188099853, 0.9561262444052234, 0.9578003515480805, 0.9621716313099853, 0.9601712823574198, 0.96556779052464, 0.9561974408222591, 0.958287551333518, 0.9623107797503692, 0.9581269538459765, 0.9578479359888336, 0.968355445678756, 0.95993984894103, 0.9675430855481728, 0.9682860517026578, 0.9656597150124585, 0.9716818504291252, 0.9658224754291252, 0.9732168091315985, 0.9747746588339794, 0.9719376167981728, 0.9657291089885567, 0.9691012957387413, 0.9751216287144703, 0.9756342429171282, 0.9765167180001846, 0.9739136327980805, 0.976635138369786, 0.9763786510243633, 0.9743314386074198, 0.9778660252860835, 0.9776814553340717, 0.9803067105597084, 0.976749232881137, 0.9818420297503692, 0.9781454036314139, 0.9791448571313216, 0.9809588336909376, 0.9718678623338871, 0.9822144140480805, 0.9812839940360835, 0.9810976216431341, 0.9829348496908453, 0.9798424017741787, 0.9813304970122739, 0.9804004374884644, 0.981934314726375, 0.9831205011074198, 0.98509615661914, 0.9797951778216132, 0.982749198274271, 0.9837490122623662, 0.9854002284053157, 0.9826558318337025, 0.9857239467977114, 0.9840502001430418, 0.9835386674049464, 0.9860730796073275, 0.9903749653931341, 0.987538283845515, 0.9893057574289406, 0.988072707583518, 0.987840553190753, 0.9822380260243633, 0.9887008582502769, 0.9853998679171282, 0.9892821454526578, 0.9846540178571429, 0.9878173017026578, 0.9909791435954227, 0.9923978448574198, 0.994629627226375, 0.996628894714378, 0.9970012790120893, 0.9970942849644703, 0.997071033476375, 0.9971175364525655, 0.9971407879406607, 0.997257045381137, 0.9972802968692323, 0.9973035483573275, 0.9973035483573275, 0.9973733028216132, 0.9973965543097084, 0.9973965543097084, 0.9974198057978036, 0.9973733028216132, 0.9973965543097084, 0.9974663087739941, 0.9975825662144703, 0.9975825662144703, 0.9976290691906607, 0.9977685781192323, 0.9977918296073275, 0.9977685781192323, 0.9977685781192323, 0.997838332583518, 0.997838332583518, 0.997838332583518, 0.997838332583518, 0.9977918296073275, 0.9978615840716132, 0.9977918296073275, 0.9978150810954227, 0.9978150810954227, 0.9978150810954227, 0.9978150810954227, 0.9978848355597084, 0.9979313385358989, 0.9979080870478036, 0.9979313385358989, 0.9979313385358989, 0.9979545900239941, 0.9980243444882798, 0.9980010930001846, 0.9980010930001846, 0.9980243444882798, 0.9980708474644703, 0.9980708474644703, 0.9980708474644703, 0.9980940989525655, 0.9980940989525655, 0.9980940989525655, 0.9980940989525655, 0.9981173504406607, 0.9981173504406607, 0.9980708474644703, 0.998047595976375, 0.998047595976375, 0.998047595976375, 0.998047595976375, 0.998047595976375, 0.998047595976375, 0.9980243444882798, 0.9980940989525655, 0.9980940989525655, 0.9981173504406607, 0.9980940989525655, 0.9981867444167589, 0.9981173504406607], "end": "2016-02-02 06:57:11.431000", "epoch": [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0], "moving_var_accuracy_valid": [0.026216354140662236, 0.050042445520726356, 0.0729919787448263, 0.09222575107247794, 0.10669137628308195, 0.11695821804874931, 0.12321149062572695, 0.12614877359096383, 0.12640391829864753, 0.12435967921572927, 0.1204028398512163, 0.11539196244695256, 0.10936291455477004, 0.10272063184194824, 0.09593140113075167, 0.08914059188158102, 0.0823345256680818, 0.07571087732641538, 0.06965770215491236, 0.06387143187743959, 0.05840881559471805, 0.05326173174223269, 0.04863967146886034, 0.04431075217398994, 0.04036604894193942, 0.03673205215010751, 0.03333581232508206, 0.030219323496321688, 0.02742689863540211, 0.024933223396550224, 0.022634473380832035, 0.020508977502965518, 0.01856795337098503, 0.016782016220972272, 0.015178063681217312, 0.013749539922709308, 0.012460518964459894, 0.011233186527607035, 0.010152120655326764, 0.009172467679723127, 0.008273725789510931, 0.00748753037170129, 0.006777779184648675, 0.00611732321729754, 0.005511526128345676, 0.00497978034431343, 0.004502403115455037, 0.004062322912486132, 0.0036782368220236736, 0.0033273566427616343, 0.003013479370443296, 0.0027139153151624477, 0.002443696519884686, 0.002201917516591955, 0.0019822971225970268, 0.0017840881179441669, 0.0016164942262443722, 0.0014549724903340586, 0.0013110677133984978, 0.0011807506526534967, 0.00106319898211837, 0.0009608067249468799, 0.0008650604109013332, 0.000782483363167585, 0.0007042924776565277, 0.0006345009424238145, 0.0005710873350734866, 0.0005151840112589098, 0.0004678126532322307, 0.00042339292340603824, 0.0003853496321060429, 0.0003473129507347503, 0.00031291822908241024, 0.00028209434636254025, 0.00025465069697661215, 0.00022918675226779028, 0.00020712284320516524, 0.0001872343701238667, 0.00016889993521189563, 0.00015825574109117562, 0.00014267167167027512, 0.0001284209245998158, 0.00011565649514993365, 0.00010478069748091577, 9.676400779828968e-05, 8.825252221351266e-05, 8.421961621698049e-05, 7.58655511468623e-05, 6.874699317808038e-05, 6.225361425045725e-05, 5.6064181787938846e-05, 5.145881485053246e-05, 4.6411655138287146e-05, 4.534644546771677e-05, 4.0908097094597935e-05, 3.686498443357826e-05, 3.3354358842777344e-05, 3.0346625545974646e-05, 2.8715726173878007e-05, 2.7002424529631724e-05, 2.4307788129575782e-05, 2.5561176383377862e-05, 2.301043901247288e-05, 2.8230392259363963e-05, 2.7087809674550733e-05, 2.770156662426793e-05, 2.5136788494006064e-05, 2.3944588245383393e-05, 2.3361228598611735e-05, 2.3772762237618217e-05, 2.1614139549708723e-05, 1.991212376561277e-05, 1.8580312787962393e-05, 1.674154940961747e-05, 1.535579094856652e-05, 1.420146042940747e-05, 1.5320405885541996e-05, 1.661476345219514e-05, 1.8203918620109236e-05, 1.815159414711043e-05, 1.8043590046816677e-05, 1.7375715184483998e-05, 1.6423515206310867e-05, 1.553951362863041e-05, 1.4920371012297822e-05, 1.4318359659741113e-05, 1.3670973441605588e-05, 1.3132111360097053e-05, 1.2551102141737985e-05, 1.1834011371899735e-05, 1.1188471810668609e-05, 1.0505292506128404e-05, 1.0063538138153274e-05, 9.782729073781525e-06, 9.783418630230068e-06, 9.363215661579285e-06, 8.929574157866515e-06, 8.542623603210234e-06, 8.009810832712964e-06, 7.469203917198898e-06, 6.933186601362366e-06, 6.355519271017802e-06, 5.813644921047286e-06, 5.2893249947504815e-06, 4.806598593579849e-06, 4.363365673848435e-06, 3.957344927561109e-06, 3.614485201872378e-06, 3.2709146280321415e-06, 2.9968156082165255e-06, 2.7060131481682053e-06, 2.43603969656135e-06, 2.195005274844722e-06, 1.9796317361198158e-06, 1.7821178492618544e-06, 1.6068399592954064e-06, 1.4842719936961682e-06, 1.3822503829440052e-06, 1.2971549960347938e-06, 1.1966216123595178e-06, 1.101556194647947e-06, 9.9806973885857e-07, 8.994044502190371e-07, 8.139571660024502e-07, 7.362009096545092e-07, 6.655287814934248e-07, 6.371375281023717e-07, 6.354532605287899e-07, 6.070755777795462e-07, 5.554949856922283e-07, 5.073383293324243e-07, 4.582660681172701e-07, 4.2452369916235474e-07, 4.004469186753074e-07, 3.6769194360750753e-07, 3.368274198545388e-07, 3.1433382453451107e-07, 3.1127351127486265e-07, 2.933660254107368e-07, 2.952601210598861e-07, 3.040212404059332e-07, 3.046316928414876e-07, 2.992887105030185e-07, 3.0149586442628513e-07, 3.4489679952780265e-07], "accuracy_test": 0.09998804209183673, "start": "2016-02-01 09:46:51.641000", "learning_rate_per_epoch": [0.00306337489746511, 0.00216613314114511, 0.0017686403589323163, 0.001531687448732555, 0.0013699829578399658, 0.0012506175553426147, 0.0011578468838706613, 0.001083066570572555, 0.0010211250046268106, 0.0009687241981737316, 0.0009236423065885901, 0.0008843201794661582, 0.0008496273658238351, 0.0008187213679775596, 0.0007909600390121341, 0.0007658437243662775, 0.0007429775432683527, 0.0007220443803817034, 0.0007027864339761436, 0.0006849914789199829, 0.0006684832042083144, 0.0006531137623824179, 0.0006387578323483467, 0.0006253087776713073, 0.000612674979493022, 0.0006007772753946483, 0.0005895468057133257, 0.0005789234419353306, 0.0005688544479198754, 0.0005592931993305683, 0.0005501983687281609, 0.0005415332852862775, 0.0005332651198841631, 0.0005253644776530564, 0.0005178048741072416, 0.0005105625023134053, 0.0005036157672293484, 0.0004969450528733432, 0.0004905326059088111, 0.0004843620990868658, 0.0004784188058692962, 0.0004726890183519572, 0.0004671603091992438, 0.00046182115329429507, 0.0004566609859466553, 0.00045166999916546047, 0.00044683917076326907, 0.0004421600897330791, 0.00043762498535215855, 0.0004332266398705542, 0.0004289583011996001, 0.00042481368291191757, 0.00042078690603375435, 0.00041687252814881504, 0.0004130653978791088, 0.0004093606839887798, 0.00040575393359176815, 0.0004022408393211663, 0.00039881744305603206, 0.00039548001950606704, 0.00039222495979629457, 0.0003890490042977035, 0.00038594898069277406, 0.00038292186218313873, 0.0003799649130087346, 0.0003770753974094987, 0.00037425081245601177, 0.0003714887716341764, 0.00036878700484521687, 0.000366143329301849, 0.0003635557077359408, 0.0003610221901908517, 0.0003585409140214324, 0.0003561101038940251, 0.00035372807178646326, 0.0003513932169880718, 0.00034910396789200604, 0.0003468588984105736, 0.00034465661155991256, 0.00034249573945999146, 0.0003403750015422702, 0.00033829317544586957, 0.00033624909701757133, 0.0003342416021041572, 0.0003322696720715612, 0.00033033223007805645, 0.00032842825748957694, 0.00032655688119120896, 0.00032471708254888654, 0.00032290807575918734, 0.0003211289586033672, 0.00031937891617417336, 0.0003176571917720139, 0.0003159629995934665, 0.00031429564114660025, 0.00031265438883565366, 0.0003110386023763567, 0.0003094476123806089, 0.0003078807785641402, 0.000306337489746511, 0.0003048171929549426, 0.00030331930611282587, 0.0003018433053512126, 0.00030038863769732416, 0.00029895477928221226, 0.00029754129354842007, 0.0002961476275231689, 0.00029477340285666287, 0.0002934180956799537, 0.0002920813567470759, 0.00029076269129291177, 0.0002894617209676653, 0.0002881780674215406, 0.00028691135230474174, 0.00028566119726747274, 0.0002844272239599377, 0.00028320911224000156, 0.00028200651286169887, 0.00028081913478672504, 0.00027964659966528416, 0.0002784886455629021, 0.00027734492323361337, 0.0002762152289506048, 0.00027509918436408043, 0.00027399658574722707, 0.00027290714206174016, 0.0002718305622693151, 0.00027076664264313877, 0.000269715121248737, 0.0002686757652554661, 0.00026764831272885203, 0.00026663255994208157, 0.0002656283031683415, 0.00026463528047315776, 0.000263653346337378, 0.0002626822388265282, 0.0002617217833176255, 0.0002607718051876873, 0.0002598320716060698, 0.0002589024370536208, 0.0002579826978035271, 0.0002570727083366364, 0.000256172294029966, 0.00025528125115670264, 0.00025439943419769406, 0.00025352672673761845, 0.00025266289594583213, 0.0002518078836146742, 0.000250961456913501, 0.0002501235285308212, 0.000249293923843652, 0.0002484725264366716, 0.00024765919079072773, 0.00024685380049049854, 0.00024605621001683176, 0.00024526630295440555, 0.00024448393378406763, 0.00024370902974624187, 0.00024294143076986074, 0.0002421810495434329, 0.00024142776965163648, 0.0002406814746791497, 0.00023994204821065068, 0.0002392094029346481, 0.0002384834224358201, 0.0002377640048507601, 0.00023705107741989195, 0.0002363445091759786, 0.0002356442273594439, 0.00023495013010688126, 0.00023426214465871453, 0.0002335801545996219, 0.0002329040871700272, 0.00023223385505843908, 0.0002315693855052814, 0.00023091057664714754, 0.00023025735572446138, 0.000229609664529562, 0.0002289674011990428, 0.00022833049297332764, 0.00022769886709284037, 0.0002270724653499201, 0.00022645120043307543, 0.00022583499958273023, 0.0002252238045912236], "accuracy_train_first": 0.549461502745478, "accuracy_train_last": 0.9981173504406607, "batch_size_eval": 1024, "accuracy_train_std": [0.018615762508976636, 0.01771631276499233, 0.019995544810173523, 0.020414117054018157, 0.02087299406915108, 0.02353550875363224, 0.025252811807081475, 0.025749990312533638, 0.026340530612420983, 0.027566227167124983, 0.026897930852816727, 0.027721608562138792, 0.027340071044978962, 0.027643155522024183, 0.027406188728050496, 0.02781914988561286, 0.02617022621247918, 0.026206207675121718, 0.02653398444773342, 0.024915414594971652, 0.024096337010318845, 0.024222184356352247, 0.021617019234146637, 0.022912822896033795, 0.021618298263455647, 0.021398108708748705, 0.020381755588490296, 0.02065815272615169, 0.0180200393086834, 0.01835539505983889, 0.01614659974354397, 0.016762537736700375, 0.015681403294432086, 0.017544433657401885, 0.015451429015670589, 0.014979727150653871, 0.014788388153356887, 0.01643253540313633, 0.014107742782759638, 0.014404153947189738, 0.014924409113092367, 0.014542324015674886, 0.014191401841888432, 0.013113908919662503, 0.013961238102817915, 0.01227460429093805, 0.012352837235343531, 0.013553633768281295, 0.010910582794120995, 0.011909324944822285, 0.011447199573464273, 0.012238757952037667, 0.012465158909968374, 0.010532912238298399, 0.011267396023693215, 0.011165670341808206, 0.010079004464743175, 0.011374996455072537, 0.008074874197759091, 0.010946279314813318, 0.008574800094488135, 0.008854916202214284, 0.00977525510698052, 0.007898079135891358, 0.007477490549863333, 0.010039909242711132, 0.009160368000173648, 0.008515453028195959, 0.008768122824092171, 0.007951111816537536, 0.008221966082198348, 0.008515032835569323, 0.00654190587824486, 0.007857063184348126, 0.007824785412798237, 0.0063738160893003016, 0.006968935786611994, 0.0071902063552742295, 0.007638658347783924, 0.006119884931689031, 0.006442335191328098, 0.007063507380194338, 0.006079946558832611, 0.006930960249787548, 0.0056065858998558225, 0.005822876817303244, 0.007152290576600647, 0.005206128232261125, 0.0073469926159598666, 0.00585120730438328, 0.005986436036894837, 0.0059543246257733945, 0.005681561027225403, 0.005829323871389128, 0.006318097740668163, 0.005260089387476611, 0.005030952703547263, 0.0057111365364592515, 0.0050132176688459824, 0.004971059615657981, 0.0056584856708850675, 0.005318928604503728, 0.005243288831302261, 0.0035129881092317893, 0.00420912996089029, 0.004541339891782839, 0.004474110450598349, 0.004442086992026787, 0.005693563877280717, 0.004205233059712634, 0.005195263634674236, 0.0033472881798018122, 0.005203764072441267, 0.003773437219054118, 0.0030805969172657197, 0.0031000491051654893, 0.0021867460747102734, 0.002046514213046363, 0.0019457232040394573, 0.0018511416014583568, 0.0018937383946302344, 0.0019051059256885777, 0.0018984165429932146, 0.001920316548453395, 0.0019355906007905816, 0.0019033320223577376, 0.0019033320223577376, 0.0018754063622200396, 0.0018654253961769235, 0.0018532131140308232, 0.0018550993317208047, 0.0019349972446712843, 0.0018896131969463636, 0.0018701743694413745, 0.0017980588515793922, 0.001759766020152954, 0.0017841553918797103, 0.0017343138778000639, 0.0017444059618089156, 0.0017731564552480785, 0.0017731564552480785, 0.0017375549803559567, 0.0017375549803559567, 0.0017375549803559567, 0.0017763266866817672, 0.0017957183549595231, 0.0017852731557077084, 0.0017957183549595231, 0.001792545011183772, 0.0017670290013884337, 0.00174113910023748, 0.00174113910023748, 0.001676086261381526, 0.0016249680029221743, 0.0016439973185537827, 0.0016249680029221743, 0.0016249680029221743, 0.0016194587481373084, 0.0016149145483317342, 0.0016353838157734655, 0.0016353838157734655, 0.001642794912271618, 0.0016427745032995575, 0.0016427745032995575, 0.0016427745032995575, 0.0016491692385534548, 0.0016628807053054029, 0.001593143724416267, 0.0016353428125946469, 0.0015993988783132, 0.0015993988783132, 0.0016288937982585283, 0.0016220858898060655, 0.001593843313671677, 0.001593843313671677, 0.001593843313671677, 0.001593843313671677, 0.001593843313671677, 0.001600792283754353, 0.0015788267365233345, 0.0015788267365233345, 0.0015562254283655332, 0.0015350748111746498, 0.001485153889616458, 0.0015562254283655332], "accuracy_test_std": 0.007350288587607382, "error_valid": [0.46028449736445776, 0.4039365469691265, 0.33450648296310237, 0.2931231762989458, 0.2687591185052711, 0.24817924039909633, 0.23567659309111444, 0.2258491975715362, 0.21827054310993976, 0.21548351609563254, 0.2173557511295181, 0.2141304475715362, 0.21822053840361444, 0.2224827042545181, 0.22235033885542166, 0.22294010024472888, 0.2287082901920181, 0.23270572524472888, 0.22320483104292166, 0.22560652767319278, 0.22728462678840367, 0.23070259553840367, 0.22127229621611444, 0.2237740022590362, 0.21965449689382532, 0.21893237010542166, 0.22365340267319278, 0.22446671451430722, 0.21817053369728923, 0.21101838996611444, 0.2118625870670181, 0.21455842902861444, 0.21485404508659633, 0.21824112857680722, 0.21477168439382532, 0.2091255647590362, 0.20657238328313254, 0.21996040803840367, 0.21127282567771077, 0.21089631965361444, 0.21444665380271077, 0.20596203172063254, 0.20439570783132532, 0.20925793015813254, 0.213623046875, 0.2062473526920181, 0.20433393731174698, 0.20732539533132532, 0.20120128953313254, 0.20159838573042166, 0.19947171498493976, 0.20804752211972888, 0.2084446183170181, 0.20632824265813254, 0.2086372835090362, 0.21138460090361444, 0.19999088149472888, 0.21104780449924698, 0.20576936652861444, 0.20659297345632532, 0.20684740916792166, 0.2024116975715362, 0.20642972279743976, 0.2015572053840362, 0.20670474868222888, 0.20476191876882532, 0.20652090785015065, 0.21075365916792166, 0.20067182793674698, 0.20165868552334332, 0.1993599397590362, 0.20322500941265065, 0.20340885024472888, 0.20286909356174698, 0.20200430628765065, 0.20451777814382532, 0.20153661521084332, 0.20733569041792166, 0.2025337678840362, 0.19607433640813254, 0.20193371140813254, 0.20298086878765065, 0.2042942276920181, 0.20622676251882532, 0.1985054475715362, 0.19961437547063254, 0.19555516989834332, 0.20299116387424698, 0.19992911097515065, 0.20403979198042166, 0.20281908885542166, 0.2055855256965362, 0.20153661521084332, 0.19617581654743976, 0.20081448842243976, 0.2010174487010542, 0.20027473173945776, 0.19962467055722888, 0.20529138036521077, 0.19814953172063254, 0.2016278002635542, 0.1950051181287651, 0.20051887236445776, 0.19159744446536142, 0.19550369446536142, 0.19331672392695776, 0.19727444935993976, 0.19480215785015065, 0.20273672816265065, 0.1931740634412651, 0.19970556052334332, 0.19604345114834332, 0.20078360316265065, 0.19788480092243976, 0.19651114222515065, 0.1960640413215362, 0.19260489222515065, 0.19178128529743976, 0.1908150178840362, 0.1917915803840362, 0.1914253694465362, 0.1917915803840362, 0.1920357210090362, 0.1917915803840362, 0.1911812288215362, 0.1909370881965362, 0.1908150178840362, 0.19043851185993976, 0.19031644154743976, 0.19043851185993976, 0.19019437123493976, 0.19019437123493976, 0.18957372458584332, 0.18907514824924698, 0.18833243128765065, 0.1888104174510542, 0.1886883471385542, 0.1884442065135542, 0.1886883471385542, 0.1886883471385542, 0.1886883471385542, 0.1889324877635542, 0.1889324877635542, 0.1890545580760542, 0.1890545580760542, 0.1890545580760542, 0.1890545580760542, 0.1888104174510542, 0.1890545580760542, 0.1886883471385542, 0.18906485316265065, 0.18943106410015065, 0.18918692347515065, 0.18955313441265065, 0.18943106410015065, 0.18918692347515065, 0.18869864222515065, 0.1885662768260542, 0.1884442065135542, 0.1885662768260542, 0.18855598173945776, 0.1892986987010542, 0.18916633330195776, 0.18928840361445776, 0.18928840361445776, 0.18928840361445776, 0.18977668486445776, 0.19002082548945776, 0.18989875517695776, 0.18965461455195776, 0.18965461455195776, 0.18953254423945776, 0.18977668486445776, 0.18989875517695776, 0.18977668486445776, 0.18977668486445776, 0.18989875517695776, 0.19014289580195776, 0.19002082548945776, 0.19026496611445776, 0.19038703642695776, 0.19038703642695776, 0.19038703642695776, 0.19050910673945776, 0.19087531767695776], "tags": ["deepconvnets", "zoonormalized"], "hp": {"zoom_range": [1, 1], "translation_range": [-5, 5], "learning_rate_decay": 0.09571749874137811, "discrete_learning_divide": 10.0, "shear_range": [1, 1], "patience_check_each": 1, "discrete_learning_rate_epsilon": 0.0001, "patience_threshold": 1, "do_flip": true, "batch_size": 32, "valid_ratio": 0.15, "learning_rate": 0.0030633749623642397, "optimization": "rmsprop", "nb_data_augmentation": 0, "learning_rate_decay_method": "sqrt", "max_epochs": 1000, "patience_nb_epochs": 50, "weight_decay": 0.0, "l2_decay": 7.079510897676039e-06, "rotation_range": [0, 0], "momentum": 0.948632447621903}, "accuracy_valid_max": 0.8116675687123494, "code_": "from datetime import datetime\nimport matplotlib as mpl\nmpl.use('Agg')   # NOQA\nfrom lasagnekit.easy import BatchOptimizer, BatchIterator, get_batch_slice\nfrom lasagnekit.nnet.capsule import Capsule\nfrom lasagnekit.easy import iterate_minibatches\nfrom lasagne import updates\nfrom lasagnekit.updates import santa_sss\nupdates.santa_sss = santa_sss  # NOQA\nimport theano\nimport theano.tensor as T\n\nimport numpy as np\nimport json\n\nfrom skimage.io import imsave\nfrom lasagnekit.datasets.infinite_image_dataset import Transform\n\n\nclass MyBatchIterator(BatchIterator):\n\n    def __init__(self, nb_data_augmentation=1,  **transform_params):\n        super(MyBatchIterator, self).__init__()\n\n        self.nb_data_augmentation = nb_data_augmentation\n        self.transform_params = transform_params\n\n    def transform(self, batch_index, V):\n        assert self.batch_size is not None\n        assert self.nb_batches is not None\n\n        if isinstance(batch_index, T.TensorVariable):\n            batch_slice = get_batch_slice(batch_index,\n                                          self.batch_size)\n        else:\n            batch_slice = slice(batch_index * self.batch_size,\n                                (batch_index+1) * self.batch_size)\n\n        d = OrderedDict()\n        X = V[\"X\"][batch_slice]\n        y = V[\"y\"][batch_slice]\n\n        X_list = [X]\n        y_list = [y]\n        for i in range(self.nb_data_augmentation):\n            tr, _ = Transform(X.transpose(0, 2, 3, 1),\n                              np.random,\n                              **self.transform_params)\n            imsave(\"out.png\", (((tr[0] + 1) / 2.)))\n            X_transformed = tr.transpose((0, 3, 1, 2))\n            X_list.append(X_transformed)\n            y_list.append(y)\n        d[\"X\"] = np.concatenate(X_list, axis=0)\n        d[\"y\"] = np.concatenate(y_list, axis=0)\n        d[\"X\"], d[\"y\"] = shuffle(d[\"X\"], d[\"y\"])\n        return d\n\n\nif __name__ == \"__main__\":\n    from lasagnekit.datasets.cifar10 import Cifar10\n    from sklearn.utils import shuffle\n    from sklearn.cross_validation import train_test_split\n    from collections import OrderedDict\n\n    from lightexperiments.light import Light\n    from hp_toolkit.hp import (\n            Param, make_constant_param,\n            instantiate_random, instantiate_default\n    )\n    import argparse\n    import vgg  # NOQA\n    import vgg_small  # NOQA\n    import vgg_very_small  # NOQA\n    import spatially_sparse  # NOQA\n    import nin  # NOQA\n    import fully  # NOQA\n    import residual  # NOQA\n    import residualv2  # NOQA\n    import residualv3  # NOQA\n    import residualv4  # NOQA\n    import residualv5  # NOQA\n\n    parser = argparse.ArgumentParser(description='zoo')\n    parser.add_argument(\"--budget-hours\",\n                        default=np.inf,\n                        help=\"nb of maximum hours (defaut=inf)\")\n    parser.add_argument(\"--fast-test\", default=False, type=bool)\n    parser.add_argument(\"--model\", default=\"vgg\", type=str)\n    parser.add_argument(\"--default-model\", default=False, type=bool)\n\n    models = {\n        \"vgg\": vgg,\n        \"vgg_small\": vgg_small,\n        \"vgg_very_small\": vgg_very_small,\n        \"spatially_sparse\": spatially_sparse,\n        \"nin\": nin,\n        \"fully\": fully,\n        \"residual\": residual,\n        \"residualv2\": residualv2,\n        \"residualv3\": residualv3,\n        \"residualv4\": residualv4,\n        \"residualv5\": residualv5\n    }\n    args = parser.parse_args()\n    model_class = models[args.model]\n    budget_sec = args.budget_hours * 3600\n    begin = datetime.now()\n    seed = np.random.randint(0, 1000000000)\n    np.random.seed(seed)\n    fast_test = args.fast_test\n    np.random.seed(seed)\n    rng = np.random\n\n    if args.default_model is True:\n        instantiate = instantiate_default\n    else:\n        instantiate = instantiate_random\n\n    light = Light()\n    light.launch()\n    light.initials()\n    light.file_snapshot()\n    light.set_seed(seed)\n    light.tag(\"deepconvnets\")\n    light.tag(\"zoonormalized\")\n\n    data = Cifar10(batch_indexes=[1, 2, 3, 4, 5])\n    data.load()\n\n    data_test = Cifar10(batch_indexes=[6])\n    data_test.load()\n\n    light.set(\"dataset\", data.__class__.__name__)\n\n    hp = dict(\n        learning_rate=Param(initial=0.001, interval=[-4, -2], type='real', scale='log10'),\n        learning_rate_decay=Param(initial=0.05, interval=[0, 0.1], type='real'),\n        learning_rate_decay_method=Param(initial='discrete', interval=['exp', 'none', 'sqrt', 'lin', 'discrete'], type='choice'),\n        momentum=Param(initial=0.9, interval=[0.5, 0.99], type='real'),\n        #weight_decay=Param(initial=0, interval=[-10, -3], type='real', scale='log10'),\n        weight_decay=make_constant_param(0.),\n        discrete_learning_rate_epsilon=make_constant_param(1e-4),#NEW TO ADD\n        discrete_learning_divide=make_constant_param(10.),\n        l2_decay=Param(initial=0, interval=[-8, -4], type='real', scale='log10'),#NEW TO ADD\n        max_epochs=make_constant_param(1000),\n        batch_size=Param(initial=32,\n                         interval=[16, 32, 64, 128],\n                         type='choice'),\n        patience_nb_epochs=make_constant_param(50),\n        valid_ratio=make_constant_param(0.15),\n\n        patience_threshold=make_constant_param(1),\n        patience_check_each=make_constant_param(1),\n\n        optimization=Param(initial='adam',\n                           interval=['adam', 'nesterov_momentum', 'rmsprop'],\n                           type='choice'),\n        # data augmentation\n        nb_data_augmentation=Param(initial=1, interval=[0, 1, 2, 3, 4], type='choice'),\n        zoom_range=make_constant_param((1, 1)),\n        rotation_range=make_constant_param((0, 0)),\n        shear_range=make_constant_param((1, 1)),\n        translation_range=make_constant_param((-5, 5)),\n        do_flip=make_constant_param(True)\n\n    )\n\n    if fast_test is True:\n        instantiate = instantiate_default\n\n    default_params = {}\n    if fast_test is True:\n        default_params[\"max_epochs\"] = 1\n    hp = instantiate(hp, default_params=default_params)\n    light.set(\"hp\", hp)\n\n    hp_model = model_class.params\n    hp_model = instantiate(hp_model)\n    light.set(\"hp_model\", hp_model)\n\n    model = model_class.build_model(\n        input_width=data.img_dim[1],\n        input_height=data.img_dim[2],\n        output_dim=data.output_dim,\n        **hp_model)\n    light.set(\"model\", model_class.__name__)\n    print(model_class.__name__)\n    print(json.dumps(hp, indent=4))\n    print(json.dumps(hp_model, indent=4))\n\n    initial_lr = hp[\"learning_rate\"]\n\n    def evaluate(X, y, batch_size=None):\n        if batch_size is None:\n            batch_size = hp[\"batch_size\"]\n        accs = []\n        for mini_batch in iterate_minibatches(X.shape[0],\n                                              batch_size):\n            acc = (nnet.predict(X[mini_batch]) == y[mini_batch]).mean()\n            accs.append(acc)\n        return accs\n\n    class MyBatchOptimizer(BatchOptimizer):\n\n        def quitter(self, update_status):\n            quit = super(MyBatchOptimizer, self).quitter(update_status)\n            if (datetime.now() - begin).total_seconds() >= budget_sec:\n                print(\"Budget finished.quit.\")\n                quit = True\n            return quit\n\n        def iter_update(self, epoch, nb_batches, iter_update_batch):\n            start = datetime.now()\n            status = super(MyBatchOptimizer, self).iter_update(epoch,\n                                                               nb_batches,\n                                                               iter_update_batch)\n            duration = (datetime.now() - start).total_seconds()\n            status[\"duration\"] = duration\n            accs = evaluate(X_train, y_train, batch_size=self.batch_size_eval)\n            status[\"accuracy_train\"] = np.mean(accs)\n            status[\"accuracy_train_std\"] = np.std(accs)\n            accs = evaluate(X_valid, y_valid, batch_size=self.batch_size_eval)\n            status[\"accuracy_valid\"] = np.mean(accs)\n            status[\"accuracy_valid_std\"] = np.std(accs)\n\n            status[\"error_valid\"] = 1 - status[\"accuracy_valid\"]\n\n            status = self.add_moving_avg(\"accuracy_train\", status)\n            status = self.add_moving_var(\"accuracy_train\", status)\n            status = self.add_moving_avg(\"accuracy_valid\", status)\n            status = self.add_moving_var(\"accuracy_valid\", status)\n\n            for k, v in status.items():\n                light.append(k, float(v))\n\n            lr = self.learning_rate\n            lr_decay_method = hp[\"learning_rate_decay_method\"]\n            lr_decay = hp[\"learning_rate_decay\"]\n            cur_lr = lr.get_value()\n            t = status[\"epoch\"]\n\n            if lr_decay_method == \"exp\":\n                new_lr = cur_lr * (1 - lr_decay)\n            elif lr_decay_method == \"lin\":\n                new_lr = initial_lr / (1 + t)\n            elif lr_decay_method == \"sqrt\":\n                new_lr = initial_lr / np.sqrt(1 + t)\n            elif lr_decay_method == 'discrete':\n                eps = hp[\"discrete_learning_rate_epsilon\"]\n                div = hp[\"discrete_learning_divide\"]\n                if status[\"moving_var_accuracy_valid\"] <= eps:\n                    new_lr = cur_lr / div\n                else:\n                    new_lr = cur_lr\n            else:\n                new_lr = cur_lr\n\n            new_lr = np.array(new_lr, dtype=\"float32\")\n            lr.set_value(new_lr)\n\n            light.append(\"learning_rate_per_epoch\",\n                         float(self.learning_rate.get_value()))\n            return status\n\n        def add_moving_avg(self, name, status, B=0.9):\n            if len(self.stats) >= 2:\n                old_avg = self.stats[-2][\"moving_avg_\" + name]\n            else:\n                old_avg = 0\n            avg = B * old_avg + (1 - B) * status[name]\n            status[\"moving_avg_\" + name] = avg\n            return status\n\n        def add_moving_var(self, name, status, B=0.9):\n            if len(self.stats) >= 2:\n                old_avg = self.stats[-2][\"moving_avg_\" + name]\n                old_var = self.stats[-2][\"moving_var_\" + name]\n            else:\n                old_avg = 0\n                old_var = 0\n            new_avg = B * old_avg + (1 - B) * status[name]\n            var = B * old_var + (1 - B) * (status[name] - old_avg) * (status[name] - new_avg)\n            status[\"moving_var_\" + name] = var\n            return status\n\n    learning_rate = theano.shared(np.array(hp[\"learning_rate\"],\n                                  dtype=\"float32\"))\n    momentum = hp[\"momentum\"]\n\n    optim_params = {\"learning_rate\": learning_rate}\n    if \"momentum\" in hp[\"optimization\"]:\n        optim_params[\"momentum\"] = hp[\"momentum\"]\n\n    batch_optimizer = MyBatchOptimizer(\n        verbose=1, max_nb_epochs=hp[\"max_epochs\"],\n        batch_size=hp[\"batch_size\"],\n        optimization_procedure=(getattr(updates, hp[\"optimization\"]),\n                                optim_params),\n        patience_stat=\"error_valid\",\n        patience_nb_epochs=hp[\"patience_nb_epochs\"],\n        patience_progression_rate_threshold=hp[\"patience_threshold\"],\n        patience_check_each=hp[\"patience_check_each\"],\n        verbose_stat_show=[\n            \"epoch\",\n            \"duration\",\n            \"accuracy_train\",\n            \"accuracy_train_std\",\n            \"accuracy_valid\",\n            \"accuracy_valid_std\",\n        ]\n    )\n    batch_size_eval = 1024\n    light.set(\"batch_size_eval\", batch_size_eval)\n    batch_optimizer.learning_rate = learning_rate\n    batch_optimizer.batch_size_eval = batch_size_eval\n\n    input_variables = OrderedDict()\n    input_variables[\"X\"] = dict(tensor_type=T.tensor4)\n    input_variables[\"y\"] = dict(tensor_type=T.ivector)\n    functions = dict(\n        predict=dict(\n            get_output=lambda model, X: (model.get_output(X, deterministic=True)[0]).argmax(axis=1),\n            params=[\"X\"]\n        )\n    )\n\n    def loss_function(model, tensors):\n        X = tensors[\"X\"]\n        y = tensors[\"y\"]\n        y_hat, = model.get_output(X)\n        if hp[\"weight_decay\"] > 0:\n            l1 = sum(T.abs_(param).sum() for param in model.capsule.all_params_regularizable) * hp[\"weight_decay\"]\n        else:\n            l1 = 0\n\n        if hp[\"l2_decay\"] > 0:\n            l2 = sum(T.sqr(param).sum() for param in model.capsule.all_params_regularizable) * hp[\"l2_decay\"]\n        else:\n            l2 = 0\n\n        return T.nnet.categorical_crossentropy(y_hat, y).mean() + l1 + l2\n\n    batch_iterator = MyBatchIterator(hp[\"nb_data_augmentation\"],\n                                     zoom_range=hp[\"zoom_range\"],\n                                     rotation_range=hp[\"rotation_range\"],\n                                     shear_range=hp[\"shear_range\"],\n                                     translation_range=hp[\"translation_range\"],\n                                     do_flip=hp[\"do_flip\"])\n\n    nnet = Capsule(\n        input_variables, model,\n        loss_function,\n        functions=functions,\n        batch_optimizer=batch_optimizer,\n        batch_iterator=batch_iterator,\n    )\n\n    from sklearn.preprocessing import LabelEncoder\n\n    imshape = ([data.X.shape[0]] +\n               list(data.img_dim))\n    X = data.X.reshape(imshape).astype(np.float32)\n    y = data.y\n    label_encoder = LabelEncoder()\n    y = label_encoder.fit_transform(y)\n    y = y.astype(np.int32)\n\n    # rescaling to [-1, 1]\n    X_min = X.min(axis=(0, 2, 3))[None, :, None, None]\n    X_max = X.max(axis=(0, 2, 3))[None, :, None, None]\n    X = 2 * ((X - X_min) / (X_max - X_min)) - 1\n    X, y = shuffle(X, y)\n\n    if fast_test is True:\n        X = X[0:100]\n        y = y[0:100]\n\n    X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=hp[\"valid_ratio\"])\n    light.set(\"nb_examples_train\", X_train.shape[0])\n    light.set(\"nb_examples_valid\", X_valid.shape[0])\n    try:\n        nnet.fit(X=X_train, y=y_train)\n    except KeyboardInterrupt:\n        print(\"interruption...\")\n\n    imshape = ([data_test.X.shape[0]] +\n               list(data_test.img_dim))\n    X_test = data_test.X.reshape(imshape).astype(np.float32)\n    X_test = 2 * ((X_test - X_min) / (X_max - X_min)) - 1\n    y_test = data_test.y\n    y_test = label_encoder.transform(y_test)\n    y_test = y_test.astype(np.int32)\n\n    accs = evaluate(X_test, y_test, batch_size_eval)\n    m, s = np.mean(accs), np.std(accs)\n    light.set(\"accuracy_test\", m)\n    light.set(\"accuracy_test_std\", s)\n    print(\"Test accuracy : {}+-{}\".format(m, s))\n\n    light.endings()  # save the duration\n\n    if fast_test is False:\n        light.store_experiment()  # update the DB\n    light.close()\n", "nb_examples_valid": 7500, "accuracy_valid_last": 0.8091246823230422, "accuracy_valid_std": [0.015253746152929787, 0.01140400339958932, 0.013532208236579062, 0.015033712850385605, 0.010818772351156485, 0.016729257838957255, 0.017367318763191208, 0.018751410221645528, 0.014243205512935531, 0.01183757316189928, 0.012707202234987424, 0.010400062062686202, 0.014811383159953189, 0.015254242741232927, 0.013885359594785169, 0.012310991639683246, 0.01516018067805596, 0.01206398474393042, 0.014179552570596936, 0.015020037325643562, 0.015964969676661795, 0.01238484229403003, 0.011473319447696103, 0.01027483620469492, 0.012170343951065364, 0.01198931030245668, 0.015939064042184096, 0.014236186050010723, 0.019861088983333094, 0.016901047525315897, 0.014024448319637452, 0.016132645994554374, 0.018002236839701598, 0.01645401001394348, 0.011339243292782372, 0.009394200638475354, 0.011809961060550855, 0.013411413646826187, 0.017056447647342005, 0.013368602099382919, 0.015579457108681128, 0.00951321015733794, 0.013662821084455604, 0.015503130810612005, 0.017932290945755717, 0.016313874924118107, 0.012237300966658123, 0.014896444271901019, 0.014610355834963255, 0.013257283452596181, 0.012050118637129821, 0.014234899369423258, 0.012192192255998073, 0.012389375865593487, 0.011644559455904669, 0.01660710989209075, 0.014764638823491445, 0.011340889022366407, 0.01921486247403352, 0.012994982205932828, 0.01600437902265457, 0.015375362152949539, 0.011510476881054922, 0.011808589160394544, 0.012754206351338402, 0.016113250576272272, 0.011364930493128169, 0.015497478766786012, 0.014143241650828857, 0.014524618798220689, 0.014183018073105147, 0.011054700062749745, 0.013568569838277535, 0.013344994406354881, 0.01014103687752686, 0.014665503271359523, 0.013869125489315645, 0.015762356005781953, 0.013171913000832305, 0.016063946045647957, 0.014865705493373032, 0.011404535705760064, 0.015029541504670774, 0.015143658597390811, 0.015418924246066081, 0.012066136833785926, 0.010913104069351266, 0.010331025469976727, 0.014354748975735923, 0.014070951911116488, 0.01655521734741387, 0.014511746819795956, 0.013045294706595923, 0.013353995815722209, 0.01691542918962591, 0.008888527673592899, 0.01137638507981711, 0.01543034373921725, 0.01772992058042875, 0.015180106664720364, 0.009912266039451487, 0.011618835067190351, 0.00984372018884024, 0.010024294659315968, 0.011072317552672023, 0.010505525487391395, 0.013640869465161031, 0.01101152200294155, 0.011900250578312517, 0.011004606632819287, 0.010718027749063427, 0.012153497693140822, 0.010793323752715224, 0.013267783023487705, 0.012320186433969763, 0.013615597459389008, 0.011758537432776736, 0.014597830844226023, 0.015298002682156897, 0.014264430071659494, 0.014530391063649613, 0.014113200588294477, 0.013848542133597787, 0.013779844203055223, 0.013804999010587893, 0.013936398985422508, 0.014012806662665146, 0.013219299282289475, 0.013023483684775457, 0.013246325122540354, 0.013316049789993378, 0.01345852440928082, 0.012947630308944883, 0.012398738191075266, 0.011918611661223962, 0.011612079730414848, 0.011578969601560917, 0.01157056283324363, 0.011381677557853328, 0.011073772854677703, 0.011265876781716765, 0.011300913187190302, 0.011332514928369447, 0.01113054086054879, 0.0112265180292137, 0.011194617069062952, 0.010914236953003859, 0.010703962651367882, 0.010968712830675383, 0.011052221861634594, 0.011914965816685198, 0.012124531315508048, 0.012219577277599293, 0.012030368569580648, 0.011946243141544842, 0.012131459171563283, 0.011932409069494998, 0.011155867902278453, 0.01114014194410802, 0.01138852920237381, 0.011033892456654435, 0.011453231217977337, 0.010810483924783352, 0.010774377662044095, 0.010310773601490372, 0.009897848351668964, 0.009487994046754636, 0.009451328002625114, 0.009091554823017144, 0.00894166284120436, 0.00925609962479944, 0.009160869584537415, 0.009077038972043771, 0.008892698713742798, 0.008877857726584606, 0.009233290824468825, 0.00879836123148464, 0.009206701764819138, 0.009247318732885798, 0.00872445961606378, 0.008539488204528416, 0.00822664269644948, 0.007946552526228962, 0.008028356677154428, 0.007357271402141848], "accuracy_valid": [0.5397155026355422, 0.5960634530308735, 0.6654935170368976, 0.7068768237010542, 0.7312408814947289, 0.7518207596009037, 0.7643234069088856, 0.7741508024284638, 0.7817294568900602, 0.7845164839043675, 0.7826442488704819, 0.7858695524284638, 0.7817794615963856, 0.7775172957454819, 0.7776496611445783, 0.7770598997552711, 0.7712917098079819, 0.7672942747552711, 0.7767951689570783, 0.7743934723268072, 0.7727153732115963, 0.7692974044615963, 0.7787277037838856, 0.7762259977409638, 0.7803455031061747, 0.7810676298945783, 0.7763465973268072, 0.7755332854856928, 0.7818294663027108, 0.7889816100338856, 0.7881374129329819, 0.7854415709713856, 0.7851459549134037, 0.7817588714231928, 0.7852283156061747, 0.7908744352409638, 0.7934276167168675, 0.7800395919615963, 0.7887271743222892, 0.7891036803463856, 0.7855533461972892, 0.7940379682793675, 0.7956042921686747, 0.7907420698418675, 0.786376953125, 0.7937526473079819, 0.795666062688253, 0.7926746046686747, 0.7987987104668675, 0.7984016142695783, 0.8005282850150602, 0.7919524778802711, 0.7915553816829819, 0.7936717573418675, 0.7913627164909638, 0.7886153990963856, 0.8000091185052711, 0.788952195500753, 0.7942306334713856, 0.7934070265436747, 0.7931525908320783, 0.7975883024284638, 0.7935702772025602, 0.7984427946159638, 0.7932952513177711, 0.7952380812311747, 0.7934790921498494, 0.7892463408320783, 0.799328172063253, 0.7983413144766567, 0.8006400602409638, 0.7967749905873494, 0.7965911497552711, 0.797130906438253, 0.7979956937123494, 0.7954822218561747, 0.7984633847891567, 0.7926643095820783, 0.7974662321159638, 0.8039256635918675, 0.7980662885918675, 0.7970191312123494, 0.7957057723079819, 0.7937732374811747, 0.8014945524284638, 0.8003856245293675, 0.8044448301016567, 0.797008836125753, 0.8000708890248494, 0.7959602080195783, 0.7971809111445783, 0.7944144743034638, 0.7984633847891567, 0.8038241834525602, 0.7991855115775602, 0.7989825512989458, 0.7997252682605422, 0.8003753294427711, 0.7947086196347892, 0.8018504682793675, 0.7983721997364458, 0.8049948818712349, 0.7994811276355422, 0.8084025555346386, 0.8044963055346386, 0.8066832760730422, 0.8027255506400602, 0.8051978421498494, 0.7972632718373494, 0.8068259365587349, 0.8002944394766567, 0.8039565488516567, 0.7992163968373494, 0.8021151990775602, 0.8034888577748494, 0.8039359586784638, 0.8073951077748494, 0.8082187147025602, 0.8091849821159638, 0.8082084196159638, 0.8085746305534638, 0.8082084196159638, 0.8079642789909638, 0.8082084196159638, 0.8088187711784638, 0.8090629118034638, 0.8091849821159638, 0.8095614881400602, 0.8096835584525602, 0.8095614881400602, 0.8098056287650602, 0.8098056287650602, 0.8104262754141567, 0.810924851750753, 0.8116675687123494, 0.8111895825489458, 0.8113116528614458, 0.8115557934864458, 0.8113116528614458, 0.8113116528614458, 0.8113116528614458, 0.8110675122364458, 0.8110675122364458, 0.8109454419239458, 0.8109454419239458, 0.8109454419239458, 0.8109454419239458, 0.8111895825489458, 0.8109454419239458, 0.8113116528614458, 0.8109351468373494, 0.8105689358998494, 0.8108130765248494, 0.8104468655873494, 0.8105689358998494, 0.8108130765248494, 0.8113013577748494, 0.8114337231739458, 0.8115557934864458, 0.8114337231739458, 0.8114440182605422, 0.8107013012989458, 0.8108336666980422, 0.8107115963855422, 0.8107115963855422, 0.8107115963855422, 0.8102233151355422, 0.8099791745105422, 0.8101012448230422, 0.8103453854480422, 0.8103453854480422, 0.8104674557605422, 0.8102233151355422, 0.8101012448230422, 0.8102233151355422, 0.8102233151355422, 0.8101012448230422, 0.8098571041980422, 0.8099791745105422, 0.8097350338855422, 0.8096129635730422, 0.8096129635730422, 0.8096129635730422, 0.8094908932605422, 0.8091246823230422], "seed": 152165256, "model": "residualv3", "loss_std": [0.3478260636329651, 0.20362117886543274, 0.18850073218345642, 0.18144172430038452, 0.17869450151920319, 0.1760052889585495, 0.17320716381072998, 0.17023774981498718, 0.16708000004291534, 0.16382932662963867, 0.16083863377571106, 0.15567462146282196, 0.15177561342716217, 0.14770150184631348, 0.14118769764900208, 0.13536816835403442, 0.12887966632843018, 0.121258445084095, 0.11352959275245667, 0.10731789469718933, 0.10125904530286789, 0.09453805536031723, 0.09155412763357162, 0.08653388172388077, 0.08015085756778717, 0.07777973264455795, 0.0742296427488327, 0.07012031972408295, 0.0659080371260643, 0.06690212339162827, 0.06373821943998337, 0.060021672397851944, 0.05664625018835068, 0.05891003459692001, 0.05325225368142128, 0.05491918697953224, 0.05146963149309158, 0.05382552370429039, 0.05049930885434151, 0.04839023947715759, 0.04620184749364853, 0.04778550565242767, 0.046509694308042526, 0.04538682848215103, 0.043676018714904785, 0.04199202358722687, 0.04178445786237717, 0.03814475238323212, 0.04158470407128334, 0.040294304490089417, 0.041737545281648636, 0.03804277628660202, 0.038063179701566696, 0.03792551904916763, 0.03540449216961861, 0.03506923466920853, 0.036192748695611954, 0.034717511385679245, 0.03636346384882927, 0.030424701049923897, 0.030924871563911438, 0.028768138960003853, 0.03117692656815052, 0.03010069951415062, 0.030359655618667603, 0.029715318232774734, 0.032328784465789795, 0.029167037457227707, 0.029391897842288017, 0.024344254285097122, 0.025636063888669014, 0.026712609454989433, 0.02345363050699234, 0.0199438389390707, 0.024919794872403145, 0.02420184016227722, 0.022917089983820915, 0.02479240484535694, 0.023597557097673416, 0.023786555975675583, 0.024156276136636734, 0.021903613582253456, 0.02259792946279049, 0.021701686084270477, 0.020959066227078438, 0.018717072904109955, 0.02236013673245907, 0.020479746162891388, 0.018629053607583046, 0.01787703111767769, 0.02020122855901718, 0.017858445644378662, 0.017070455476641655, 0.01410213578492403, 0.017438802868127823, 0.018683113157749176, 0.018824094906449318, 0.016111502423882484, 0.015615073032677174, 0.016960376873612404, 0.015132172964513302, 0.01486417930573225, 0.011646302416920662, 0.010324356146156788, 0.00950486958026886, 0.01522608008235693, 0.010493991896510124, 0.011993395164608955, 0.010234764777123928, 0.013213175348937511, 0.01692366972565651, 0.012718088924884796, 0.009292840026319027, 0.008469117805361748, 0.009293404407799244, 0.004164251033216715, 0.002563157118856907, 0.00045036914525553584, 0.00020091148326173425, 0.00018640955386217684, 0.00018248637206852436, 0.00017937853408511728, 0.00017654424300417304, 0.00017387331172358245, 0.00017130255582742393, 0.0001688197662588209, 0.00016639105160720646, 0.00016402913024649024, 0.0001617333182366565, 0.0001594994537299499, 0.00015733123291283846, 0.00015521884779445827, 0.00015316293865907937, 0.00015116836584638804, 0.0001492136507295072, 0.0001473093725508079, 0.00014544457371812314, 0.00014362977526616305, 0.00014188146451488137, 0.0001401927729602903, 0.00013853341806679964, 0.00013693052460439503, 0.00013536251208279282, 0.00013383264013100415, 0.00013235026563052088, 0.00013090572610963136, 0.00012949785741511732, 0.00012811696797143668, 0.00012676254846155643, 0.0001254219387192279, 0.0001241247373400256, 0.00012286650598980486, 0.00012163973588030785, 0.00012041414447594434, 0.00011924754653591663, 0.00011810333671746776, 0.00011697882291628048, 0.00011586971959332004, 0.00011480043758638203, 0.00011376769543858245, 0.00011272789561189711, 0.00011172350059496239, 0.00011073572386521846, 0.00010974556062137708, 0.00010877856402657926, 0.0001078487912309356, 0.00010692911746446043, 0.00010601845133351162, 0.0001051491781254299, 0.00010427877714391798, 0.00010341514280298725, 0.00010257248504785821, 0.00010175567149417475, 0.0001009555853670463, 0.0001001319324132055, 9.93338180705905e-05, 9.853126539383084e-05, 9.774359205039218e-05, 9.697631321614608e-05, 9.62026824709028e-05, 9.542715997667983e-05, 9.469239739701152e-05, 9.393964137416333e-05, 9.320469689555466e-05, 9.247685375157744e-05]}, "state": "available", "life": [{"dt": "Sun May 15 22:05:31 2016", "state": "available"}], "summary": "163a41fdae786fccbf5947b79b24d1c4"}