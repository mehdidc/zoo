{"content": {"hp_model": {"f0": 32, "f1": 32, "f2": 64, "f3": 16, "nonlin": "leaky_rectify", "nbg1": 5, "nbg3": 5, "nbg2": 5, "fs0": 3, "fs1": 3, "fs2": 3, "fs3": 3, "pg2": 2, "pg3": 2, "pg1": 2}, "accuracy_valid_std": [0.024500279727194155, 0.030529892404403184, 0.03840672798864023, 0.04151242647581479, 0.04122405468110636, 0.03836726168664536, 0.033012071532572074, 0.0405611825677759, 0.03743764052141927, 0.04498458608396916, 0.04269319172609026, 0.036591351285375, 0.04276198258300533, 0.03609536819290045, 0.03624284835366745, 0.0424588110018223, 0.04206642466668061, 0.03522018644458761, 0.030695842723661375, 0.04052896309087536, 0.04411054912844855, 0.04518419482144264, 0.043305024347866636, 0.040771546085008964, 0.04480191008959058, 0.046544053187421865, 0.04061728180592617, 0.04449938526851983, 0.04479603757628203, 0.04022249301090081, 0.03503009884097725, 0.046540934553414716, 0.03608506223265689, 0.042858612292822416, 0.040444489147477385, 0.03993343879786277, 0.041722777358859216, 0.04058085965504213, 0.03524773611343253, 0.04767253436374041, 0.0426415257555272, 0.03768592011409292, 0.04126980201623279, 0.03957402334901412, 0.03858794115806705, 0.04594455318668124, 0.03814720808720825, 0.04196537700883974, 0.04238203711629149, 0.043793307616446425, 0.041805319377258884, 0.046062280794152484, 0.04004165385689999, 0.03754580040988006, 0.046043370032062256, 0.0404400028423591, 0.03444406377216944, 0.04252222111400073, 0.04347416850056106, 0.03914346729093572, 0.04508590942614665, 0.03981262700540393, 0.03948589839206589, 0.03919534670943838, 0.040288972604677176, 0.03936233027812502, 0.033112770609503135, 0.04352651349259149, 0.046897637778313156, 0.03598637818857014, 0.04668495337890133, 0.04582513739978934, 0.040330382351722725, 0.039801688092924496, 0.03722062157220729, 0.0444424708781591, 0.042032769105263115, 0.038384282074424424, 0.03520447090974071, 0.03814720808720825, 0.03753613436940118, 0.04349085900343649, 0.03898997428939513, 0.039937982006268864, 0.040724348018743334, 0.03546761886838472, 0.03915459009594565, 0.0419032892142103, 0.04202866818936186, 0.03975128468120848, 0.039309748133326786, 0.04481891578585381, 0.037194289328676244, 0.03147446510115281, 0.04292460202295154, 0.04039151899567093, 0.04368981715290323, 0.03807174747183085, 0.04131462039115421, 0.037381380481334874, 0.0411623914417662, 0.035344375851297426, 0.03254378362285881, 0.0422353741580548, 0.03719160629476169, 0.03873998286209667, 0.040444489147477385, 0.04444492030887514, 0.03949233081679426, 0.04303119786522894, 0.04256145809959627, 0.0390088160388755, 0.0478133345330828, 0.038368207461824504, 0.036957436723367494, 0.037920854212821785, 0.044283581841657906, 0.03782600042991697, 0.035254941818654906, 0.03643333148449176, 0.037523564794282135, 0.03546327038724934, 0.039382836713414845, 0.0331677923016763, 0.04177058472359924, 0.041239016124129606, 0.032825502774435474, 0.03879684488662649, 0.03864432264826616, 0.038764095056948326, 0.04029077391344809, 0.04403397683289295, 0.03907387802484533, 0.04142776808897151, 0.03830928844391491, 0.03896041394347121, 0.03426026219659164, 0.037151337534114724, 0.03667950544343409, 0.0364552366897355, 0.03903671302526964, 0.03463003343933683, 0.03618372785057069, 0.04337284482758621, 0.039657148915323605, 0.03879333729874439, 0.04450529692538008, 0.036303871713825056, 0.03933097394997292, 0.03410926329984576, 0.042121596033040935, 0.04427559168810198, 0.030515923381490277, 0.03561566075471188, 0.038744431871437064, 0.0328025564777548, 0.03390572601473505, 0.03941760412619023, 0.04248721847665077, 0.044492045567240804, 0.04396635084412991, 0.046817679479508774, 0.032712828933122606, 0.036814790863999046, 0.03909499985705116, 0.03840223985535891, 0.042959248287348914, 0.037591438834419066, 0.0335268852095422, 0.04131352248280912, 0.03733548528500739, 0.03699497403521599, 0.04647949383401635, 0.03521580741027628, 0.041290020247111904, 0.039234211254471255, 0.03556366110777404, 0.04153536604617264, 0.04122229415433699, 0.03440163376109514, 0.03805172651819048, 0.04408833216234302, 0.038771583171193474, 0.04511346700796746, 0.04284696895070708, 0.03713985904892844, 0.03532178173977068, 0.03934227433059684, 0.0409810511413884, 0.033713608835510445, 0.035358746405195256, 0.03829507753677827, 0.04290853695116205, 0.046184029882161234, 0.04424197627532263, 0.03858794115806705, 0.033342380936280995, 0.038729677930918235, 0.03424225166725798, 0.03942151641785096, 0.0450313480396348, 0.04095093429437652, 0.03293724033264107, 0.03276049267635059, 0.03708608273409076, 0.0429256587247811, 0.03770685707223625, 0.039019977226797564, 0.04399027923427479, 0.04414981287488809, 0.03733378437941112, 0.03832917486227391, 0.03883166972149753, 0.043448285550187926, 0.037677253142009516, 0.03379960622374581, 0.03923582977508084, 0.03351470675249018, 0.0396509720209115, 0.03486292199419919, 0.04237668556516312, 0.03677262931034483, 0.0348543338816201, 0.03546761886838472, 0.03551465071331434, 0.037378225473643896, 0.04042407243806686, 0.037350061298453266, 0.044141592991948364, 0.04022519940930321, 0.036271872261399475, 0.038434117855802884, 0.041015569705104, 0.03913767291138487, 0.042740762649691094, 0.036606471423048244, 0.03387681722107462, 0.04854466809746462, 0.047332790144481746, 0.0361255150834348, 0.041898093034853846, 0.04147854011358519, 0.04156396813987687, 0.04504987813318234, 0.04426145172913594, 0.04820693032263198, 0.042120088401997074, 0.046088073586368274, 0.0396189282367693, 0.03786459338528321, 0.03776959831037164, 0.04092899706388908, 0.035847207387314825], "moving_avg_accuracy_train": [0.010069182981927709, 0.02915827371987951, 0.05098124529367469, 0.07395399802334336, 0.08830182111257528, 0.10440575044710089, 0.1337359773602221, 0.15372316652179024, 0.18397161417684013, 0.2153838465844573, 0.24471848526938506, 0.26911711867015736, 0.29781534656217773, 0.31779849564089974, 0.337082275594882, 0.3565225796618998, 0.3693407659728183, 0.3917440387731268, 0.41241291426328397, 0.4337845746441845, 0.45758420452916365, 0.46994890154612684, 0.47106912810838164, 0.4684299299059772, 0.483166850318994, 0.5020023678473355, 0.5145492131409152, 0.5346586743569441, 0.5489638912585991, 0.5476843131267151, 0.5656544925068147, 0.5796109747320368, 0.5875784352407609, 0.5935419772588535, 0.6003422411293536, 0.6111970418658159, 0.6156364491250175, 0.627011433730588, 0.6355334643033124, 0.6427044213368366, 0.6510784633898999, 0.6648156848219943, 0.6724940372735297, 0.6750111998112369, 0.6786697183843301, 0.6717331870579453, 0.6823130686533556, 0.6873686593783815, 0.6715873657297, 0.6651025749398626, 0.6712932775362378, 0.6732128014392404, 0.6810938932832682, 0.6900246959730136, 0.6923795305925797, 0.6914891867200688, 0.7017995112709534, 0.6903239087884364, 0.6967903883915205, 0.6921104082873082, 0.694948501494722, 0.7034092236344064, 0.712624024162532, 0.7208443965956765, 0.7222798176288798, 0.7302546784864739, 0.7391380961799952, 0.7389441660800679, 0.7405227351648321, 0.7476922236965416, 0.7523516534353213, 0.7539754865857651, 0.7538461984693572, 0.7542569475983251, 0.7539018477180106, 0.7540693624944024, 0.7478877651003839, 0.742917324433719, 0.7461434760264918, 0.7509107172792643, 0.7554624354609765, 0.7595425096859632, 0.7649300320607403, 0.7684963285534614, 0.7731437777764285, 0.773780265962641, 0.7804101459928829, 0.7807859235622694, 0.7818653696096569, 0.7828862874679683, 0.7876266496850269, 0.7939308145358013, 0.7980585350400524, 0.801302850963758, 0.79823393634931, 0.797488573587873, 0.785807299060411, 0.7852315578591893, 0.7924011731576077, 0.7911942824984735, 0.7959745153932044, 0.7970717174683418, 0.8059493537034353, 0.8079504273692364, 0.8036072859877345, 0.8132244376600454, 0.8155875172374143, 0.8122573046702994, 0.8091824589924261, 0.8088717996895691, 0.8064061182145881, 0.8031727917846956, 0.799152105226708, 0.8028800611196998, 0.8076212342245973, 0.8127871981515352, 0.8035152554448154, 0.8056656124304543, 0.8135520820609029, 0.8127197465957764, 0.8186559797675241, 0.8227890640196873, 0.82813252207555, 0.8264374927595612, 0.8243425010137256, 0.8188049000087386, 0.8253892066946118, 0.8276017920492471, 0.8318545081756477, 0.824017325430372, 0.8184816508692625, 0.8210249579208904, 0.8196430005324158, 0.8126222245755598, 0.8110569147686062, 0.8138979476893359, 0.8135275429806432, 0.8177122510319764, 0.8197653858685378, 0.8288891861371057, 0.8265207871017084, 0.8240762573373207, 0.8254953447059983, 0.8229251024040732, 0.8259888609889672, 0.8292051104322392, 0.8223199909552803, 0.8269126341790294, 0.8325920409418494, 0.8299498360946523, 0.8271694609189221, 0.8323149018752226, 0.8350138521997484, 0.8388712772207374, 0.828348701456495, 0.8317525361301226, 0.8355195829689175, 0.833683550876845, 0.8352973117530159, 0.827231153619883, 0.8285465359988585, 0.8134912046881293, 0.822816500634979, 0.8303715410835293, 0.8342837469149355, 0.8302557863800684, 0.8308592551818206, 0.8275831941214699, 0.8326943212454675, 0.8363224794823665, 0.8425692789738889, 0.8468806869198734, 0.8403411498543921, 0.8405267261340131, 0.8330506724965154, 0.836949106752888, 0.8456346554149486, 0.841532880385502, 0.8434724010818916, 0.8484512151905699, 0.8467762743944044, 0.8436404391236386, 0.8428466135847688, 0.8333666397262919, 0.8282467490970362, 0.8281451540066097, 0.8313763840878764, 0.8308018104381248, 0.8209567574063605, 0.8241302834729534, 0.8226589908184291, 0.8270271278811645, 0.830664305906301, 0.8203929619120565, 0.8224815836425375, 0.8237001044951513, 0.8313479780817807, 0.8329858647615546, 0.832335056899857, 0.8354202635592689, 0.8161501686792456, 0.8239553325342126, 0.8345026644916348, 0.8411879402111461, 0.84706349859967, 0.8471910154565705, 0.8497671887603111, 0.8499443667216294, 0.8426419481217557, 0.8311022450264477, 0.8319811018491041, 0.8364265345858805, 0.8336244308260876, 0.8356159034061295, 0.836681101469131, 0.8355831155692058, 0.8265800562713214, 0.8345329316682857, 0.8416293372966378, 0.843403903566974, 0.841205361854855, 0.8424763919344297, 0.8456110946084566, 0.8491500416235146, 0.8553094915274282, 0.8559301801758902, 0.8517589430317951, 0.8447339335177722, 0.8457438797744287, 0.8445043939054195, 0.8498200501474077, 0.7953844495001369, 0.7999339187067497, 0.8029742241252313, 0.7970320351464432, 0.8066407668727626, 0.8028756924445225, 0.801004915368745, 0.8068748681089789, 0.8159652427438642, 0.8140632779574296, 0.8146199584448192, 0.8202226275099758, 0.8193915356927132, 0.8217050176656105, 0.823622430055676, 0.8244280146103493, 0.824385909685459, 0.8190957562169131, 0.8180996783361856, 0.8209706216471454, 0.8294585557173706, 0.8299134908082841], "dataset": "Cifar10", "nb_examples_train": 42500, "seed": 1234, "moving_var_accuracy_train": [0.0009124960133118837, 0.004100786878796512, 0.007976886985712913, 0.011928924598948117, 0.012588772385652378, 0.013663924007189689, 0.02003989150344735, 0.021631291928325382, 0.027702880005355486, 0.033813147108291336, 0.03817652163843954, 0.039716509281023146, 0.043157152910201876, 0.04243537384310354, 0.04153861398261567, 0.040786081384317094, 0.03818622634859814, 0.03888476340322373, 0.038841108789149946, 0.03906772871716393, 0.040258757289405464, 0.03760885315135659, 0.033859262004177965, 0.030536024108124345, 0.029437013106648216, 0.029686302281027553, 0.028134481994314006, 0.028960547668473363, 0.027906245977056588, 0.02513035726111129, 0.025523667657576767, 0.024724351456745564, 0.0228232401536937, 0.020860990638938332, 0.019191083873420372, 0.018332415777333043, 0.0166765492309172, 0.016173406780818182, 0.015209691148478399, 0.014151525656620409, 0.013367494313716624, 0.013729146156414494, 0.012886845408103057, 0.011655185832463883, 0.010610130072564504, 0.009982156266885315, 0.009991345691352896, 0.009222242100428315, 0.010541460953418727, 0.009865787462368502, 0.009224131903862549, 0.008334879861604085, 0.008060396353329686, 0.007972189848145201, 0.007224878078100245, 0.006509524680192081, 0.006815297343274052, 0.007318972679977407, 0.006963413638093587, 0.006464192198266634, 0.005890265935925683, 0.0059454937144576316, 0.006115157281970166, 0.006111812260229551, 0.0055191749360896615, 0.005539643093762551, 0.005695914773644399, 0.005126661776232879, 0.004636422521807954, 0.0046353943618839925, 0.004367247495111204, 0.003954254252504405, 0.0035589792660073636, 0.0032045997730291583, 0.0028852746590512365, 0.002596999743948899, 0.0026812090866296413, 0.002635435701754203, 0.0024655646184747297, 0.0024235474590864814, 0.002367655958829392, 0.00228071341407906, 0.002313870648719676, 0.0021969498199136653, 0.0021716438964428176, 0.001958125561699229, 0.0021579107884679115, 0.0019433905886560058, 0.0017595383637133903, 0.001592964986802824, 0.0016359077936627911, 0.0018299994644881692, 0.0018003422070902943, 0.0017150382586965526, 0.0016282985650238548, 0.0014704687993367025, 0.0025514914906764243, 0.0022993256429858413, 0.0025320235304330963, 0.0022919304429577366, 0.0022683930374127748, 0.0020523884052146696, 0.002556461390797014, 0.0023368539140609748, 0.002272934416192309, 0.0028780474311671683, 0.0026404999938512558, 0.0024762628361456617, 0.0023137286360157216, 0.002083224355236214, 0.0019296181859371731, 0.0018307459655636312, 0.00179316465258551, 0.0017389270835877933, 0.0017673428769244435, 0.0018307932388818076, 0.0024214342090038738, 0.0022209071045946626, 0.0025585840232230806, 0.0023089606618393373, 0.002395214374079619, 0.0023094344055909757, 0.0023354638609847434, 0.0021277755943248204, 0.0019544989486284135, 0.002035034277779472, 0.0022217087008042256, 0.002043597636287719, 0.002002008222724676, 0.002354600300897819, 0.0023949335064266694, 0.0022136558526137475, 0.002009478523364408, 0.002252152326355278, 0.0020489888468454556, 0.001916733174670942, 0.001726294654037843, 0.0017112712219080999, 0.0015780823636312082, 0.0021694677093345664, 0.002003004764318948, 0.0018564858198078498, 0.0016889615184665265, 0.0015795206760353226, 0.0015060481584303889, 0.0014485416869194742, 0.00173033135013551, 0.0017471295611477943, 0.0018627175556310996, 0.0017392770181589507, 0.0016349236914034112, 0.0017097113859760474, 0.0016042992430667705, 0.0015777868688930624, 0.0024165295884317523, 0.0022791514439570834, 0.002178952076532452, 0.001991395993467287, 0.001815694411609698, 0.0022196911337070847, 0.0020132940975626508, 0.0038519316956887994, 0.0042493888265869055, 0.0043381576695412935, 0.004042090092792756, 0.0037839012781474973, 0.0034087887216849417, 0.0031645030341567646, 0.003083165315040063, 0.002893320573263862, 0.002955191050923036, 0.0028269660921210254, 0.002929159388186159, 0.0026365533963675653, 0.0028759204586474925, 0.0027251085196440743, 0.0031315464677288693, 0.0029698128464857127, 0.0027066872266226527, 0.0026591158133193555, 0.0024184530720233535, 0.002265108930429424, 0.0020442694682619405, 0.002648671660652391, 0.0026197240150870145, 0.002357844507639902, 0.00221602768741866, 0.001997396132587693, 0.0026699821421131854, 0.002493625337159966, 0.0022637451221212824, 0.0022090962024987376, 0.002107248158127691, 0.0028460279093478567, 0.002600686185010412, 0.0023539807041236607, 0.0026449923672848745, 0.0024046371855384087, 0.002167985424840195, 0.0020368533835376907, 0.005175197055349816, 0.005205962595040785, 0.005686582238317224, 0.005520160217498478, 0.005278843873141218, 0.00475110583076624, 0.004335725267707764, 0.00390243526920678, 0.003992119598956146, 0.004791390366811303, 0.00431920283396274, 0.00406513940052129, 0.003729291529794969, 0.0033920560441489988, 0.003063062261954899, 0.002767606193087319, 0.003220341264269598, 0.0034675411815593914, 0.003574017818982426, 0.003244957806114518, 0.0029639642964424144, 0.0026821075239668274, 0.0025023340192611076, 0.002364817931113485, 0.0024697855460715282, 0.0022262742810493417, 0.0021602398267549106, 0.0023883726721284273, 0.0021587153278875954, 0.0019566707220740956, 0.0020153094614135756, 0.028482890075734645, 0.025820880098718448, 0.023321983202185446, 0.02130757137070359, 0.02000776376212865, 0.018134569454967473, 0.01635261077127602, 0.015027456800701637, 0.01426842531965456, 0.012874140018128638, 0.011589515054801137, 0.010713072655203994, 0.009647981812162082, 0.008731353420496163, 0.007891306310908735, 0.007108016378090417, 0.0063972306957036755, 0.006009379139620222, 0.005417370765958471, 0.004949814528815323, 0.005103238298958202, 0.0045947771624948825], "duration": 79134.1009, "accuracy_train": [0.10069182981927711, 0.20096009036144577, 0.24738798945783133, 0.2807087725903614, 0.21743222891566266, 0.24934111445783133, 0.39770801957831325, 0.3336078689759036, 0.45620764307228917, 0.49809393825301207, 0.5087302334337349, 0.48870481927710846, 0.5560993975903614, 0.4976468373493976, 0.5106362951807228, 0.5314853162650602, 0.4847044427710843, 0.5933734939759037, 0.5984327936746988, 0.6261295180722891, 0.6717808734939759, 0.5812311746987951, 0.4811511671686747, 0.44467714608433734, 0.6157991340361446, 0.6715220256024096, 0.6274708207831325, 0.7156438253012049, 0.677710843373494, 0.536168109939759, 0.7273861069277109, 0.7052193147590361, 0.6592855798192772, 0.6472138554216867, 0.6615446159638554, 0.7088902484939759, 0.6555911144578314, 0.7293862951807228, 0.7122317394578314, 0.7072430346385542, 0.7264448418674698, 0.7884506777108434, 0.7415992093373494, 0.6976656626506024, 0.7115963855421686, 0.6093044051204819, 0.7775320030120482, 0.7328689759036144, 0.5295557228915663, 0.6067394578313253, 0.7270096009036144, 0.6904885165662651, 0.7520237198795181, 0.7704019201807228, 0.7135730421686747, 0.6834760918674698, 0.7945924322289156, 0.5870434864457831, 0.7549887048192772, 0.6499905873493976, 0.7204913403614458, 0.7795557228915663, 0.7955572289156626, 0.7948277484939759, 0.7351986069277109, 0.8020284262048193, 0.8190888554216867, 0.7371987951807228, 0.7547298569277109, 0.8122176204819277, 0.7942865210843374, 0.768589984939759, 0.7526826054216867, 0.7579536897590361, 0.7507059487951807, 0.7555769954819277, 0.6922533885542169, 0.6981833584337349, 0.7751788403614458, 0.7938158885542169, 0.7964278990963856, 0.7962631777108434, 0.8134177334337349, 0.8005929969879518, 0.8149708207831325, 0.7795086596385542, 0.8400790662650602, 0.784167921686747, 0.7915803840361446, 0.7920745481927711, 0.8302899096385542, 0.8506682981927711, 0.8352080195783133, 0.8305016942771084, 0.7706137048192772, 0.7907803087349398, 0.680675828313253, 0.7800498870481928, 0.8569277108433735, 0.7803322665662651, 0.8389966114457831, 0.8069465361445783, 0.8858480798192772, 0.8259600903614458, 0.7645190135542169, 0.8997788027108434, 0.8368552334337349, 0.7822853915662651, 0.7815088478915663, 0.8060758659638554, 0.784214984939759, 0.7740728539156626, 0.7629659262048193, 0.8364316641566265, 0.8502917921686747, 0.8592808734939759, 0.7200677710843374, 0.8250188253012049, 0.8845303087349398, 0.8052287274096386, 0.872082078313253, 0.8599868222891566, 0.8762236445783133, 0.8111822289156626, 0.8054875753012049, 0.7689664909638554, 0.8846479668674698, 0.8475150602409639, 0.870128953313253, 0.7534826807228916, 0.7686605798192772, 0.8439147213855421, 0.8072053840361446, 0.7494352409638554, 0.7969691265060241, 0.8394672439759037, 0.8101939006024096, 0.8553746234939759, 0.8382435993975904, 0.9110033885542169, 0.8052051957831325, 0.8020754894578314, 0.8382671310240963, 0.799792921686747, 0.8535626882530121, 0.8581513554216867, 0.7603539156626506, 0.8682464231927711, 0.8837067018072289, 0.8061699924698795, 0.8021460843373494, 0.8786238704819277, 0.8593044051204819, 0.8735881024096386, 0.7336455195783133, 0.8623870481927711, 0.8694230045180723, 0.8171592620481928, 0.8498211596385542, 0.7546357304216867, 0.8403849774096386, 0.6779932228915663, 0.9067441641566265, 0.8983669051204819, 0.8694935993975904, 0.7940041415662651, 0.8362904743975904, 0.7980986445783133, 0.8786944653614458, 0.8689759036144579, 0.8987904743975904, 0.8856833584337349, 0.7814853162650602, 0.8421969126506024, 0.7657661897590361, 0.872035015060241, 0.923804593373494, 0.8046169051204819, 0.8609280873493976, 0.8932605421686747, 0.8317018072289156, 0.815417921686747, 0.8357021837349398, 0.748046875, 0.7821677334337349, 0.8272307981927711, 0.8604574548192772, 0.8256306475903614, 0.7323512801204819, 0.8526920180722891, 0.8094173569277109, 0.8663403614457831, 0.8633989081325302, 0.7279508659638554, 0.8412791792168675, 0.8346667921686747, 0.9001788403614458, 0.8477268448795181, 0.8264777861445783, 0.8631871234939759, 0.6427193147590361, 0.8942018072289156, 0.9294286521084337, 0.901355421686747, 0.8999435240963856, 0.8483386671686747, 0.8729527484939759, 0.851538968373494, 0.7769201807228916, 0.7272449171686747, 0.8398908132530121, 0.8764354292168675, 0.8084054969879518, 0.853539156626506, 0.8462678840361446, 0.8257012424698795, 0.7455525225903614, 0.9061088102409639, 0.9054969879518072, 0.859375, 0.8214184864457831, 0.8539156626506024, 0.8738234186746988, 0.8810005647590361, 0.9107445406626506, 0.8615163780120482, 0.8142178087349398, 0.7815088478915663, 0.8548333960843374, 0.8333490210843374, 0.8976609563253012, 0.3054640436746988, 0.8408791415662651, 0.8303369728915663, 0.7435523343373494, 0.8931193524096386, 0.7689900225903614, 0.784167921686747, 0.8597044427710844, 0.8977786144578314, 0.7969455948795181, 0.8196300828313253, 0.8706466490963856, 0.8119117093373494, 0.8425263554216867, 0.8408791415662651, 0.8316782756024096, 0.8240069653614458, 0.771484375, 0.8091349774096386, 0.8468091114457831, 0.9058499623493976, 0.834007906626506], "end": "2016-01-18 11:58:10.355000", "epoch": [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0], "accuracy_valid": [0.09617456896551724, 0.1958512931034483, 0.2427262931034483, 0.2712823275862069, 0.21241918103448276, 0.24178340517241378, 0.3762122844827586, 0.3252963362068966, 0.44221443965517243, 0.48450969827586204, 0.48760775862068967, 0.4800646551724138, 0.5360991379310345, 0.4783135775862069, 0.4810075431034483, 0.5051185344827587, 0.4665948275862069, 0.5650592672413793, 0.5711206896551724, 0.5922683189655172, 0.6407596982758621, 0.5564385775862069, 0.45770474137931033, 0.4248383620689655, 0.5887661637931034, 0.634698275862069, 0.5942887931034483, 0.6791487068965517, 0.6395474137931034, 0.5127963362068966, 0.6857489224137931, 0.6683728448275862, 0.6163793103448276, 0.6077586206896551, 0.6274245689655172, 0.6554418103448276, 0.6127424568965517, 0.6782058189655172, 0.658135775862069, 0.6689116379310345, 0.6749730603448276, 0.7331627155172413, 0.69140625, 0.6528825431034483, 0.6639278017241379, 0.5778556034482759, 0.7261584051724138, 0.6813038793103449, 0.49851831896551724, 0.5740840517241379, 0.6822467672413793, 0.6518049568965517, 0.7043372844827587, 0.7165948275862069, 0.6633890086206896, 0.6360452586206896, 0.7372036637931034, 0.5513200431034483, 0.7008351293103449, 0.6116648706896551, 0.6689116379310345, 0.7231950431034483, 0.7409752155172413, 0.7390894396551724, 0.6759159482758621, 0.7386853448275862, 0.7580818965517241, 0.6839978448275862, 0.6976023706896551, 0.744073275862069, 0.7316810344827587, 0.7093211206896551, 0.7060883620689655, 0.7002963362068966, 0.6915409482758621, 0.6938308189655172, 0.6473599137931034, 0.6544989224137931, 0.7182112068965517, 0.7347790948275862, 0.7354525862068966, 0.7393588362068966, 0.751885775862069, 0.7416487068965517, 0.7421875, 0.7215786637931034, 0.7730334051724138, 0.7194234913793104, 0.7337015086206896, 0.7287176724137931, 0.7710129310344828, 0.7816540948275862, 0.759698275862069, 0.7726293103448276, 0.7098599137931034, 0.7308728448275862, 0.6297144396551724, 0.7179418103448276, 0.7835398706896551, 0.7156519396551724, 0.7673760775862069, 0.7473060344827587, 0.8083243534482759, 0.755792025862069, 0.7067618534482759, 0.8115571120689655, 0.7602370689655172, 0.728582974137931, 0.7126885775862069, 0.7433997844827587, 0.7237338362068966, 0.7054148706896551, 0.6994881465517241, 0.7641433189655172, 0.7737068965517241, 0.7850215517241379, 0.6702586206896551, 0.7529633620689655, 0.7995689655172413, 0.7351831896551724, 0.796875, 0.7761314655172413, 0.7999730603448276, 0.7372036637931034, 0.7320851293103449, 0.7013739224137931, 0.8044181034482759, 0.7613146551724138, 0.791082974137931, 0.6955818965517241, 0.693426724137931, 0.7662984913793104, 0.7339709051724138, 0.6860183189655172, 0.736260775862069, 0.7619881465517241, 0.7393588362068966, 0.7755926724137931, 0.7618534482758621, 0.8213900862068966, 0.7361260775862069, 0.7277747844827587, 0.7724946120689655, 0.7295258620689655, 0.7772090517241379, 0.7794989224137931, 0.7075700431034483, 0.7848868534482759, 0.796875, 0.7365301724137931, 0.734375, 0.7972790948275862, 0.7719558189655172, 0.7918911637931034, 0.6681034482758621, 0.77734375, 0.7926993534482759, 0.7381465517241379, 0.7684536637931034, 0.6901939655172413, 0.7592941810344828, 0.6317349137931034, 0.8139816810344828, 0.8122306034482759, 0.7914870689655172, 0.7237338362068966, 0.7572737068965517, 0.7261584051724138, 0.7978178879310345, 0.7815193965517241, 0.810614224137931, 0.7975484913793104, 0.7094558189655172, 0.7696659482758621, 0.6935614224137931, 0.7838092672413793, 0.8312230603448276, 0.7293911637931034, 0.7759967672413793, 0.806573275862069, 0.7502693965517241, 0.740167025862069, 0.7540409482758621, 0.6741648706896551, 0.7102640086206896, 0.7552532327586207, 0.7755926724137931, 0.7504040948275862, 0.6716056034482759, 0.7638739224137931, 0.7376077586206896, 0.7869073275862069, 0.7790948275862069, 0.6729525862068966, 0.7633351293103449, 0.7576778017241379, 0.8088631465517241, 0.7706088362068966, 0.7466325431034483, 0.7786907327586207, 0.5860721982758621, 0.8068426724137931, 0.8374191810344828, 0.8077855603448276, 0.8126346982758621, 0.7654903017241379, 0.7863685344827587, 0.7738415948275862, 0.7046066810344828, 0.6732219827586207, 0.75390625, 0.7922952586206896, 0.7328933189655172, 0.7703394396551724, 0.7657596982758621, 0.7487877155172413, 0.6707974137931034, 0.8133081896551724, 0.8147898706896551, 0.7735721982758621, 0.7540409482758621, 0.7657596982758621, 0.7866379310344828, 0.7918911637931034, 0.8118265086206896, 0.7782866379310345, 0.7339709051724138, 0.7079741379310345, 0.7677801724137931, 0.7566002155172413, 0.8080549568965517, 0.2885237068965517, 0.763739224137931, 0.7443426724137931, 0.6794181034482759, 0.8018588362068966, 0.6868265086206896, 0.7159213362068966, 0.7733028017241379, 0.8037446120689655, 0.7334321120689655, 0.7328933189655172, 0.7842133620689655, 0.7350484913793104, 0.7626616379310345, 0.7613146551724138, 0.7547144396551724, 0.7540409482758621, 0.6965247844827587, 0.7229256465517241, 0.7590247844827587, 0.8172144396551724, 0.752020474137931], "accuracy_test": 0.831229967948718, "start": "2016-01-17 13:59:16.254000", "learning_rate_per_epoch": [0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443, 0.0017785406671464443], "accuracy_train_last": 0.834007906626506, "error_valid": [0.9038254310344828, 0.8041487068965517, 0.7572737068965517, 0.7287176724137931, 0.7875808189655172, 0.7582165948275862, 0.6237877155172413, 0.6747036637931034, 0.5577855603448276, 0.5154903017241379, 0.5123922413793103, 0.5199353448275862, 0.4639008620689655, 0.5216864224137931, 0.5189924568965517, 0.4948814655172413, 0.5334051724137931, 0.43494073275862066, 0.4288793103448276, 0.40773168103448276, 0.3592403017241379, 0.44356142241379315, 0.5422952586206897, 0.5751616379310345, 0.4112338362068966, 0.36530172413793105, 0.4057112068965517, 0.3208512931034483, 0.3604525862068966, 0.4872036637931034, 0.31425107758620685, 0.3316271551724138, 0.3836206896551724, 0.39224137931034486, 0.37257543103448276, 0.3445581896551724, 0.3872575431034483, 0.32179418103448276, 0.34186422413793105, 0.3310883620689655, 0.3250269396551724, 0.2668372844827587, 0.30859375, 0.3471174568965517, 0.3360721982758621, 0.4221443965517241, 0.2738415948275862, 0.31869612068965514, 0.5014816810344828, 0.4259159482758621, 0.31775323275862066, 0.3481950431034483, 0.2956627155172413, 0.28340517241379315, 0.3366109913793104, 0.3639547413793104, 0.2627963362068966, 0.4486799568965517, 0.29916487068965514, 0.38833512931034486, 0.3310883620689655, 0.2768049568965517, 0.2590247844827587, 0.2609105603448276, 0.3240840517241379, 0.2613146551724138, 0.2419181034482759, 0.3160021551724138, 0.30239762931034486, 0.25592672413793105, 0.2683189655172413, 0.29067887931034486, 0.2939116379310345, 0.2997036637931034, 0.3084590517241379, 0.30616918103448276, 0.3526400862068966, 0.34550107758620685, 0.2817887931034483, 0.2652209051724138, 0.2645474137931034, 0.2606411637931034, 0.24811422413793105, 0.2583512931034483, 0.2578125, 0.2784213362068966, 0.2269665948275862, 0.2805765086206896, 0.2662984913793104, 0.27128232758620685, 0.22898706896551724, 0.2183459051724138, 0.24030172413793105, 0.22737068965517238, 0.2901400862068966, 0.2691271551724138, 0.3702855603448276, 0.2820581896551724, 0.21646012931034486, 0.2843480603448276, 0.23262392241379315, 0.2526939655172413, 0.1916756465517241, 0.24420797413793105, 0.2932381465517241, 0.18844288793103448, 0.23976293103448276, 0.27141702586206895, 0.28731142241379315, 0.2566002155172413, 0.2762661637931034, 0.29458512931034486, 0.3005118534482759, 0.23585668103448276, 0.2262931034482759, 0.2149784482758621, 0.32974137931034486, 0.24703663793103448, 0.20043103448275867, 0.2648168103448276, 0.203125, 0.22386853448275867, 0.20002693965517238, 0.2627963362068966, 0.26791487068965514, 0.29862607758620685, 0.1955818965517241, 0.2386853448275862, 0.20891702586206895, 0.3044181034482759, 0.30657327586206895, 0.2337015086206896, 0.2660290948275862, 0.31398168103448276, 0.26373922413793105, 0.2380118534482759, 0.2606411637931034, 0.22440732758620685, 0.2381465517241379, 0.17860991379310343, 0.26387392241379315, 0.2722252155172413, 0.22750538793103448, 0.2704741379310345, 0.2227909482758621, 0.22050107758620685, 0.2924299568965517, 0.2151131465517241, 0.203125, 0.26346982758620685, 0.265625, 0.2027209051724138, 0.22804418103448276, 0.20810883620689657, 0.3318965517241379, 0.22265625, 0.2073006465517241, 0.2618534482758621, 0.23154633620689657, 0.3098060344827587, 0.24070581896551724, 0.3682650862068966, 0.18601831896551724, 0.1877693965517241, 0.20851293103448276, 0.2762661637931034, 0.2427262931034483, 0.2738415948275862, 0.20218211206896552, 0.2184806034482759, 0.18938577586206895, 0.2024515086206896, 0.29054418103448276, 0.2303340517241379, 0.30643857758620685, 0.21619073275862066, 0.16877693965517238, 0.2706088362068966, 0.22400323275862066, 0.19342672413793105, 0.2497306034482759, 0.25983297413793105, 0.2459590517241379, 0.32583512931034486, 0.2897359913793104, 0.24474676724137934, 0.22440732758620685, 0.2495959051724138, 0.3283943965517241, 0.23612607758620685, 0.2623922413793104, 0.21309267241379315, 0.22090517241379315, 0.3270474137931034, 0.23666487068965514, 0.2423221982758621, 0.1911368534482759, 0.22939116379310343, 0.2533674568965517, 0.22130926724137934, 0.4139278017241379, 0.19315732758620685, 0.16258081896551724, 0.19221443965517238, 0.1873653017241379, 0.2345096982758621, 0.21363146551724133, 0.2261584051724138, 0.29539331896551724, 0.32677801724137934, 0.24609375, 0.2077047413793104, 0.26710668103448276, 0.22966056034482762, 0.2342403017241379, 0.2512122844827587, 0.3292025862068966, 0.18669181034482762, 0.18521012931034486, 0.2264278017241379, 0.2459590517241379, 0.2342403017241379, 0.21336206896551724, 0.20810883620689657, 0.1881734913793104, 0.22171336206896552, 0.2660290948275862, 0.2920258620689655, 0.23221982758620685, 0.24339978448275867, 0.1919450431034483, 0.7114762931034483, 0.23626077586206895, 0.25565732758620685, 0.3205818965517241, 0.19814116379310343, 0.3131734913793104, 0.2840786637931034, 0.2266971982758621, 0.19625538793103448, 0.2665678879310345, 0.26710668103448276, 0.21578663793103448, 0.2649515086206896, 0.23733836206896552, 0.2386853448275862, 0.24528556034482762, 0.2459590517241379, 0.3034752155172413, 0.2770743534482759, 0.24097521551724133, 0.18278556034482762, 0.24797952586206895], "accuracy_train_std": [0.028988165519651003, 0.03708399185412372, 0.037383653074222624, 0.037234640716109685, 0.03432960269668228, 0.036972611198572584, 0.04556662965705364, 0.04087807929702307, 0.04238355583471187, 0.0435387937914881, 0.04239896962859762, 0.04446792574130151, 0.04265561521565782, 0.042354417596306766, 0.04632391789785104, 0.045779144945577235, 0.04234905695781908, 0.047275734575170286, 0.04158311398808577, 0.04435001845720917, 0.04029939268501057, 0.043955415447379284, 0.04639498131562319, 0.04233905951555421, 0.04441102493344884, 0.04254592909491808, 0.04552159543890099, 0.04038954005521218, 0.0429168356551034, 0.0425785583313835, 0.037734656211544794, 0.04036136319186824, 0.04356757840382338, 0.043675003082394505, 0.04251608813257924, 0.03976727219644986, 0.044259930615998304, 0.04011804857420568, 0.042302318744541635, 0.03987934535039863, 0.03878602435750134, 0.03591407291038004, 0.03849626661305844, 0.039798875105823105, 0.03730919902656, 0.04132423629709855, 0.03844773974559716, 0.039338404973273726, 0.04335080003757265, 0.045047474663698246, 0.03943234331525884, 0.0455874295756873, 0.0378572606383174, 0.03966700112843163, 0.04020865760495867, 0.043301025425855295, 0.03830366964777158, 0.04237278897928598, 0.03808216985444116, 0.04271531468781915, 0.04051222205525184, 0.041059606775409124, 0.03654982043144797, 0.03921797421560747, 0.03951942438171653, 0.038279375003609895, 0.03534102479757274, 0.04108700156414245, 0.03781252684005636, 0.03631014609545707, 0.036512076921067046, 0.038240073255652436, 0.03855290583024519, 0.03955797300295537, 0.040507191770027255, 0.03868847731298583, 0.04092216830764993, 0.04325481657986739, 0.03838720225542117, 0.03645549471194156, 0.03812387126231031, 0.03766798238731495, 0.0382790856887825, 0.03488803104209188, 0.03678855797495693, 0.03802632209650133, 0.03635854850967718, 0.038602541317022405, 0.03600750250877634, 0.03621657221956582, 0.03495041510796752, 0.0351474914897568, 0.03555430975537414, 0.03488662635546782, 0.035643447182475446, 0.037874801638695034, 0.03988840449232603, 0.03620772609692554, 0.03243761096669466, 0.03734559574636721, 0.03413234642503418, 0.03445171564513547, 0.030423936074726106, 0.03395254106870287, 0.03741427234693426, 0.029342220979016027, 0.03337341352387284, 0.03830729083276542, 0.03782060962187663, 0.03662007261438031, 0.037916599677439045, 0.038724070993747674, 0.03992952309740212, 0.03512138416782382, 0.03213524269209739, 0.03357533503191116, 0.04193713494447626, 0.03346445503858865, 0.03187022409234203, 0.03771052360656062, 0.032692399866160446, 0.03446164723829306, 0.030420850896791495, 0.038380133328344675, 0.03611965929059169, 0.03935616519879749, 0.0313957757980233, 0.03433050596635607, 0.029444553581179644, 0.0399789522622645, 0.03960206352230656, 0.03509829458281303, 0.036745363787645396, 0.037761332371814525, 0.036138572347080906, 0.03331224018991512, 0.036090519322580464, 0.036136028703402406, 0.03274124587652933, 0.030382273408411743, 0.03820246324228235, 0.037418060997637635, 0.03460940717845551, 0.036542608220028326, 0.03306021010162833, 0.03369531717491696, 0.04159891089806965, 0.03177187019371537, 0.031307747972312346, 0.03547391720176593, 0.038015107740475965, 0.029477718280795755, 0.03183566433437077, 0.03125340197769311, 0.03876511759583277, 0.03386075953266113, 0.031302361843688446, 0.0372309598213905, 0.032364088867772596, 0.04101866253294143, 0.0343265297888546, 0.04214229842177093, 0.03103652046716489, 0.029197002495292636, 0.03302080048628713, 0.03892853693781097, 0.035925226388938504, 0.036457408527332216, 0.03248669518785296, 0.031990136274125114, 0.029977879129543493, 0.031916971345083964, 0.03996900620500765, 0.03171389352953388, 0.039571912679260475, 0.032631875883012786, 0.02592442030466347, 0.036105544679872995, 0.03289755050071646, 0.03086588830612093, 0.03569957921684129, 0.036467067205358486, 0.03631554426943395, 0.042623480181772005, 0.03908700914723177, 0.035116094145528014, 0.03288286956519051, 0.03749724627332163, 0.04054900070610125, 0.034888697653243414, 0.038252401460146725, 0.03428550714087524, 0.03404019566855423, 0.040204766940448736, 0.035563840017847057, 0.0352820938026412, 0.028270994410090334, 0.03301495584966463, 0.03726384445656649, 0.03314272336228249, 0.0414268052486674, 0.030307492561343834, 0.025040249119930063, 0.03058908705051899, 0.030576992222197837, 0.035254075709817305, 0.03156666612541371, 0.0330038842611981, 0.040043278678033055, 0.040396250504610466, 0.03662125960506425, 0.0318784239234806, 0.0363335323903116, 0.032133898609387875, 0.03439904481754244, 0.03446986515470911, 0.03992691585267095, 0.028004375641996156, 0.028943862339577024, 0.03271576568506291, 0.03429689961852733, 0.03298405515914647, 0.03179376161777881, 0.031040873482916082, 0.02614814812294824, 0.03347142888639078, 0.03640465828593887, 0.038318007823718074, 0.032042394639342865, 0.03521517144723692, 0.031018888076709192, 0.04296601142936055, 0.0323971961692994, 0.033143926292173234, 0.04003832777820855, 0.028005245651364623, 0.038966860108174, 0.03720569683335219, 0.032232900123432995, 0.028786941875015376, 0.03652571607450434, 0.03443630636710699, 0.03293394678559061, 0.036384879105973794, 0.033481857992294056, 0.03700623417004671, 0.0345105804081884, 0.035150382354466866, 0.039232147613502605, 0.039023433558054335, 0.034116184245693036, 0.02913761783756231, 0.03602595953652624], "accuracy_test_std": 0.031283529277968486, "tags": ["deepconvnets", "zoonormalized"], "hp": {"zoom_range": [1.0, 1.2], "translation_range": [-3, 3], "momentum": 0.7704112504997526, "shear_range": [1, 1.1], "patience_check_each": 1, "learning_rate": 0.001778540719972883, "patience_threshold": 1, "do_flip": true, "batch_size": 128, "optimization": "rmsprop", "nb_data_augmentation": 2, "learning_rate_decay_method": "none", "max_epochs": 1000, "patience_nb_epochs": 50, "weight_decay": 1.5896222568070643e-08, "valid_ratio": 0.15, "rotation_range": [-90, 90], "learning_rate_decay": 0.9069888995174334}, "accuracy_valid_max": 0.8374191810344828, "code_": "from datetime import datetime\nimport matplotlib as mpl\nmpl.use('Agg')   # NOQA\nfrom lasagnekit.easy import BatchOptimizer, BatchIterator, get_batch_slice\nfrom lasagnekit.nnet.capsule import Capsule\nfrom lasagnekit.easy import iterate_minibatches\nfrom lasagne import updates\nimport theano\nimport theano.tensor as T\n\nimport numpy as np\nimport json\n\nfrom skimage.io import imsave\nfrom lasagnekit.datasets.infinite_image_dataset import Transform\n\n\nclass MyBatchIterator(BatchIterator):\n\n    def __init__(self, nb_data_augmentation=1,  **transform_params):\n        super(MyBatchIterator, self).__init__()\n\n        self.nb_data_augmentation = nb_data_augmentation\n        self.transform_params = transform_params\n\n    def transform(self, batch_index, V):\n        assert self.batch_size is not None\n        assert self.nb_batches is not None\n\n        if isinstance(batch_index, T.TensorVariable):\n            batch_slice = get_batch_slice(batch_index,\n                                          self.batch_size)\n        else:\n            batch_slice = slice(batch_index * self.batch_size,\n                                (batch_index+1) * self.batch_size)\n\n        d = OrderedDict()\n        X = V[\"X\"][batch_slice]\n        y = V[\"y\"][batch_slice]\n\n        X_list = [X]\n        y_list = [y]\n        for i in range(self.nb_data_augmentation):\n            tr, _ = Transform(X.transpose(0, 2, 3, 1),\n                              np.random,\n                              **self.transform_params)\n            imsave(\"out.png\", (((tr[0] + 1) / 2.)))\n            X_transformed = tr.transpose((0, 3, 1, 2))\n            X_list.append(X_transformed)\n            y_list.append(y)\n        d[\"X\"] = np.concatenate(X_list, axis=0)\n        d[\"y\"] = np.concatenate(y_list, axis=0)\n        d[\"X\"], d[\"y\"] = shuffle(d[\"X\"], d[\"y\"])\n        return d\n\n\nif __name__ == \"__main__\":\n    from lasagnekit.datasets.cifar10 import Cifar10\n    from sklearn.utils import shuffle\n    from sklearn.cross_validation import train_test_split\n    from collections import OrderedDict\n\n    from lightexperiments.light import Light\n    from hp_toolkit.hp import (\n            Param, make_constant_param,\n            instantiate_random, instantiate_default\n    )\n    import argparse\n    import vgg  # NOQA\n    import vgg_small  # NOQA\n    import vgg_very_small  # NOQA\n    import spatially_sparse  # NOQA\n    import nin  # NOQA\n    import fully  # NOQA\n    import residual  # NOQA\n    import residualv2  # NOQA\n\n    parser = argparse.ArgumentParser(description='zoo')\n    parser.add_argument(\"--budget-hours\",\n                        default=np.inf,\n                        help=\"nb of maximum hours (defaut=inf)\")\n    parser.add_argument(\"--fast-test\", default=False, type=bool)\n    parser.add_argument(\"--model\", default=\"vgg\", type=str)\n    parser.add_argument(\"--default-model\", default=False, type=bool)\n\n    models = {\n        \"vgg\": vgg,\n        \"vgg_small\": vgg_small,\n        \"vgg_very_small\": vgg_very_small,\n        \"spatially_sparse\": spatially_sparse,\n        \"nin\": nin,\n        \"fully\": fully,\n        \"residual\": residual,\n        \"residualv2\": residualv2\n    }\n    args = parser.parse_args()\n    model_class = models[args.model]\n    budget_sec = args.budget_hours * 3600\n    begin = datetime.now()\n    seed = 1234\n    fast_test = args.fast_test\n    np.random.seed(seed)\n    rng = np.random\n\n    if args.default_model is True:\n        instantiate = instantiate_default\n    else:\n        instantiate = instantiate_random\n\n    light = Light()\n    light.launch()\n    light.initials()\n    light.file_snapshot()\n    light.set_seed(seed)\n    light.tag(\"deepconvnets\")\n    light.tag(\"zoonormalized\")\n\n    data = Cifar10(batch_indexes=[1, 2, 3, 4, 5])\n    data.load()\n\n    data_test = Cifar10(batch_indexes=[6])\n    data_test.load()\n\n    light.set(\"dataset\", data.__class__.__name__)\n\n    hp = dict(\n        learning_rate=Param(initial=0.001, interval=[-4, -2], type='real', scale='log10'),\n        learning_rate_decay=Param(initial=0.98, interval=[0.8, 1], type='real'),\n        learning_rate_decay_method=Param(initial='sqrt', interval=['exp', 'none', 'sqrt', 'lin'], type='choice'),\n        momentum=Param(initial=0.9, interval=[0.5, 0.99], type='real'),\n        weight_decay=Param(initial=0, interval=[-10, -6], type='real', scale='log10'),\n        max_epochs=make_constant_param(1000),\n        batch_size=Param(initial=32,\n                         interval=[16, 32, 64, 128, 256, 512],\n                         type='choice'),\n        patience_nb_epochs=make_constant_param(50),\n        valid_ratio=make_constant_param(0.15),\n\n        patience_threshold=make_constant_param(1),\n        patience_check_each=make_constant_param(1),\n\n        optimization=Param(initial='adam',\n                           interval=['adam', 'nesterov_momentum', 'adadelta', 'rmsprop'],\n                           type='choice'),\n        # data augmentation\n        nb_data_augmentation=Param(initial=1, interval=[0, 1, 2, 3, 4], type='choice'),\n        zoom_range=make_constant_param((1.0, 1.2)),\n        rotation_range=make_constant_param((-90, 90)),\n        shear_range=make_constant_param((1, 1.1)),\n        translation_range=make_constant_param((-3, 3)),\n        do_flip=make_constant_param(True)\n\n    )\n\n    if fast_test is True:\n        instantiate = instantiate_default\n\n    default_params = {}\n    if fast_test is True:\n        default_params[\"max_epochs\"] = 1\n    hp = instantiate(hp, default_params=default_params)\n    light.set(\"hp\", hp)\n\n    hp_model = model_class.params\n    hp_model = instantiate(hp_model)\n    light.set(\"hp_model\", hp_model)\n\n    model = model_class.build_model(\n        input_width=data.img_dim[1],\n        input_height=data.img_dim[2],\n        output_dim=data.output_dim,\n        **hp_model)\n    light.set(\"model\", model_class.__name__)\n    print(model_class.__name__)\n    print(json.dumps(hp, indent=4))\n    print(json.dumps(hp_model, indent=4))\n\n    initial_lr = hp[\"learning_rate\"]\n\n    def evaluate(X, y, batch_size=None):\n        if batch_size is None:\n            batch_size = hp[\"batch_size\"]\n        accs = []\n        for mini_batch in iterate_minibatches(X.shape[0],\n                                              batch_size):\n            acc = (nnet.predict(X[mini_batch]) == y[mini_batch]).mean()\n            accs.append(acc)\n        return accs\n\n    class MyBatchOptimizer(BatchOptimizer):\n\n        def quitter(self, update_status):\n            quit = super(MyBatchOptimizer, self).quitter(update_status)\n            if (datetime.now() - begin).total_seconds() >= budget_sec:\n                print(\"Budget finished.quit.\")\n                quit = True\n            return quit\n\n        def iter_update(self, epoch, nb_batches, iter_update_batch):\n            start = datetime.now()\n            status = super(MyBatchOptimizer, self).iter_update(epoch,\n                                                               nb_batches,\n                                                               iter_update_batch)\n            duration = (datetime.now() - start).total_seconds()\n            status[\"duration\"] = duration\n            accs = evaluate(X_train, y_train)\n            status[\"accuracy_train\"] = np.mean(accs)\n            status[\"accuracy_train_std\"] = np.std(accs)\n            accs = evaluate(X_valid, y_valid)\n            status[\"accuracy_valid\"] = np.mean(accs)\n            status[\"accuracy_valid_std\"] = np.std(accs)\n\n            status[\"error_valid\"] = 1 - status[\"accuracy_valid\"]\n\n            status = self.add_moving_avg(\"accuracy_train\", status)\n            status = self.add_moving_var(\"accuracy_train\", status)\n\n            for k, v in status.items():\n                light.append(k, float(v))\n\n            lr = self.learning_rate\n            lr_decay_method = hp[\"learning_rate_decay_method\"]\n            lr_decay = hp[\"learning_rate_decay\"]\n            cur_lr = lr.get_value()\n            t = status[\"epoch\"]\n\n            if lr_decay_method == \"exp\":\n                new_lr = cur_lr * (1 - lr_decay)\n            elif lr_decay_method == \"lin\":\n                new_lr = initial_lr / (1 + t)\n            elif lr_decay_method == \"sqrt\":\n                new_lr = initial_lr / np.sqrt(1 + t)\n            else:\n                new_lr = cur_lr\n\n            new_lr = np.array(new_lr, dtype=\"float32\")\n            lr.set_value(new_lr)\n\n            light.append(\"learning_rate_per_epoch\",\n                         float(self.learning_rate.get_value()))\n            return status\n\n        def add_moving_avg(self, name, status, B=0.9):\n            if len(self.stats) >= 2:\n                old_avg = self.stats[-2][\"moving_avg_\" + name]\n            else:\n                old_avg = 0\n            avg = B * old_avg + (1 - B) * status[name]\n            status[\"moving_avg_\" + name] = avg\n            return status\n\n        def add_moving_var(self, name, status, B=0.9):\n            if len(self.stats) >= 2:\n                old_avg = self.stats[-2][\"moving_avg_\" + name]\n                old_var = self.stats[-2][\"moving_var_\" + name]\n            else:\n                old_avg = 0\n                old_var = 0\n            new_avg = B * old_avg + (1 - B) * status[name]\n            var = B * old_var + (1 - B) * (status[name] - old_avg) * (status[name] - new_avg)\n            status[\"moving_var_\" + name] = var\n            return status\n\n    learning_rate = theano.shared(np.array(hp[\"learning_rate\"],\n                                  dtype=\"float32\"))\n    momentum = hp[\"momentum\"]\n\n    optim_params = {\"learning_rate\": learning_rate}\n    if \"momentum\" in hp[\"optimization\"]:\n        optim_params[\"momentum\"] = hp[\"momentum\"]\n\n    batch_optimizer = MyBatchOptimizer(\n        verbose=1, max_nb_epochs=hp[\"max_epochs\"],\n        batch_size=hp[\"batch_size\"],\n        optimization_procedure=(getattr(updates, hp[\"optimization\"]),\n                                optim_params),\n        patience_stat=\"error_valid\",\n        patience_nb_epochs=hp[\"patience_nb_epochs\"],\n        patience_progression_rate_threshold=hp[\"patience_threshold\"],\n        patience_check_each=hp[\"patience_check_each\"],\n        verbose_stat_show=[\n            \"epoch\",\n            \"duration\",\n            \"accuracy_train\",\n            \"accuracy_train_std\",\n            \"accuracy_valid\",\n            \"accuracy_valid_std\",\n        ]\n    )\n    batch_optimizer.learning_rate = learning_rate\n\n    input_variables = OrderedDict()\n    input_variables[\"X\"] = dict(tensor_type=T.tensor4)\n    input_variables[\"y\"] = dict(tensor_type=T.ivector)\n    functions = dict(\n        predict=dict(\n            get_output=lambda model, X: (model.get_output(X, deterministic=True)[0]).argmax(axis=1),\n            params=[\"X\"]\n        )\n    )\n\n    def loss_function(model, tensors):\n        X = tensors[\"X\"]\n        y = tensors[\"y\"]\n        y_hat, = model.get_output(X)\n        if hp[\"weight_decay\"] > 0:\n            l1 = sum(T.abs_(param).sum() for param in model.capsule.all_params_regularizable) * hp[\"weight_decay\"]\n        else:\n            l1 = 0\n        return T.nnet.categorical_crossentropy(y_hat, y).mean() + l1\n\n    batch_iterator = MyBatchIterator(hp[\"nb_data_augmentation\"],\n                                     zoom_range=hp[\"zoom_range\"],\n                                     rotation_range=hp[\"rotation_range\"],\n                                     shear_range=hp[\"shear_range\"],\n                                     translation_range=hp[\"translation_range\"],\n                                     do_flip=hp[\"do_flip\"])\n\n    nnet = Capsule(\n        input_variables, model,\n        loss_function,\n        functions=functions,\n        batch_optimizer=batch_optimizer,\n        batch_iterator=batch_iterator,\n    )\n\n    from sklearn.preprocessing import LabelEncoder\n\n    imshape = ([data.X.shape[0]] +\n               list(data.img_dim))\n    X = data.X.reshape(imshape).astype(np.float32)\n    y = data.y\n    label_encoder = LabelEncoder()\n    y = label_encoder.fit_transform(y)\n    y = y.astype(np.int32)\n\n    # rescaling to [-1, 1]\n    X_min = X.min(axis=(0, 2, 3))[None, :, None, None]\n    X_max = X.max(axis=(0, 2, 3))[None, :, None, None]\n    X = 2 * ((X - X_min) / (X_max - X_min)) - 1\n    X, y = shuffle(X, y)\n\n    if fast_test is True:\n        X = X[0:100]\n        y = y[0:100]\n\n    X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=hp[\"valid_ratio\"])\n    light.set(\"nb_examples_train\", X_train.shape[0])\n    light.set(\"nb_examples_valid\", X_valid.shape[0])\n    try:\n        nnet.fit(X=X_train, y=y_train)\n    except KeyboardInterrupt:\n        print(\"interruption...\")\n\n    imshape = ([data_test.X.shape[0]] +\n               list(data_test.img_dim))\n    X_test = data_test.X.reshape(imshape).astype(np.float32)\n    X_test = 2 * ((X_test - X_min) / (X_max - X_min)) - 1\n    y_test = data_test.y\n    y_test = label_encoder.transform(y_test)\n    y_test = y_test.astype(np.int32)\n\n    accs = evaluate(X_test, y_test)\n    m, s = np.mean(accs), np.std(accs)\n    light.set(\"accuracy_test\", m)\n    light.set(\"accuracy_test_std\", s)\n    print(\"Test accuracy : {}+-{}\".format(m, s))\n\n    light.endings()  # save the duration\n\n    if fast_test is False:\n        light.store_experiment()  # update the DB\n    light.close()\n", "nb_examples_valid": 7500, "accuracy_valid_last": 0.752020474137931, "loss_train": [26.423091888427734, 4.60716438293457, 1.9185761213302612, 1.720979928970337, 1.612836241722107, 1.534777045249939, 1.4606224298477173, 1.3947882652282715, 1.333113193511963, 1.2781144380569458, 1.2472211122512817, 1.207159399986267, 1.176561951637268, 1.143363356590271, 1.1249150037765503, 1.102953553199768, 1.081918716430664, 1.0662195682525635, 1.045817255973816, 1.033930778503418, 1.0139317512512207, 1.0005764961242676, 0.9852392077445984, 0.9878913760185242, 0.9759558439254761, 0.9613271951675415, 0.9544089436531067, 0.9454742670059204, 0.9312276840209961, 0.9223887324333191, 0.9322318434715271, 0.9066323637962341, 0.8993436694145203, 0.8993854522705078, 0.8847644329071045, 0.8862074613571167, 0.88095623254776, 0.8711714744567871, 0.8655738234519958, 0.8633929491043091, 0.8516359329223633, 0.8435053825378418, 0.8454652428627014, 0.8322272896766663, 0.8341311812400818, 0.8358967304229736, 0.825801432132721, 0.8176743984222412, 0.8149611353874207, 0.8081351518630981, 0.8042452335357666, 0.8077742457389832, 0.7983657717704773, 0.79132080078125, 0.785765528678894, 0.7815766930580139, 0.7781606912612915, 0.7730685472488403, 0.7723209261894226, 0.7748284935951233, 0.7713075280189514, 0.7664112448692322, 0.7544400095939636, 0.7502254247665405, 0.7486628890037537, 0.7455263137817383, 0.7397448420524597, 0.7357958555221558, 0.736994743347168, 0.7320744395256042, 0.7303330898284912, 0.7293115854263306, 0.7257035374641418, 0.7207159399986267, 0.7153130769729614, 0.7177906632423401, 0.727613627910614, 0.7157384753227234, 0.7146002650260925, 0.7050689458847046, 0.6987696290016174, 0.706687867641449, 0.6975404024124146, 0.6919891834259033, 0.6957398653030396, 0.6862637996673584, 0.6881318688392639, 0.6884335875511169, 0.6821349263191223, 0.6865145564079285, 0.6805498003959656, 0.6767389178276062, 0.6828550696372986, 0.676311194896698, 0.6715866327285767, 0.6652669906616211, 0.6699237823486328, 0.6643667817115784, 0.6631462574005127, 0.6650159955024719, 0.658670961856842, 0.657515287399292, 0.6579117774963379, 0.6483876705169678, 0.6502109169960022, 0.6533483266830444, 0.6445067524909973, 0.6438320875167847, 0.6535372138023376, 0.6512483954429626, 0.6423910856246948, 0.6466014981269836, 0.6452193260192871, 0.6432485580444336, 0.6388965845108032, 0.6376875042915344, 0.6404023170471191, 0.6337808966636658, 0.6342177987098694, 0.6310433745384216, 0.6337752342224121, 0.6290534734725952, 0.6301361918449402, 0.623573899269104, 0.6319180727005005, 0.6214077472686768, 0.6224697232246399, 0.6182078123092651, 0.6195441484451294, 0.6172248721122742, 0.6263390779495239, 0.6198186278343201, 0.6186568140983582, 0.6144060492515564, 0.6321296095848083, 0.6175692677497864, 0.6146084666252136, 0.6210725903511047, 0.6102496385574341, 0.6116766929626465, 0.6093733906745911, 0.6204404234886169, 0.6166257858276367, 0.6050559878349304, 0.6098659634590149, 0.6043871641159058, 0.6053605079650879, 0.6067466139793396, 0.6090843677520752, 0.6014694571495056, 0.6012933254241943, 0.6069782376289368, 0.5995720028877258, 0.5967687964439392, 0.6013844609260559, 0.6036049127578735, 0.5952880382537842, 0.5948647856712341, 0.5911623239517212, 0.5904242992401123, 0.5932326912879944, 0.5963672995567322, 0.5896676778793335, 0.5942136645317078, 0.5896599292755127, 0.5920419692993164, 0.5907800793647766, 0.5835082530975342, 0.6282684206962585, 0.5868301391601562, 0.5828938484191895, 0.5859013199806213, 0.582027018070221, 0.5846150517463684, 0.5880890488624573, 0.5806267857551575, 0.5832879543304443, 0.5813696980476379, 0.5836256146430969, 0.5792853832244873, 0.5782568454742432, 0.5820953249931335, 0.57779461145401, 0.5783108472824097, 0.5831561088562012, 0.5981741547584534, 0.5817281007766724, 0.5778684616088867, 0.5682095289230347, 3.4725329875946045, 0.5747841000556946, 0.5762777924537659, 0.5713410973548889, 0.5737602710723877, 0.5724819302558899, 0.5704182386398315, 0.5735223293304443, 0.5750246047973633, 0.589492678642273, 0.5709338784217834, 0.5708169937133789, 1.4573980569839478, 0.5706060528755188, 0.5718612670898438, 0.5652660131454468, 0.5631791949272156, 0.570616602897644, 0.567296028137207, 0.564136266708374, 0.5917279124259949, 0.5724136233329773, 0.5657800436019897, 0.5652754306793213, 0.5563170909881592, 0.5745241641998291, 0.5566406846046448, 0.5593372583389282, 0.5720407962799072, 0.5565436482429504, 0.5554968118667603, 0.5555756092071533, 0.5920077562332153, 0.5584793090820312, 0.5654528737068176, 0.5547927021980286, 0.5575259923934937, 0.5561153888702393, 0.5527657866477966, 0.5571039915084839, 0.5580783486366272, 0.552641749382019, 0.5527855753898621, 0.5758360624313354, 0.5633949041366577, 0.5505786538124084, 0.552911639213562, 0.5478736758232117, 0.553622305393219, 0.6129385828971863, 0.560020387172699, 0.5531818866729736, 0.5537189841270447, 0.5486835837364197, 0.543461263179779, 0.5532712936401367, 0.5521659851074219, 0.5486836433410645, 0.5429003834724426, 0.5697433352470398, 0.5507394671440125, 0.5403885841369629, 0.5437036156654358, 0.5405093431472778], "accuracy_train_first": 0.10069182981927711, "model": "residualv2", "loss_std": [190.56019592285156, 24.326488494873047, 0.15758177638053894, 0.10655449330806732, 0.11326977610588074, 0.1859363317489624, 0.23182468116283417, 0.13324174284934998, 0.1462707221508026, 0.1186680719256401, 0.12279637157917023, 0.11917877942323685, 0.12749266624450684, 0.11394394934177399, 0.13181011378765106, 0.12201127409934998, 0.11792349815368652, 0.13565635681152344, 0.1150234118103981, 0.11364461481571198, 0.11333417147397995, 0.1094505786895752, 0.11846157908439636, 0.1427307277917862, 0.13501375913619995, 0.12161996960639954, 0.11133097112178802, 0.12397590279579163, 0.10992884635925293, 0.10866589099168777, 0.14853337407112122, 0.11072196066379547, 0.11172300577163696, 0.12138514965772629, 0.1091979518532753, 0.11878404021263123, 0.12129686772823334, 0.1257437914609909, 0.10824399441480637, 0.11683328449726105, 0.11438024789094925, 0.10987935960292816, 0.11962186545133591, 0.10423257946968079, 0.11678441613912582, 0.1325071156024933, 0.125416100025177, 0.1046915277838707, 0.09934509545564651, 0.13133850693702698, 0.12098005414009094, 0.11947435885667801, 0.12900981307029724, 0.11299920082092285, 0.10599645227193832, 0.09793131053447723, 0.1260828971862793, 0.10029623657464981, 0.12104655057191849, 0.14072036743164062, 0.13791750371456146, 0.13275861740112305, 0.10509134829044342, 0.1072738990187645, 0.10385513305664062, 0.11254403740167618, 0.10466483980417252, 0.10227487236261368, 0.10868997871875763, 0.10812030732631683, 0.1082286387681961, 0.1153777465224266, 0.10667133331298828, 0.1100836992263794, 0.10977132618427277, 0.12735211849212646, 0.14458927512168884, 0.11915726214647293, 0.1264147013425827, 0.10838647931814194, 0.09533843398094177, 0.11040031909942627, 0.10023675858974457, 0.10110688209533691, 0.1148982122540474, 0.11202000081539154, 0.11020737886428833, 0.10524678230285645, 0.10955686122179031, 0.12392207235097885, 0.12572072446346283, 0.10083328932523727, 0.11527349054813385, 0.10312548279762268, 0.09858391433954239, 0.10598302632570267, 0.11499577015638351, 0.10667945444583893, 0.09707307070493698, 0.10770798474550247, 0.0957770124077797, 0.10279996693134308, 0.10754812508821487, 0.09324353188276291, 0.10014445334672928, 0.11137088388204575, 0.10234548151493073, 0.09371586889028549, 0.11482873558998108, 0.12236440181732178, 0.09794765710830688, 0.09776218235492706, 0.10825175046920776, 0.1066126674413681, 0.09778589010238647, 0.09635331481695175, 0.1135396882891655, 0.10445771366357803, 0.1060425266623497, 0.09229563176631927, 0.09955250471830368, 0.09452777355909348, 0.10603569447994232, 0.08853849768638611, 0.11389517039060593, 0.09862830489873886, 0.09590821713209152, 0.09638792276382446, 0.09517268091440201, 0.09249231219291687, 0.10685718059539795, 0.09752748906612396, 0.10305292159318924, 0.09748908877372742, 0.1612922102212906, 0.09951543062925339, 0.10201235860586166, 0.12426937371492386, 0.09566137194633484, 0.0975039005279541, 0.09359230846166611, 0.15401838719844818, 0.11651241034269333, 0.09856263548135757, 0.09799090027809143, 0.09719055145978928, 0.09474873542785645, 0.11380749940872192, 0.10027316957712173, 0.09838918596506119, 0.09549733251333237, 0.13967671990394592, 0.0957564190030098, 0.09333580732345581, 0.09972255676984787, 0.11139474809169769, 0.0884120985865593, 0.09452620893716812, 0.09481770545244217, 0.10279003530740738, 0.10323368012905121, 0.10443935543298721, 0.11208003014326096, 0.11653553694486618, 0.09269040822982788, 0.10670480877161026, 0.1059180498123169, 0.09484740346670151, 0.357573926448822, 0.09231052547693253, 0.09559798985719681, 0.09181632846593857, 0.0966881513595581, 0.1025681346654892, 0.10970383137464523, 0.10891900956630707, 0.0968758836388588, 0.09079249948263168, 0.10898756980895996, 0.09934239089488983, 0.09844148904085159, 0.10991398245096207, 0.09205785393714905, 0.09647320955991745, 0.1225888803601265, 0.19500048458576202, 0.10477956384420395, 0.10052748769521713, 0.10005976259708405, 42.926025390625, 0.0972033366560936, 0.10253354161977768, 0.10169433802366257, 0.09848783910274506, 0.10034207254648209, 0.0951031967997551, 0.10261788219213486, 0.10470914095640182, 0.1667279452085495, 0.09569530189037323, 0.09612160921096802, 8.228939056396484, 0.09292196482419968, 0.10922140628099442, 0.08838027715682983, 0.09074806421995163, 0.11298024654388428, 0.12214440107345581, 0.09281247854232788, 0.27073514461517334, 0.11901725083589554, 0.0948091447353363, 0.09338417649269104, 0.0906098335981369, 0.15601442754268646, 0.08676338195800781, 0.09997264295816422, 0.15794110298156738, 0.09357751905918121, 0.09144341945648193, 0.09612218290567398, 0.2765621840953827, 0.09877347946166992, 0.1511145681142807, 0.08915345370769501, 0.08988140523433685, 0.09284507483243942, 0.09629552066326141, 0.11366089433431625, 0.10882613807916641, 0.1045994833111763, 0.10214772820472717, 0.43130144476890564, 0.15774807333946228, 0.0954512357711792, 0.12511253356933594, 0.09346312284469604, 0.1156221553683281, 0.6188687682151794, 0.11487379670143127, 0.09517192095518112, 0.11863131076097488, 0.09409072995185852, 0.09019562602043152, 0.15049320459365845, 0.10956833511590958, 0.10893922299146652, 0.08965523540973663, 0.1865096390247345, 0.10710093379020691, 0.09377550333738327, 0.09489879757165909, 0.08755244314670563]}, "state": "available", "life": [{"dt": "Sun May 15 22:05:00 2016", "state": "available"}], "summary": "d7f208ad12db79cb37c92bd2c24a5bf5"}