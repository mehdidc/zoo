{"content": {"hp_model": {"f0": 16, "f1": 32, "f2": 32, "f3": 16, "nonlin": "rectify", "nbg1": 5, "nbg3": 5, "nbg2": 5, "fs0": 3, "fs1": 3, "fs2": 3, "fs3": 3, "pg2": 2, "pg3": 2, "pg1": 2}, "loss_train": [1.6315081119537354, 1.2562187910079956, 1.0724546909332275, 0.9437057971954346, 0.8541103005409241, 0.786897599697113, 0.732825517654419, 0.6946895122528076, 0.6586900949478149, 0.628823459148407, 0.6015758514404297, 0.5778452157974243, 0.555770754814148, 0.5390180945396423, 0.5223715305328369, 0.5043940544128418, 0.48754483461380005, 0.4749865233898163, 0.4597603380680084, 0.447909414768219, 0.4369109570980072, 0.42658910155296326, 0.413533091545105, 0.40443089604377747, 0.3966144919395447, 0.3868050277233124, 0.3792212903499603, 0.3695523738861084, 0.3627447187900543, 0.3547869026660919, 0.3463877737522125, 0.3385204076766968, 0.3330112099647522, 0.32754236459732056, 0.32249003648757935, 0.3171396255493164, 0.3085598647594452, 0.30348268151283264, 0.2970820963382721, 0.2977179288864136, 0.28814148902893066, 0.28628775477409363, 0.2793461084365845, 0.2783474326133728, 0.2719210982322693, 0.2693917453289032, 0.2641243636608124, 0.2575739622116089, 0.25717782974243164, 0.253558874130249, 0.24808259308338165, 0.24926656484603882, 0.24037040770053864, 0.23849594593048096, 0.23539109528064728, 0.2347463071346283, 0.2326548993587494, 0.2295873761177063, 0.22667285799980164, 0.22365927696228027, 0.21856586635112762, 0.21684415638446808, 0.21777097880840302, 0.21295224130153656, 0.2107372134923935, 0.20870567858219147, 0.20588353276252747, 0.2056419402360916, 0.20188821852207184, 0.20097588002681732, 0.19654661417007446, 0.19658023118972778, 0.1939961165189743, 0.19045795500278473, 0.19212199747562408, 0.18783371150493622, 0.18618656694889069, 0.18563225865364075, 0.1815757006406784, 0.1827145665884018, 0.1792774647474289, 0.17899958789348602, 0.17635473608970642, 0.17544956505298615, 0.17410144209861755, 0.17532728612422943, 0.17085815966129303, 0.1683623194694519, 0.13197077810764313, 0.11447245627641678, 0.10817679762840271, 0.10512838512659073, 0.10189565271139145, 0.10024438798427582, 0.09745193272829056, 0.09674812853336334, 0.09444727748632431, 0.09237726032733917, 0.09273865073919296, 0.0915437638759613, 0.09063071757555008, 0.09012328833341599, 0.08699600398540497, 0.08304888755083084, 0.08421219885349274, 0.08437478542327881, 0.08347813785076141, 0.0850205048918724, 0.08466934412717819, 0.08438201993703842, 0.08382830023765564, 0.08390828222036362, 0.0851622149348259, 0.08428677916526794, 0.08457931131124496, 0.08335500210523605, 0.08451466262340546, 0.08440496772527695, 0.08342737704515457, 0.0831211730837822, 0.08502954989671707, 0.08391883969306946, 0.08482512831687927, 0.08408185094594955, 0.08326470106840134, 0.08524385094642639, 0.08453914523124695, 0.08490172773599625, 0.08332916349172592, 0.08386580646038055, 0.0845702514052391, 0.0850985124707222, 0.08380649983882904, 0.08456743508577347, 0.08483552187681198, 0.08471913635730743, 0.08405158668756485, 0.08434515446424484, 0.08521106094121933, 0.08400090038776398, 0.08341488987207413, 0.08428031951189041, 0.083761066198349, 0.08501866459846497, 0.08313976973295212, 0.08400523662567139, 0.08377832919359207, 0.08382070809602737, 0.0825524628162384, 0.0841384008526802, 0.08512791991233826, 0.08406927436590195, 0.08388698101043701, 0.08344297111034393, 0.08311531692743301, 0.08380856364965439, 0.08439469337463379, 0.08391299098730087, 0.08403009921312332, 0.08399038761854172, 0.08303970843553543, 0.08451954275369644, 0.08179759234189987, 0.0845869854092598, 0.0845082551240921, 0.08398428559303284, 0.08464021235704422, 0.08434619009494781, 0.08412103354930878, 0.08416483551263809, 0.08495835214853287, 0.0843849778175354, 0.08371458202600479, 0.08479731529951096, 0.08326122164726257, 0.08524230867624283, 0.08342071622610092, 0.08313179016113281, 0.08338655531406403, 0.08386033028364182, 0.08481668680906296, 0.08465813100337982, 0.08450555801391602, 0.08255298435688019, 0.08231212943792343, 0.08359991014003754, 0.08306434005498886, 0.08445865660905838, 0.08369041979312897, 0.08565741032361984, 0.08565597236156464, 0.08471575379371643, 0.08323188871145248, 0.08389760553836823, 0.08371707051992416, 0.08436871320009232, 0.08302945643663406, 0.08519285917282104, 0.08405053615570068, 0.08500894159078598, 0.0843740776181221, 0.0840272605419159, 0.08340117335319519, 0.08430163562297821, 0.08350951969623566, 0.08478658646345139, 0.08407595753669739, 0.08365800976753235, 0.08415218442678452, 0.08347389847040176, 0.08486893028020859, 0.08474282175302505, 0.08405490964651108, 0.08457575738430023, 0.08363521099090576], "moving_avg_accuracy_train": [0.05566222401024362, 0.11479384401531928, 0.1734333233838593, 0.2302683483440614, 0.28440667766155636, 0.3353305845770176, 0.38244765575086803, 0.4264060389680016, 0.4670446591275876, 0.505191073671178, 0.5399643366436689, 0.5717812508475191, 0.6012439382166247, 0.6285996274226016, 0.6533453057436951, 0.6762791196922123, 0.696875194174403, 0.7164043195059475, 0.7338620218126893, 0.7497879757256896, 0.7650395156854203, 0.7785475179051765, 0.7905116244053104, 0.8016533808232142, 0.8125645902445842, 0.8222964312155114, 0.8309782500321755, 0.8390894699659734, 0.846603445548049, 0.8539333238326221, 0.860195464957804, 0.8664172213240113, 0.8723282998964368, 0.8777529023080481, 0.8820096875951928, 0.8863011738179087, 0.890500657995734, 0.8936500423795769, 0.8972377644416838, 0.8995298595714356, 0.9027295987607945, 0.90563962701456, 0.9085911847715297, 0.9107500770052017, 0.9131555683356893, 0.9157390012700236, 0.9183360972728201, 0.9201062915610881, 0.9218413725955478, 0.9234469791586674, 0.9255918948571417, 0.9271246824905213, 0.9287646080272296, 0.9303079342769245, 0.9320503505206976, 0.9336859905043883, 0.9354928518694625, 0.9365377038468297, 0.9377454987883741, 0.9386255399428978, 0.9399733596450827, 0.9409491601008402, 0.9419018213217454, 0.9429103150443604, 0.9437482770280657, 0.9444698546812484, 0.9456726239369608, 0.9466063067432924, 0.947367566209467, 0.9482459033731272, 0.9486757564132139, 0.9491394982552812, 0.9498986627881417, 0.9505493227355643, 0.9511301942929878, 0.9514483295506123, 0.9522042952931793, 0.9525825393115266, 0.9530251933780207, 0.9535002758997608, 0.9538581317538601, 0.9547871379594727, 0.9551908740124087, 0.9558541085588422, 0.9561045364291946, 0.9569065584172737, 0.9572655828946216, 0.9574306669028245, 0.9600601041923317, 0.962607959360031, 0.9650358515930939, 0.9672605181814313, 0.9693278222776016, 0.9712000217082025, 0.9729849825945528, 0.97453331867203, 0.9758919799584354, 0.9772263462102385, 0.9783924346535373, 0.9794024227715631, 0.9803393138635006, 0.9812894005938448, 0.9822235337106785, 0.983082854706305, 0.9838469430071307, 0.9845485733707311, 0.9851846909955905, 0.9857781231972496, 0.986291285839457, 0.9867321698293393, 0.987129001469052, 0.9875024259864602, 0.9878547840937943, 0.9881556303487282, 0.9884310422757878, 0.988676587861332, 0.9888999040371312, 0.989098563446541, 0.9892820072126288, 0.9894331557092508, 0.989611042034782, 0.989761839132522, 0.9898743050323928, 0.9899848249375146, 0.9900680168104575, 0.9901545152401537, 0.9902253883804517, 0.9902775484626724, 0.9903454188759566, 0.9904018519502934, 0.9904340405267203, 0.9904792862871713, 0.9905386086620532, 0.9905803730553995, 0.9906063352653633, 0.9906413269983786, 0.9906635189628541, 0.990678841433263, 0.9907158831447264, 0.9907352697921862, 0.9907527177749, 0.9907660597617142, 0.9907943435915136, 0.9908058841942947, 0.9908232101344076, 0.9908155880412326, 0.9908017527109465, 0.9908195278482129, 0.990823899727705, 0.9908324847168669, 0.9908425363559221, 0.9908446073846433, 0.9908604222033495, 0.9908235022663756, 0.9908437527457181, 0.9908457021354597, 0.9908683829255128, 0.9908794950413226, 0.9908941462431704, 0.9908724550926906, 0.9908738593965445, 0.9908727981212035, 0.9908927693126823, 0.9908991176409656, 0.9909001808388015, 0.9908918371216157, 0.9908773523297199, 0.9908875675051089, 0.9908990502629498, 0.99088616930573, 0.9908815518906608, 0.9909076231516224, 0.99092640094005, 0.9909131100639299, 0.9909313752099456, 0.9909082863115977, 0.9908921566007037, 0.9909101919442325, 0.990898521967694, 0.9908810435423809, 0.9908746135548372, 0.9908595259708097, 0.9908575728892326, 0.9908604293646135, 0.9908514104972275, 0.990838643218961, 0.9908062263292354, 0.9908049529141967, 0.9908131074359, 0.990820446505433, 0.990810775626346, 0.9907950963887391, 0.9908158623070357, 0.9908368767823122, 0.9908581149588707, 0.9908679287225352, 0.9908814114074521, 0.9908772697822108, 0.9908595914266364, 0.9908553066506671, 0.9908328491618186, 0.9908428643563787, 0.9908588534779114, 0.9908546424968145, 0.9908438771673989, 0.9908527535125822, 0.9908584531232564, 0.9908565712776158, 0.9908549136653582, 0.9908627224095643, 0.9908511490888736, 0.990840733100252, 0.9908476347521592, 0.9908468707924472, 0.9908554838239444], "dataset": "Cifar10", "nb_examples_train": 42500, "moving_avg_accuracy_valid": [0.054890019060617454, 0.11226561029273341, 0.16978684317347512, 0.22508187285273903, 0.2778076781785344, 0.3274939072545063, 0.372965260834402, 0.4154744811741546, 0.4550440793669801, 0.4916649008636405, 0.5249795560615385, 0.555392050850716, 0.5836372019403432, 0.6091910857560979, 0.631842636771979, 0.65313853005073, 0.6718664103852654, 0.6894824566584858, 0.7047071331500168, 0.7185955359871236, 0.7319913593650679, 0.7437016854955791, 0.7542165649505392, 0.7636576014148226, 0.7726225194548163, 0.7804203319859913, 0.7877180954741391, 0.7944458035283818, 0.8004783857320195, 0.8065546823715434, 0.8116246353505036, 0.8163889355108599, 0.8207601958566112, 0.8248672876226066, 0.8282106958144123, 0.8313143309110584, 0.8346620664475881, 0.8367645015573474, 0.8391145303643385, 0.8406903878983112, 0.8430669851683446, 0.8449088359267359, 0.8465603245573304, 0.8477832571806636, 0.8491473036858653, 0.8504858383304564, 0.8521218836389771, 0.853327828746465, 0.8538384193657943, 0.8546488663034618, 0.8558065441497723, 0.8570530322893885, 0.8581178074207658, 0.8590374249279362, 0.8598162525593895, 0.8610350402834959, 0.8624116814452818, 0.8627930777774102, 0.8634313622436451, 0.8639590491555758, 0.8645814812599729, 0.8650409253779515, 0.8654320700389515, 0.8656955624891226, 0.8660456575015055, 0.8666547412713098, 0.8673107209280644, 0.868259224560032, 0.8685462068480048, 0.8694402860408399, 0.8695348904845721, 0.869943594348389, 0.8700886127373453, 0.8702934009835656, 0.8708225958061427, 0.8713599063027122, 0.871818042178465, 0.8718773900690523, 0.8722105353806712, 0.8724065328591704, 0.872748828556687, 0.8730538061584732, 0.8737209700174, 0.8743621566188227, 0.8737214628884163, 0.8741366965882795, 0.8742418522306564, 0.8745572483799553, 0.8762591795566436, 0.8780971229055726, 0.879728916874428, 0.8811344372728285, 0.8824492632650487, 0.8836305476407276, 0.8847476792471368, 0.8858863455279954, 0.8867046551581778, 0.8874777549190919, 0.888172515195255, 0.8889941414524614, 0.8898689119363568, 0.890542224055974, 0.8912845413246989, 0.891868207156461, 0.8925155767175468, 0.8931470374475241, 0.8936299028857536, 0.8940644817801602, 0.8944067746601261, 0.8948369085645954, 0.8950897517348677, 0.8953905527756129, 0.8957101018372835, 0.895948867867787, 0.8962369994827402, 0.8963620405924481, 0.8965356127474352, 0.8967040347181736, 0.8968678215230882, 0.8969897860763516, 0.8971005836829484, 0.8972491296538855, 0.8972851647777289, 0.8974274596704379, 0.8975422885339663, 0.8975856288635516, 0.8976002210976783, 0.8975889400458924, 0.897627615224285, 0.8975891806973385, 0.897639009333177, 0.8977825408640913, 0.897801855960664, 0.8977826184538296, 0.8977897187601785, 0.8978083160671426, 0.8978616747371603, 0.8978852834776762, 0.8978332891566404, 0.8977987012989583, 0.8978408144145444, 0.8978543021560719, 0.8978664411234466, 0.8978651591628339, 0.8978762124295324, 0.8978617463070611, 0.897860933828087, 0.8978602025970103, 0.8979083726140411, 0.8979028975043689, 0.8979223839681639, 0.8979022711831698, 0.8979574118641751, 0.8979958609544895, 0.8980670862295225, 0.8980823608520521, 0.8980472798873288, 0.8981011562378278, 0.898125230890777, 0.8980858629221812, 0.8980992598754449, 0.8981347016872228, 0.8981432147639825, 0.8981264624705662, 0.8982334557189914, 0.8982687144863242, 0.898262796774514, 0.8983317425300446, 0.8983693796475221, 0.8983656024508421, 0.8983388184199897, 0.8983147127922227, 0.8982675741560727, 0.8982872140484474, 0.8983048899515845, 0.898320798264408, 0.8982252524646991, 0.898236917494961, 0.8982474160221968, 0.8982934857904591, 0.8982494993631451, 0.8982465326723126, 0.8982316556193133, 0.898315922521614, 0.8982941064836845, 0.8982012298620479, 0.898154261996325, 0.8981597895335148, 0.8981291727318953, 0.8981260316729377, 0.8981710033362161, 0.8981392651543265, 0.8981229078218758, 0.8981570143476701, 0.898114468033385, 0.8981005904130284, 0.8980636864922075, 0.8981037151509687, 0.8981153268813538, 0.8981013633762003, 0.8980521751278121, 0.8980445267980128, 0.8980366137925337, 0.8980539061501027, 0.8980460847180743, 0.8980268383979989, 0.898070551866181, 0.8981098939875448, 0.8981208878342724, 0.8980819541713271, 0.8981201560621763, 0.8982033658889406, 0.8981561844205285, 0.8982113773489575, 0.8981389806720437], "moving_var_accuracy_train": [0.027884548635898884, 0.056565030132130975, 0.08185582398443879, 0.10274222214603608, 0.11884662824303824, 0.13030116407854542, 0.1372512132347061, 0.14091714700681482, 0.14168890934240927, 0.14061635889095137, 0.13743734136164232, 0.13280445149057454, 0.127336455864604, 0.12133781386554959, 0.11471516983913396, 0.10797729125524737, 0.10099734668640617, 0.09433009264370214, 0.08764002570780932, 0.08115874720937945, 0.0751363577287309, 0.06926491707157827, 0.06362668396353935, 0.05838126419186852, 0.05361462819201461, 0.049105543930963926, 0.04487335533955597, 0.040978146804930345, 0.03738847058586956, 0.03413316756828251, 0.031072780514699506, 0.028313894733753536, 0.02579697290938266, 0.023482112420360936, 0.021296983167152502, 0.019333036536435092, 0.017558453889029824, 0.01589187609810159, 0.014418534234645789, 0.013023964111935701, 0.0118137126786614, 0.010708555790734682, 0.009716105450395762, 0.008786442246445671, 0.007959875518670563, 0.007223955098339338, 0.006562263757335077, 0.00593423967196552, 0.005367910260534242, 0.004854320986400614, 0.004410294857942608, 0.00399041031350972, 0.00361557348405228, 0.003275452838864028, 0.002975231684276702, 0.0027017863792552607, 0.0024609904732631176, 0.0022247168668282783, 0.002015374097732833, 0.0018208069398624469, 0.0016550758074225834, 0.0014981379054454342, 0.0013564921855172415, 0.0012299965032625032, 0.0011133164755114716, 0.0010066708967464786, 0.0009190236920142127, 0.0008349671950583448, 0.000756686119326075, 0.0006879607929510667, 0.0006208276763806059, 0.0005606804172073013, 0.0005097993525781522, 0.00046262964262495503, 0.0004194033842584735, 0.0003783739362119201, 0.00034567990042614266, 0.00031239952722026776, 0.0002829230581014946, 0.00025666208291351243, 0.0002321484219329789, 0.00021670105251028006, 0.00019649797246321582, 0.00018080709578914054, 0.00016329081327446962, 0.0001527508853712834, 0.0001386358840121697, 0.00012501757017883215, 0.00017474127729600486, 0.000215691243166552, 0.0002471740651082047, 0.00026699893146076465, 0.00027876275434906975, 0.0002824326552856425, 0.0002828641580492821, 0.00027615384372371054, 0.0002651521037719292, 0.00025466169304029816, 0.0002414333840546232, 0.00022647072963613964, 0.0002117235409358914, 0.00019867516999888906, 0.00018666109511868883, 0.00017464087876854065, 0.0001624312692748158, 0.00015061870885146764, 0.0001391986486602311, 0.00012844823979590189, 0.00011797343889252816, 0.00010792550323608599, 9.855023106497179e-05, 8.995022079028858e-05, 8.2072604833496e-05, 7.46799205721166e-05, 6.789459408100525e-05, 6.16477683841267e-05, 5.593182257507648e-05, 5.0693830366092317e-05, 4.592731186733163e-05, 4.1540193492878125e-05, 3.7670966046889155e-05, 3.410852732438139e-05, 3.081151179964684e-05, 2.7840292464535223e-05, 2.5118551207595412e-05, 2.2674033891895085e-05, 2.0451837520846926e-05, 1.8431139836357578e-05, 1.6629483389716214e-05, 1.4995197277656511e-05, 1.3505002489962382e-05, 1.217292685051516e-05, 1.0987306462918399e-05, 9.904274197590725e-06, 8.919913104947558e-06, 8.03894158686744e-06, 7.239479777766254e-06, 6.517644802884525e-06, 5.878229118089239e-06, 5.293788785177897e-06, 4.767149795567148e-06, 4.2920368935197805e-06, 3.8700329794209064e-06, 3.484228351091774e-06, 3.1385072097897272e-06, 2.825179355550067e-06, 2.5443841672721762e-06, 2.2927893500885035e-06, 2.0636824350522956e-06, 1.8579775098972642e-06, 1.6730890779368184e-06, 1.5058187725828128e-06, 1.3574878717409271e-06, 1.2340068202822626e-06, 1.1142968754764491e-06, 1.002901389012086e-06, 9.072410142477913e-07, 8.176282248829343e-07, 7.377973218349092e-07, 6.68252143733667e-07, 6.014446779841262e-07, 5.413103469338592e-07, 4.907689486422054e-07, 4.42054765225914e-07, 3.9785946221006687e-07, 3.587000745373493e-07, 3.24718349849992e-07, 2.9318566313905246e-07, 2.6505378037384366e-07, 2.400416738665142e-07, 2.162293911771472e-07, 2.0072384789258555e-07, 1.838249111474292e-07, 1.6703224652506368e-07, 1.5333156190331432e-07, 1.4279628075522594e-07, 1.3085816084141645e-07, 1.2069980730307326e-07, 1.0985552174443097e-07, 1.0161942773283354e-07, 9.182958761786446e-08, 8.469534558214962e-08, 7.626014177275544e-08, 6.870756265989613e-08, 6.256886611425045e-08, 5.77790100518313e-08, 6.145880170195472e-08, 5.5327515804506664e-08, 5.039323024193635e-08, 4.583866469222495e-08, 4.2096531343848766e-08, 4.0099424636870226e-08, 3.997049243750857e-08, 3.994791673407727e-08, 4.0012666352388737e-08, 3.6878189332501716e-08, 3.482641553240015e-08, 3.149815151591658e-08, 3.11610546666408e-08, 2.8210182945939725e-08, 2.9928213899789865e-08, 2.7838129608504415e-08, 2.7355184714134862e-08, 2.4779257498898646e-08, 2.3344362605860443e-08, 2.1719031879598758e-08, 1.9839498748179944e-08, 1.7887420960494494e-08, 1.6123407970016962e-08, 1.505985554771077e-08, 1.4759345759216928e-08, 1.4259846553979136e-08, 1.326255709002173e-08, 1.1941554090994073e-08, 1.141505748605032e-08], "duration": 189174.009384, "accuracy_train": [0.5566222401024363, 0.6469784240610004, 0.7011886377007198, 0.7417835729858804, 0.7716516415190107, 0.7936457468161684, 0.8065012963155224, 0.8220314879222037, 0.8327922405638611, 0.848508804563492, 0.8529237033960871, 0.8581334786821706, 0.8664081245385751, 0.8748008302763934, 0.8760564106335363, 0.8826834452288667, 0.8822398645141197, 0.8921664474898486, 0.8909813425733666, 0.8931215609426911, 0.9023033753229974, 0.9001195378829827, 0.8981885829065154, 0.9019291885843485, 0.910765475036914, 0.9098829999538575, 0.9091146193821521, 0.912090449370155, 0.9142292257867294, 0.9199022283937799, 0.9165547350844407, 0.9224130286198781, 0.9255280070482651, 0.9265743240125508, 0.9203207551794942, 0.9249245498223514, 0.9282960155961609, 0.9219945018341639, 0.929527263000646, 0.9201587157392026, 0.9315272514650241, 0.9318298812984496, 0.9351552045842562, 0.9301801071082503, 0.9348049903100776, 0.938989897679033, 0.9417099612979882, 0.9360380401555003, 0.9374571019056847, 0.9378974382267442, 0.944896136143411, 0.9409197711909376, 0.9435239378576044, 0.9441978705241787, 0.9477320967146549, 0.9484067503576044, 0.9517546041551311, 0.9459413716431341, 0.9486156532622739, 0.9465459103336102, 0.9521037369647471, 0.9497313642026578, 0.950475772309893, 0.9519867585478959, 0.9512899348814139, 0.950964053559893, 0.9564975472383721, 0.9550094520002769, 0.9542189014050388, 0.9561509378460686, 0.9525444337739941, 0.9533131748338871, 0.9567311435838871, 0.9564052622623662, 0.9563580383098007, 0.9543115468692323, 0.9590079869762828, 0.9559867354766519, 0.9570090799764673, 0.9577760185954227, 0.957078834440753, 0.9631481938099853, 0.9588244984888336, 0.9618232194767442, 0.9583583872623662, 0.9641247563099853, 0.960496803190753, 0.9589164229766519, 0.9837250397978959, 0.9855386558693245, 0.9868868816906607, 0.9872825174764673, 0.9879335591431341, 0.9880498165836102, 0.9890496305717055, 0.9884683433693245, 0.9881199315360835, 0.9892356424764673, 0.9888872306432264, 0.9884923158337948, 0.9887713336909376, 0.9898401811669435, 0.9906307317621816, 0.9908167436669435, 0.9907237377145626, 0.9908632466431341, 0.9909097496193245, 0.9911190130121816, 0.9909097496193245, 0.9907001257382798, 0.9907004862264673, 0.9908632466431341, 0.9910260070598007, 0.9908632466431341, 0.9909097496193245, 0.9908864981312293, 0.9909097496193245, 0.9908864981312293, 0.9909330011074198, 0.9907934921788483, 0.9912120189645626, 0.9911190130121816, 0.9908864981312293, 0.9909795040836102, 0.9908167436669435, 0.9909330011074198, 0.9908632466431341, 0.9907469892026578, 0.990956252595515, 0.9909097496193245, 0.9907237377145626, 0.9908864981312293, 0.9910725100359912, 0.990956252595515, 0.9908399951550388, 0.990956252595515, 0.9908632466431341, 0.9908167436669435, 0.9910492585478959, 0.9909097496193245, 0.9909097496193245, 0.9908861376430418, 0.9910488980597084, 0.9909097496193245, 0.9909791435954227, 0.9907469892026578, 0.9906772347383721, 0.9909795040836102, 0.9908632466431341, 0.9909097496193245, 0.9909330011074198, 0.9908632466431341, 0.9910027555717055, 0.9904912228336102, 0.9910260070598007, 0.9908632466431341, 0.9910725100359912, 0.9909795040836102, 0.9910260070598007, 0.9906772347383721, 0.9908864981312293, 0.9908632466431341, 0.9910725100359912, 0.990956252595515, 0.9909097496193245, 0.9908167436669435, 0.9907469892026578, 0.9909795040836102, 0.991002395083518, 0.990770240690753, 0.9908399951550388, 0.9911422645002769, 0.9910954010358989, 0.9907934921788483, 0.9910957615240864, 0.9907004862264673, 0.9907469892026578, 0.9910725100359912, 0.9907934921788483, 0.9907237377145626, 0.9908167436669435, 0.9907237377145626, 0.9908399951550388, 0.9908861376430418, 0.990770240690753, 0.9907237377145626, 0.9905144743217055, 0.9907934921788483, 0.9908864981312293, 0.9908864981312293, 0.9907237377145626, 0.9906539832502769, 0.9910027555717055, 0.9910260070598007, 0.9910492585478959, 0.990956252595515, 0.9910027555717055, 0.9908399951550388, 0.9907004862264673, 0.9908167436669435, 0.9906307317621816, 0.9909330011074198, 0.9910027555717055, 0.9908167436669435, 0.9907469892026578, 0.9909326406192323, 0.9909097496193245, 0.9908396346668512, 0.9908399951550388, 0.9909330011074198, 0.9907469892026578, 0.9907469892026578, 0.9909097496193245, 0.9908399951550388, 0.9909330011074198], "end": "2016-02-03 14:20:28.698000", "epoch": [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0], "moving_var_accuracy_valid": [0.027116227732274532, 0.05403223118216084, 0.07840723815302947, 0.09808437710280263, 0.11329603431780541, 0.12418492312413443, 0.13037522677921207, 0.13360100842633357, 0.13433268549397515, 0.13296917804839004, 0.12966105650214452, 0.1250192294056458, 0.11969740350576404, 0.1136046719578095, 0.10686203963285416, 0.10025747130442828, 0.09338832569040756, 0.086842418898069, 0.08024429397670807, 0.07395585417932907, 0.06817530151715387, 0.0625919570081849, 0.0573278255169375, 0.05239724149092311, 0.04788084514100503, 0.04364001354934668, 0.03975532836177251, 0.03618715402656336, 0.032895967056299845, 0.029938662778333274, 0.027176136309379748, 0.024662809682603513, 0.022368499967436208, 0.02028346379566136, 0.01835572282112852, 0.016606843496333873, 0.01504702514570338, 0.013582104731649778, 0.012273597977027996, 0.011068588122031606, 0.010012563241083815, 0.009041838644921118, 0.008162201512701852, 0.007359441439242582, 0.0066402429011335005, 0.005992343685973088, 0.00541719911563957, 0.004888567936496078, 0.004402057467871394, 0.003967763139233228, 0.0035830487872724475, 0.003238727502685036, 0.0029250584671401307, 0.0026401638876615667, 0.0023816066512110474, 0.0021568149777378308, 0.001958189747958958, 0.0017636799416225117, 0.0015909786109987913, 0.0014343868311921186, 0.001294434943594166, 0.0011668912493126558, 0.0010515790716938498, 0.0009470460189661394, 0.0008534445157287841, 0.0007714389115036565, 0.0006981678041439733, 0.0006364479559882785, 0.000573544389891941, 0.0005233843493302922, 0.00047112646440422806, 0.0004255171675984949, 0.0003831547238368647, 0.0003452166954852881, 0.00031321545037894165, 0.0002844922284685609, 0.00025793200194757155, 0.00023217050130186877, 0.00020995232335956456, 0.00018930282612781034, 0.00017142704061587526, 0.0001551214385926086, 0.00014361526326527036, 0.0001329538192593387, 0.00012335283343904303, 0.00011256932132465734, 0.00010141190857430483, 9.216599029580704e-05, 0.00010901851883787569, 0.00012851898873893973, 0.00013963185387618117, 0.00014344805680144415, 0.00014466215762965948, 0.00014275483685270045, 0.00013971120040177535, 0.0001374091284540771, 0.00012969489146631258, 0.00012210455148261104, 0.00011423832290635794, 0.00010889011797450164, 0.00010488811677250343, 9.84794479890655e-05, 9.359081753718343e-05, 8.729772801196331e-05, 8.233974134835116e-05, 7.769445109504663e-05, 7.202343726847124e-05, 6.652082288079683e-05, 6.092322033379538e-05, 5.649603488238204e-05, 5.1421798412924385e-05, 4.709394996665228e-05, 4.330355939531835e-05, 3.948628641168845e-05, 3.6284836218339615e-05, 3.279707010855854e-05, 2.9788508734584543e-05, 2.7064951503172772e-05, 2.4599891410032597e-05, 2.2273780439304153e-05, 2.0156887382021886e-05, 1.8339791793154478e-05, 1.6517499385192698e-05, 1.5047979975093124e-05, 1.3661852988677028e-05, 1.2312573147326383e-05, 1.108323223226504e-05, 9.976054368203101e-06, 8.991910856196151e-06, 8.106014686331e-06, 7.317759254243572e-06, 6.771395032118454e-06, 6.097613185507161e-06, 5.491182601979302e-06, 4.942518070933616e-06, 4.4513790022770985e-06, 4.031865431043878e-06, 3.6336952415982154e-06, 3.2946564022180487e-06, 2.9759576410875874e-06, 2.6943235075181385e-06, 2.4265284293099354e-06, 2.1852017771392673e-06, 1.966696390232454e-06, 1.77112632355159e-06, 1.5958971094906254e-06, 1.4363133396403143e-06, 1.2926868179662717e-06, 1.1843012910364643e-06, 1.0661409533661195e-06, 9.629443584706258e-07, 8.702906397055357e-07, 8.106260280505414e-07, 7.428684181595462e-07, 7.142389345753057e-07, 6.449148679585948e-07, 5.914994479359783e-07, 5.584734534302492e-07, 5.0784240831882e-07, 4.710067000491548e-07, 4.2552133525501487e-07, 3.942742999283438e-07, 3.5549912221875025e-07, 3.224749640092337e-07, 3.932554644857271e-07, 3.651185441016053e-07, 3.2892186350905483e-07, 3.3881133200922447e-07, 3.176791723164192e-07, 2.8603966001760634e-07, 2.6389215279410666e-07, 2.427326691250875e-07, 2.384578613753078e-07, 2.180836035901703e-07, 1.990871811965926e-07, 1.8145613282893914e-07, 2.4547151812411287e-07, 2.22149022690827e-07, 2.0092609208883697e-07, 1.999352948095864e-07, 1.9735501741926118e-07, 1.7769872696780044e-07, 1.6192079462452454e-07, 2.0963691257211595e-07, 1.929566769133633e-07, 2.5129561084153495e-07, 2.4601987345242353e-07, 2.216928691136411e-07, 2.079600790749778e-07, 1.8725286742985615e-07, 1.8672963516919897e-07, 1.7712248135924543e-07, 1.6181829414745153e-07, 1.56105760648553e-07, 1.567868843169034e-07, 1.428414910060624e-07, 1.4081443625305898e-07, 1.4115363432772546e-07, 1.2825176143777112e-07, 1.1718140057952662e-07, 1.2723861453697404e-07, 1.150412256217439e-07, 1.041006439609648e-07, 9.638181023748649e-08, 8.72942024045035e-08, 8.189856969209369e-08, 9.090651842740013e-08, 9.574608920531643e-08, 8.725926227758324e-08, 9.217580704287467e-08, 9.60926865186885e-08, 1.4879829529812263e-07, 1.5395328442203316e-07, 1.6597429011703218e-07, 1.9654837055880684e-07], "accuracy_test": 0.890902024872449, "start": "2016-02-01 09:47:34.688000", "learning_rate_per_epoch": [0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.0030221776105463505, 0.00030221775523386896, 0.00030221775523386896, 0.00030221775523386896, 0.00030221775523386896, 0.00030221775523386896, 0.00030221775523386896, 0.00030221775523386896, 0.00030221775523386896, 0.00030221775523386896, 0.00030221775523386896, 0.00030221775523386896, 0.00030221775523386896, 0.00030221775523386896, 0.00030221775523386896, 3.0221775887184776e-05, 3.022177679667948e-06, 3.02217756598111e-07, 3.022177708089657e-08, 3.0221776192718153e-09, 3.022177508249513e-10, 3.022177647027391e-11, 3.022177560291217e-12, 3.0221775060811085e-13, 3.02217764160638e-14, 3.0221775569030853e-15, 3.0221775569030853e-16, 3.022177490728636e-17, 3.0221775734466976e-18, 3.0221775217479093e-19, 3.0221773925009386e-20, 3.0221774732802953e-21, 3.0221773723060994e-22, 3.0221772460883545e-23, 3.0221772066453093e-24, 3.0221771573415027e-25, 3.022177280601019e-26, 3.022177357638217e-27, 3.022177453934714e-28, 3.0221773937494034e-29, 3.022177356133584e-30, 3.022177403153358e-31, 3.022177461928076e-32, 3.0221774251938773e-33, 3.022177379276129e-34, 3.022177321878944e-35, 3.0221773936254255e-36, 3.022177483308527e-37, 3.0221775954124043e-38, 3.0221775954124043e-39, 3.022180398009333e-40, 3.022180398009333e-41, 3.0226007875486304e-42, 3.026804682941605e-43, 3.0828566215145976e-44, 2.802596928649634e-45, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "accuracy_train_first": 0.5566222401024363, "accuracy_train_last": 0.9909330011074198, "batch_size_eval": 1024, "accuracy_train_std": [0.015060418264323564, 0.01865173821903161, 0.02055816517305038, 0.017514895482050902, 0.018051758627775104, 0.01688289835944109, 0.019015353919823577, 0.016589795729719744, 0.01825283963877877, 0.016594563144336372, 0.018084737814383148, 0.015600491947009847, 0.017633976519576135, 0.016767564086277484, 0.01657730241227438, 0.016214929396863, 0.016889220586930515, 0.016771009107405088, 0.01579777348412795, 0.016224065019510965, 0.01658841909452705, 0.01616248925847308, 0.017163254965805737, 0.018494051911818594, 0.016328713737261847, 0.017149556004299953, 0.015598719640685817, 0.016199768020332284, 0.01789708126700102, 0.01645610394880558, 0.015673827801433293, 0.01685510102624974, 0.01666411749818929, 0.017598632051210462, 0.017034443187859773, 0.015124387236433324, 0.015223756233181578, 0.01615352854228891, 0.015447035538241265, 0.016418055320882488, 0.015474480679361441, 0.01506186916102099, 0.01397293193844631, 0.013405380141014129, 0.014290498919311528, 0.014783155549947089, 0.013314607475753156, 0.014670737371872331, 0.013272071383441804, 0.014822354384952198, 0.013441200754121408, 0.014319482953718685, 0.014046453146771224, 0.013276908314102297, 0.012713298475780045, 0.012323643185200793, 0.012396005895344168, 0.013070933711259553, 0.012751922296618996, 0.012825793712972764, 0.011718715628929007, 0.011938269623032955, 0.011344502532617609, 0.012580188354325074, 0.012745823103398278, 0.012290277037673896, 0.01201343195886263, 0.011462621572590554, 0.011046703680321518, 0.010161196845711665, 0.012626161670583181, 0.01096721621653422, 0.010488710454127696, 0.011377626409219042, 0.010870965929105445, 0.01241656637055852, 0.01070430108403459, 0.0100297125532397, 0.0104968468142605, 0.01034819855596258, 0.011249596853723237, 0.009262555512856704, 0.010401039361476478, 0.008968930406647443, 0.010427606884516917, 0.009031500396196454, 0.009582087291295876, 0.010565034167287206, 0.005533158684397169, 0.004922868146365926, 0.003885475854115708, 0.0036528177012373104, 0.0036917861618961894, 0.003239597452081155, 0.0036525905252144126, 0.0032284242322742165, 0.0029465115715021, 0.003115414526615061, 0.003547796909206241, 0.0027758882607198227, 0.0030464785971394954, 0.002714584896474134, 0.0030079136581093197, 0.002772138229506927, 0.0027074521481398723, 0.002834985299497588, 0.0030034964220481564, 0.0027617621635408493, 0.002872101789908198, 0.002909543262542484, 0.002909490223602696, 0.002618473222802005, 0.0027322777866930275, 0.002960363263409344, 0.002887870290883214, 0.002668670435112591, 0.002632867234347287, 0.002694075180707113, 0.0028862698742093, 0.002813476566480546, 0.0027796771962285347, 0.0027535281340999264, 0.002694075180707113, 0.0027700261837348525, 0.002646422948661763, 0.0025073822935279795, 0.002802764599038489, 0.0026820639484154227, 0.002594373585118906, 0.00251825734562244, 0.0027158258775468688, 0.002719242590752083, 0.002718373205283727, 0.0025413177532624003, 0.002662604847131293, 0.0025856065509811646, 0.002609787147612829, 0.0027557075748565513, 0.0027212646864621555, 0.0027093739937250516, 0.002750958515009577, 0.002801580561000472, 0.002859696426444403, 0.002667141189446779, 0.002983237763194362, 0.0029172668443740407, 0.0030165119981642226, 0.0027287322597035076, 0.0028509590971705382, 0.002632867234347287, 0.002773945008316495, 0.0028905074099834986, 0.002767771709911617, 0.002946954668989213, 0.002639279866575354, 0.00268695115698429, 0.0027016155829119176, 0.0029216251042204055, 0.0027322777866930275, 0.0024425075864229957, 0.002760678463854521, 0.0027619601887415614, 0.00275158229641575, 0.002780262879343424, 0.002895722341601817, 0.002836909386106982, 0.002748958261756228, 0.0028508201776746263, 0.0027923692432535886, 0.0027896531418603186, 0.0027382808723980753, 0.0027335176346851117, 0.002947934098082595, 0.002947485785512352, 0.002869771977049747, 0.0029016754295671417, 0.002940524618047281, 0.002718373205283727, 0.0028694148931336593, 0.0027655358564425254, 0.0027884720706626816, 0.0026048685921241915, 0.0028757962726527354, 0.002959242283676002, 0.003076109226161124, 0.0029560280914993986, 0.0027822812969979295, 0.0027646287298693636, 0.002989703061958579, 0.002617121226677885, 0.0028062882757655797, 0.0029243349698117958, 0.002684479392978638, 0.0026306624928758926, 0.002593084177865384, 0.002680467296204683, 0.0028486296468735973, 0.002828025075151791, 0.0028142808333582355, 0.002714195815465737, 0.0028688167327824156, 0.002707668075609694, 0.0027347592192811104, 0.002820856029578587, 0.002854319768315382, 0.003002036975148882, 0.0027260839244685154, 0.0027957973447572245, 0.0026880669188145394, 0.00259636218443378, 0.0027572059385479047, 0.002781802253148464, 0.0026925603637619, 0.0029227867828357642, 0.002732710302197059], "accuracy_test_std": 0.0064396444218204705, "error_valid": [0.4510998093938253, 0.37135406861822284, 0.31252206089984935, 0.27726286003388556, 0.24766007388930722, 0.22533003106174698, 0.2177925569465362, 0.2019425357680723, 0.1888295368975903, 0.17874770566641573, 0.17518854715737953, 0.17089549604668675, 0.16215643825301207, 0.1608239599021084, 0.1642934040850903, 0.15519843044051207, 0.15958266660391573, 0.15197312688253017, 0.15827077842620485, 0.15640883847891573, 0.14744623023343373, 0.1509053793298193, 0.1511495199548193, 0.1513730704066265, 0.14669321818524095, 0.14939935523343373, 0.14660203313253017, 0.14500482398343373, 0.14522837443524095, 0.13875864787274095, 0.1427457878388554, 0.14073236304593373, 0.1398984610316265, 0.13816888648343373, 0.14169863045933728, 0.1407529532191265, 0.1352083137236446, 0.1443135824548193, 0.13973521037274095, 0.14512689429593373, 0.1355436394013554, 0.13851450724774095, 0.1385762777673193, 0.14121034920933728, 0.1385762777673193, 0.13746734986822284, 0.13315370858433728, 0.1358186652861446, 0.14156626506024095, 0.13805711125753017, 0.13377435523343373, 0.13172857445406627, 0.13229921639683728, 0.13268601750753017, 0.13317429875753017, 0.12799587019954817, 0.1251985480986446, 0.13377435523343373, 0.13082407756024095, 0.13129176863704817, 0.12981662980045183, 0.13082407756024095, 0.13104762801204817, 0.13193300545933728, 0.13080348738704817, 0.12786350480045183, 0.1267854621611446, 0.12320424275225905, 0.12887095256024095, 0.12251300122364461, 0.12961366952183728, 0.12637807087725905, 0.12860622176204817, 0.12786350480045183, 0.12441465079066272, 0.12380429922816272, 0.12405873493975905, 0.12758847891566272, 0.12479115681475905, 0.12582948983433728, 0.12417051016566272, 0.12420139542545183, 0.12027455525225905, 0.11986716396837349, 0.13204478068524095, 0.12212620011295183, 0.12481174698795183, 0.12260418627635539, 0.10842343985316272, 0.10536138695406627, 0.10558493740587349, 0.10621587914156627, 0.10571730280496983, 0.10573789297816272, 0.10519813629518071, 0.10386565794427716, 0.10593055817018071, 0.10556434723268071, 0.10557464231927716, 0.10361122223268071, 0.10225815370858427, 0.10339796686746983, 0.10203460325677716, 0.10287880035768071, 0.10165809723268071, 0.10116981598268071, 0.10202430817018071, 0.10202430817018071, 0.10251258942018071, 0.10129188629518071, 0.10263465973268071, 0.10190223785768071, 0.10141395660768071, 0.10190223785768071, 0.10116981598268071, 0.10251258942018071, 0.10190223785768071, 0.10178016754518071, 0.10165809723268071, 0.10191253294427716, 0.10190223785768071, 0.10141395660768071, 0.10239051910768071, 0.10129188629518071, 0.10142425169427716, 0.10202430817018071, 0.10226844879518071, 0.10251258942018071, 0.10202430817018071, 0.10275673004518071, 0.10191253294427716, 0.10092567535768071, 0.10202430817018071, 0.10239051910768071, 0.10214637848268071, 0.10202430817018071, 0.10165809723268071, 0.10190223785768071, 0.10263465973268071, 0.10251258942018071, 0.10178016754518071, 0.10202430817018071, 0.10202430817018071, 0.10214637848268071, 0.10202430817018071, 0.10226844879518071, 0.10214637848268071, 0.10214637848268071, 0.10165809723268071, 0.10214637848268071, 0.10190223785768071, 0.10227874388177716, 0.10154632200677716, 0.10165809723268071, 0.10129188629518071, 0.10178016754518071, 0.10226844879518071, 0.10141395660768071, 0.10165809723268071, 0.10226844879518071, 0.10178016754518071, 0.10154632200677716, 0.10178016754518071, 0.10202430817018071, 0.10080360504518071, 0.10141395660768071, 0.10179046263177716, 0.10104774567018071, 0.10129188629518071, 0.10166839231927716, 0.10190223785768071, 0.10190223785768071, 0.10215667356927716, 0.10153602692018071, 0.10153602692018071, 0.10153602692018071, 0.10263465973268071, 0.10165809723268071, 0.10165809723268071, 0.10129188629518071, 0.10214637848268071, 0.10178016754518071, 0.10190223785768071, 0.10092567535768071, 0.10190223785768071, 0.10263465973268071, 0.10226844879518071, 0.10179046263177716, 0.10214637848268071, 0.10190223785768071, 0.10142425169427716, 0.10214637848268071, 0.10202430817018071, 0.10153602692018071, 0.10226844879518071, 0.10202430817018071, 0.10226844879518071, 0.10153602692018071, 0.10178016754518071, 0.10202430817018071, 0.10239051910768071, 0.10202430817018071, 0.10203460325677716, 0.10179046263177716, 0.10202430817018071, 0.10214637848268071, 0.10153602692018071, 0.10153602692018071, 0.10178016754518071, 0.10226844879518071, 0.10153602692018071, 0.10104774567018071, 0.10226844879518071, 0.10129188629518071, 0.10251258942018071], "tags": ["deepconvnets", "zoonormalized"], "hp": {"zoom_range": [1, 1], "translation_range": [-5, 5], "learning_rate_decay": 0.09584610498923524, "discrete_learning_divide": 10.0, "shear_range": [1, 1], "patience_check_each": 1, "discrete_learning_rate_epsilon": 0.0001, "patience_threshold": 1, "do_flip": true, "batch_size": 16, "valid_ratio": 0.15, "learning_rate": 0.003022177578623576, "optimization": "adam", "nb_data_augmentation": 2, "learning_rate_decay_method": "discrete", "max_epochs": 1000, "patience_nb_epochs": 50, "weight_decay": 0.0, "l2_decay": 1.5664393649559633e-08, "rotation_range": [0, 0], "momentum": 0.943504315707098}, "accuracy_valid_max": 0.8991963949548193, "code_": "from datetime import datetime\nimport matplotlib as mpl\nmpl.use('Agg')   # NOQA\nfrom lasagnekit.easy import BatchOptimizer, BatchIterator, get_batch_slice\nfrom lasagnekit.nnet.capsule import Capsule\nfrom lasagnekit.easy import iterate_minibatches\nfrom lasagne import updates\nfrom lasagnekit.updates import santa_sss\nupdates.santa_sss = santa_sss  # NOQA\nimport theano\nimport theano.tensor as T\n\nimport numpy as np\nimport json\n\nfrom skimage.io import imsave\nfrom lasagnekit.datasets.infinite_image_dataset import Transform\n\n\nclass MyBatchIterator(BatchIterator):\n\n    def __init__(self, nb_data_augmentation=1,  **transform_params):\n        super(MyBatchIterator, self).__init__()\n\n        self.nb_data_augmentation = nb_data_augmentation\n        self.transform_params = transform_params\n\n    def transform(self, batch_index, V):\n        assert self.batch_size is not None\n        assert self.nb_batches is not None\n\n        if isinstance(batch_index, T.TensorVariable):\n            batch_slice = get_batch_slice(batch_index,\n                                          self.batch_size)\n        else:\n            batch_slice = slice(batch_index * self.batch_size,\n                                (batch_index+1) * self.batch_size)\n\n        d = OrderedDict()\n        X = V[\"X\"][batch_slice]\n        y = V[\"y\"][batch_slice]\n\n        X_list = [X]\n        y_list = [y]\n        for i in range(self.nb_data_augmentation):\n            tr, _ = Transform(X.transpose(0, 2, 3, 1),\n                              np.random,\n                              **self.transform_params)\n            imsave(\"out.png\", (((tr[0] + 1) / 2.)))\n            X_transformed = tr.transpose((0, 3, 1, 2))\n            X_list.append(X_transformed)\n            y_list.append(y)\n        d[\"X\"] = np.concatenate(X_list, axis=0)\n        d[\"y\"] = np.concatenate(y_list, axis=0)\n        d[\"X\"], d[\"y\"] = shuffle(d[\"X\"], d[\"y\"])\n        return d\n\n\nif __name__ == \"__main__\":\n    from lasagnekit.datasets.cifar10 import Cifar10\n    from sklearn.utils import shuffle\n    from sklearn.cross_validation import train_test_split\n    from collections import OrderedDict\n\n    from lightexperiments.light import Light\n    from hp_toolkit.hp import (\n            Param, make_constant_param,\n            instantiate_random, instantiate_default\n    )\n    import argparse\n    import vgg  # NOQA\n    import vgg_small  # NOQA\n    import vgg_very_small  # NOQA\n    import spatially_sparse  # NOQA\n    import nin  # NOQA\n    import fully  # NOQA\n    import residual  # NOQA\n    import residualv2  # NOQA\n    import residualv3  # NOQA\n    import residualv4  # NOQA\n    import residualv5  # NOQA\n\n    parser = argparse.ArgumentParser(description='zoo')\n    parser.add_argument(\"--budget-hours\",\n                        default=np.inf,\n                        help=\"nb of maximum hours (defaut=inf)\")\n    parser.add_argument(\"--fast-test\", default=False, type=bool)\n    parser.add_argument(\"--model\", default=\"vgg\", type=str)\n    parser.add_argument(\"--default-model\", default=False, type=bool)\n\n    models = {\n        \"vgg\": vgg,\n        \"vgg_small\": vgg_small,\n        \"vgg_very_small\": vgg_very_small,\n        \"spatially_sparse\": spatially_sparse,\n        \"nin\": nin,\n        \"fully\": fully,\n        \"residual\": residual,\n        \"residualv2\": residualv2,\n        \"residualv3\": residualv3,\n        \"residualv4\": residualv4,\n        \"residualv5\": residualv5\n    }\n    args = parser.parse_args()\n    model_class = models[args.model]\n    budget_sec = args.budget_hours * 3600\n    begin = datetime.now()\n    seed = np.random.randint(0, 1000000000)\n    np.random.seed(seed)\n    fast_test = args.fast_test\n    np.random.seed(seed)\n    rng = np.random\n\n    if args.default_model is True:\n        instantiate = instantiate_default\n    else:\n        instantiate = instantiate_random\n\n    light = Light()\n    light.launch()\n    light.initials()\n    light.file_snapshot()\n    light.set_seed(seed)\n    light.tag(\"deepconvnets\")\n    light.tag(\"zoonormalized\")\n\n    data = Cifar10(batch_indexes=[1, 2, 3, 4, 5])\n    data.load()\n\n    data_test = Cifar10(batch_indexes=[6])\n    data_test.load()\n\n    light.set(\"dataset\", data.__class__.__name__)\n\n    hp = dict(\n        learning_rate=Param(initial=0.001, interval=[-4, -2], type='real', scale='log10'),\n        learning_rate_decay=Param(initial=0.05, interval=[0, 0.1], type='real'),\n        learning_rate_decay_method=Param(initial='discrete', interval=['exp', 'none', 'sqrt', 'lin', 'discrete'], type='choice'),\n        momentum=Param(initial=0.9, interval=[0.5, 0.99], type='real'),\n        #weight_decay=Param(initial=0, interval=[-10, -3], type='real', scale='log10'),\n        weight_decay=make_constant_param(0.),\n        discrete_learning_rate_epsilon=make_constant_param(1e-4),#NEW TO ADD\n        discrete_learning_divide=make_constant_param(10.),\n        l2_decay=Param(initial=0, interval=[-8, -4], type='real', scale='log10'),#NEW TO ADD\n        max_epochs=make_constant_param(1000),\n        batch_size=Param(initial=32,\n                         interval=[16, 32, 64, 128],\n                         type='choice'),\n        patience_nb_epochs=make_constant_param(50),\n        valid_ratio=make_constant_param(0.15),\n\n        patience_threshold=make_constant_param(1),\n        patience_check_each=make_constant_param(1),\n\n        optimization=Param(initial='adam',\n                           interval=['adam', 'nesterov_momentum', 'rmsprop'],\n                           type='choice'),\n        # data augmentation\n        nb_data_augmentation=Param(initial=1, interval=[0, 1, 2, 3, 4], type='choice'),\n        zoom_range=make_constant_param((1, 1)),\n        rotation_range=make_constant_param((0, 0)),\n        shear_range=make_constant_param((1, 1)),\n        translation_range=make_constant_param((-5, 5)),\n        do_flip=make_constant_param(True)\n\n    )\n\n    if fast_test is True:\n        instantiate = instantiate_default\n\n    default_params = {}\n    if fast_test is True:\n        default_params[\"max_epochs\"] = 1\n    hp = instantiate(hp, default_params=default_params)\n    light.set(\"hp\", hp)\n\n    hp_model = model_class.params\n    hp_model = instantiate(hp_model)\n    light.set(\"hp_model\", hp_model)\n\n    model = model_class.build_model(\n        input_width=data.img_dim[1],\n        input_height=data.img_dim[2],\n        output_dim=data.output_dim,\n        **hp_model)\n    light.set(\"model\", model_class.__name__)\n    print(model_class.__name__)\n    print(json.dumps(hp, indent=4))\n    print(json.dumps(hp_model, indent=4))\n\n    initial_lr = hp[\"learning_rate\"]\n\n    def evaluate(X, y, batch_size=None):\n        if batch_size is None:\n            batch_size = hp[\"batch_size\"]\n        accs = []\n        for mini_batch in iterate_minibatches(X.shape[0],\n                                              batch_size):\n            acc = (nnet.predict(X[mini_batch]) == y[mini_batch]).mean()\n            accs.append(acc)\n        return accs\n\n    class MyBatchOptimizer(BatchOptimizer):\n\n        def quitter(self, update_status):\n            quit = super(MyBatchOptimizer, self).quitter(update_status)\n            if (datetime.now() - begin).total_seconds() >= budget_sec:\n                print(\"Budget finished.quit.\")\n                quit = True\n            return quit\n\n        def iter_update(self, epoch, nb_batches, iter_update_batch):\n            start = datetime.now()\n            status = super(MyBatchOptimizer, self).iter_update(epoch,\n                                                               nb_batches,\n                                                               iter_update_batch)\n            duration = (datetime.now() - start).total_seconds()\n            status[\"duration\"] = duration\n            accs = evaluate(X_train, y_train, batch_size=self.batch_size_eval)\n            status[\"accuracy_train\"] = np.mean(accs)\n            status[\"accuracy_train_std\"] = np.std(accs)\n            accs = evaluate(X_valid, y_valid, batch_size=self.batch_size_eval)\n            status[\"accuracy_valid\"] = np.mean(accs)\n            status[\"accuracy_valid_std\"] = np.std(accs)\n\n            status[\"error_valid\"] = 1 - status[\"accuracy_valid\"]\n\n            status = self.add_moving_avg(\"accuracy_train\", status)\n            status = self.add_moving_var(\"accuracy_train\", status)\n            status = self.add_moving_avg(\"accuracy_valid\", status)\n            status = self.add_moving_var(\"accuracy_valid\", status)\n\n            for k, v in status.items():\n                light.append(k, float(v))\n\n            lr = self.learning_rate\n            lr_decay_method = hp[\"learning_rate_decay_method\"]\n            lr_decay = hp[\"learning_rate_decay\"]\n            cur_lr = lr.get_value()\n            t = status[\"epoch\"]\n\n            if lr_decay_method == \"exp\":\n                new_lr = cur_lr * (1 - lr_decay)\n            elif lr_decay_method == \"lin\":\n                new_lr = initial_lr / (1 + t)\n            elif lr_decay_method == \"sqrt\":\n                new_lr = initial_lr / np.sqrt(1 + t)\n            elif lr_decay_method == 'discrete':\n                eps = hp[\"discrete_learning_rate_epsilon\"]\n                div = hp[\"discrete_learning_divide\"]\n                if status[\"moving_var_accuracy_valid\"] <= eps:\n                    new_lr = cur_lr / div\n                else:\n                    new_lr = cur_lr\n            else:\n                new_lr = cur_lr\n\n            new_lr = np.array(new_lr, dtype=\"float32\")\n            lr.set_value(new_lr)\n\n            light.append(\"learning_rate_per_epoch\",\n                         float(self.learning_rate.get_value()))\n            return status\n\n        def add_moving_avg(self, name, status, B=0.9):\n            if len(self.stats) >= 2:\n                old_avg = self.stats[-2][\"moving_avg_\" + name]\n            else:\n                old_avg = 0\n            avg = B * old_avg + (1 - B) * status[name]\n            status[\"moving_avg_\" + name] = avg\n            return status\n\n        def add_moving_var(self, name, status, B=0.9):\n            if len(self.stats) >= 2:\n                old_avg = self.stats[-2][\"moving_avg_\" + name]\n                old_var = self.stats[-2][\"moving_var_\" + name]\n            else:\n                old_avg = 0\n                old_var = 0\n            new_avg = B * old_avg + (1 - B) * status[name]\n            var = B * old_var + (1 - B) * (status[name] - old_avg) * (status[name] - new_avg)\n            status[\"moving_var_\" + name] = var\n            return status\n\n    learning_rate = theano.shared(np.array(hp[\"learning_rate\"],\n                                  dtype=\"float32\"))\n    momentum = hp[\"momentum\"]\n\n    optim_params = {\"learning_rate\": learning_rate}\n    if \"momentum\" in hp[\"optimization\"]:\n        optim_params[\"momentum\"] = hp[\"momentum\"]\n\n    batch_optimizer = MyBatchOptimizer(\n        verbose=1, max_nb_epochs=hp[\"max_epochs\"],\n        batch_size=hp[\"batch_size\"],\n        optimization_procedure=(getattr(updates, hp[\"optimization\"]),\n                                optim_params),\n        patience_stat=\"error_valid\",\n        patience_nb_epochs=hp[\"patience_nb_epochs\"],\n        patience_progression_rate_threshold=hp[\"patience_threshold\"],\n        patience_check_each=hp[\"patience_check_each\"],\n        verbose_stat_show=[\n            \"epoch\",\n            \"duration\",\n            \"accuracy_train\",\n            \"accuracy_train_std\",\n            \"accuracy_valid\",\n            \"accuracy_valid_std\",\n        ]\n    )\n    batch_size_eval = 1024\n    light.set(\"batch_size_eval\", batch_size_eval)\n    batch_optimizer.learning_rate = learning_rate\n    batch_optimizer.batch_size_eval = batch_size_eval\n\n    input_variables = OrderedDict()\n    input_variables[\"X\"] = dict(tensor_type=T.tensor4)\n    input_variables[\"y\"] = dict(tensor_type=T.ivector)\n    functions = dict(\n        predict=dict(\n            get_output=lambda model, X: (model.get_output(X, deterministic=True)[0]).argmax(axis=1),\n            params=[\"X\"]\n        )\n    )\n\n    def loss_function(model, tensors):\n        X = tensors[\"X\"]\n        y = tensors[\"y\"]\n        y_hat, = model.get_output(X)\n        if hp[\"weight_decay\"] > 0:\n            l1 = sum(T.abs_(param).sum() for param in model.capsule.all_params_regularizable) * hp[\"weight_decay\"]\n        else:\n            l1 = 0\n\n        if hp[\"l2_decay\"] > 0:\n            l2 = sum(T.sqr(param).sum() for param in model.capsule.all_params_regularizable) * hp[\"l2_decay\"]\n        else:\n            l2 = 0\n\n        return T.nnet.categorical_crossentropy(y_hat, y).mean() + l1 + l2\n\n    batch_iterator = MyBatchIterator(hp[\"nb_data_augmentation\"],\n                                     zoom_range=hp[\"zoom_range\"],\n                                     rotation_range=hp[\"rotation_range\"],\n                                     shear_range=hp[\"shear_range\"],\n                                     translation_range=hp[\"translation_range\"],\n                                     do_flip=hp[\"do_flip\"])\n\n    nnet = Capsule(\n        input_variables, model,\n        loss_function,\n        functions=functions,\n        batch_optimizer=batch_optimizer,\n        batch_iterator=batch_iterator,\n    )\n\n    from sklearn.preprocessing import LabelEncoder\n\n    imshape = ([data.X.shape[0]] +\n               list(data.img_dim))\n    X = data.X.reshape(imshape).astype(np.float32)\n    y = data.y\n    label_encoder = LabelEncoder()\n    y = label_encoder.fit_transform(y)\n    y = y.astype(np.int32)\n\n    # rescaling to [-1, 1]\n    X_min = X.min(axis=(0, 2, 3))[None, :, None, None]\n    X_max = X.max(axis=(0, 2, 3))[None, :, None, None]\n    X = 2 * ((X - X_min) / (X_max - X_min)) - 1\n    X, y = shuffle(X, y)\n\n    if fast_test is True:\n        X = X[0:100]\n        y = y[0:100]\n\n    X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=hp[\"valid_ratio\"])\n    light.set(\"nb_examples_train\", X_train.shape[0])\n    light.set(\"nb_examples_valid\", X_valid.shape[0])\n    try:\n        nnet.fit(X=X_train, y=y_train)\n    except KeyboardInterrupt:\n        print(\"interruption...\")\n\n    imshape = ([data_test.X.shape[0]] +\n               list(data_test.img_dim))\n    X_test = data_test.X.reshape(imshape).astype(np.float32)\n    X_test = 2 * ((X_test - X_min) / (X_max - X_min)) - 1\n    y_test = data_test.y\n    y_test = label_encoder.transform(y_test)\n    y_test = y_test.astype(np.int32)\n\n    accs = evaluate(X_test, y_test, batch_size_eval)\n    m, s = np.mean(accs), np.std(accs)\n    light.set(\"accuracy_test\", m)\n    light.set(\"accuracy_test_std\", s)\n    print(\"Test accuracy : {}+-{}\".format(m, s))\n\n    light.endings()  # save the duration\n\n    if fast_test is False:\n        light.store_experiment()  # update the DB\n    light.close()\n", "nb_examples_valid": 7500, "accuracy_valid_last": 0.8974874105798193, "accuracy_valid_std": [0.016544248482168494, 0.015419971855520374, 0.016048186967188027, 0.013863506572912175, 0.008877611033592235, 0.012247742183997871, 0.011297397223697972, 0.007139582833055672, 0.00882292439377494, 0.011018381697470065, 0.005463376985365384, 0.005794554774642856, 0.00900017423192396, 0.008404546458576818, 0.005727467909940198, 0.004198544928818025, 0.0073576225766156895, 0.007506236149363644, 0.00798382770083874, 0.008687234652739767, 0.00714445222844775, 0.008787870776222251, 0.006264629897220724, 0.007958589946536632, 0.006728846251721657, 0.008204456793932354, 0.010914187109389094, 0.006987533012990159, 0.012950718554175582, 0.010045372601654428, 0.01283410351025006, 0.012786070148408862, 0.007673630457643009, 0.008526712038458869, 0.012174863589019128, 0.012550113009333414, 0.011871514532979579, 0.008584950855935596, 0.011456771384818555, 0.011142467324779496, 0.009703519560000887, 0.013057966944579022, 0.009766694208476074, 0.01067660156368304, 0.007844289485317214, 0.006697042450243067, 0.008088658604657632, 0.008718058744914168, 0.008106630389241, 0.010481648796685698, 0.01037415472362322, 0.010147898723147484, 0.009060235708308694, 0.006061540277678077, 0.006706118123506279, 0.007565118137967366, 0.007242989239641154, 0.008533110434117553, 0.010602094607984478, 0.008143499955928694, 0.00916593277658156, 0.004040015185457088, 0.007255331763960525, 0.008223766389124317, 0.010147831047412447, 0.01030374417045808, 0.00938378699929606, 0.007528134595450939, 0.006816377455845851, 0.006181336414561691, 0.007774079002903737, 0.005803428311690478, 0.008017972263926613, 0.00736151436092522, 0.0069024190078824325, 0.00713912216136235, 0.005980448411616532, 0.008431377179803653, 0.005829710393449947, 0.008277513033032242, 0.00752305078122835, 0.008789254337168258, 0.0051806264540609865, 0.011267155806345307, 0.00885082617671319, 0.007000487710641092, 0.008429614010675731, 0.007342543731410534, 0.006463915602283367, 0.006536074567780653, 0.009359786598810019, 0.006737376822095878, 0.004335815679642385, 0.007790504348275379, 0.004834170910444584, 0.006368793931151196, 0.0061070344316674, 0.006418370936678156, 0.004363479185701524, 0.0056174132702417655, 0.0055570100333346105, 0.005041922120763171, 0.006458272571943658, 0.005954028844265666, 0.006018329748582699, 0.00557390714804085, 0.006414215810074496, 0.005706057799440291, 0.005666401950917466, 0.006498913277112222, 0.00657161601059, 0.005828228098634794, 0.005753948655128031, 0.006685587395979987, 0.005966438962891565, 0.00564532483478672, 0.005577384675678862, 0.0057621020812353855, 0.0061360251333648285, 0.0063825355017064316, 0.005828228098634794, 0.00686837835976163, 0.004981463649502725, 0.0058827271951175444, 0.0060059802128008865, 0.006451279068247843, 0.006240970990961717, 0.005363790726896361, 0.006011270605876666, 0.005447682713051096, 0.005997365075473706, 0.006103638066195931, 0.006225590627980128, 0.006349187958543877, 0.005930705014897425, 0.005110948441807176, 0.006457857251597579, 0.006029297518014166, 0.005841766084394637, 0.0047509333720121534, 0.005150349520152338, 0.006301718256444051, 0.0058708129116303714, 0.005642286935836177, 0.0056006252075143865, 0.006125292436726291, 0.00524822517071052, 0.005705318361284696, 0.005586904581388757, 0.005642286935836177, 0.006300022910129268, 0.0068311323761606705, 0.005478227397255108, 0.005713494051467285, 0.006179219848710594, 0.006389930744994594, 0.006373276156243083, 0.005649409901073019, 0.0061360251333648285, 0.00548891897219005, 0.00584427024623121, 0.006326496324056633, 0.006238899445656635, 0.006740452424135768, 0.006234754290185993, 0.00640122943161712, 0.006227419819537803, 0.006221436605252197, 0.006480544360184873, 0.005926721134902746, 0.006896238233885574, 0.006127358440326434, 0.006639466766896134, 0.005909097120927866, 0.005929236659441041, 0.005909097120927866, 0.006855715444522754, 0.0051886383934240925, 0.005565526410182699, 0.006042667282333856, 0.005990702605791257, 0.00584427024623121, 0.006613879686906938, 0.006573801192662816, 0.006146782901269667, 0.006042385023796404, 0.005743627288785948, 0.005973383972293422, 0.006050105242748993, 0.005807738302524882, 0.005700484157510863, 0.006596810762958428, 0.005643034633355416, 0.005868610706662597, 0.006316913267287428, 0.005891083331821699, 0.0055536913148439, 0.006185086005220936, 0.0056787451147389, 0.005951480367082809, 0.005941834529148869, 0.0059112842430024464, 0.005918915812771457, 0.005623895468065296, 0.005471424973481423, 0.005726174655275007, 0.005909097120927866, 0.006126992178440836, 0.006238899445656635, 0.005532184798203238, 0.0060091198756611446, 0.006316515362815149, 0.006335756608766903, 0.0059632334826486355, 0.006033211872061961], "accuracy_valid": [0.5489001906061747, 0.6286459313817772, 0.6874779391001506, 0.7227371399661144, 0.7523399261106928, 0.774669968938253, 0.7822074430534638, 0.7980574642319277, 0.8111704631024097, 0.8212522943335843, 0.8248114528426205, 0.8291045039533133, 0.8378435617469879, 0.8391760400978916, 0.8357065959149097, 0.8448015695594879, 0.8404173333960843, 0.8480268731174698, 0.8417292215737951, 0.8435911615210843, 0.8525537697665663, 0.8490946206701807, 0.8488504800451807, 0.8486269295933735, 0.853306781814759, 0.8506006447665663, 0.8533979668674698, 0.8549951760165663, 0.854771625564759, 0.861241352127259, 0.8572542121611446, 0.8592676369540663, 0.8601015389683735, 0.8618311135165663, 0.8583013695406627, 0.8592470467808735, 0.8647916862763554, 0.8556864175451807, 0.860264789627259, 0.8548731057040663, 0.8644563605986446, 0.861485492752259, 0.8614237222326807, 0.8587896507906627, 0.8614237222326807, 0.8625326501317772, 0.8668462914156627, 0.8641813347138554, 0.858433734939759, 0.8619428887424698, 0.8662256447665663, 0.8682714255459337, 0.8677007836031627, 0.8673139824924698, 0.8668257012424698, 0.8720041298004518, 0.8748014519013554, 0.8662256447665663, 0.869175922439759, 0.8687082313629518, 0.8701833701995482, 0.869175922439759, 0.8689523719879518, 0.8680669945406627, 0.8691965126129518, 0.8721364951995482, 0.8732145378388554, 0.876795757247741, 0.871129047439759, 0.8774869987763554, 0.8703863304781627, 0.873621929122741, 0.8713937782379518, 0.8721364951995482, 0.8755853492093373, 0.8761957007718373, 0.875941265060241, 0.8724115210843373, 0.875208843185241, 0.8741705101656627, 0.8758294898343373, 0.8757986045745482, 0.879725444747741, 0.8801328360316265, 0.867955219314759, 0.8778737998870482, 0.8751882530120482, 0.8773958137236446, 0.8915765601468373, 0.8946386130459337, 0.8944150625941265, 0.8937841208584337, 0.8942826971950302, 0.8942621070218373, 0.8948018637048193, 0.8961343420557228, 0.8940694418298193, 0.8944356527673193, 0.8944253576807228, 0.8963887777673193, 0.8977418462914157, 0.8966020331325302, 0.8979653967432228, 0.8971211996423193, 0.8983419027673193, 0.8988301840173193, 0.8979756918298193, 0.8979756918298193, 0.8974874105798193, 0.8987081137048193, 0.8973653402673193, 0.8980977621423193, 0.8985860433923193, 0.8980977621423193, 0.8988301840173193, 0.8974874105798193, 0.8980977621423193, 0.8982198324548193, 0.8983419027673193, 0.8980874670557228, 0.8980977621423193, 0.8985860433923193, 0.8976094808923193, 0.8987081137048193, 0.8985757483057228, 0.8979756918298193, 0.8977315512048193, 0.8974874105798193, 0.8979756918298193, 0.8972432699548193, 0.8980874670557228, 0.8990743246423193, 0.8979756918298193, 0.8976094808923193, 0.8978536215173193, 0.8979756918298193, 0.8983419027673193, 0.8980977621423193, 0.8973653402673193, 0.8974874105798193, 0.8982198324548193, 0.8979756918298193, 0.8979756918298193, 0.8978536215173193, 0.8979756918298193, 0.8977315512048193, 0.8978536215173193, 0.8978536215173193, 0.8983419027673193, 0.8978536215173193, 0.8980977621423193, 0.8977212561182228, 0.8984536779932228, 0.8983419027673193, 0.8987081137048193, 0.8982198324548193, 0.8977315512048193, 0.8985860433923193, 0.8983419027673193, 0.8977315512048193, 0.8982198324548193, 0.8984536779932228, 0.8982198324548193, 0.8979756918298193, 0.8991963949548193, 0.8985860433923193, 0.8982095373682228, 0.8989522543298193, 0.8987081137048193, 0.8983316076807228, 0.8980977621423193, 0.8980977621423193, 0.8978433264307228, 0.8984639730798193, 0.8984639730798193, 0.8984639730798193, 0.8973653402673193, 0.8983419027673193, 0.8983419027673193, 0.8987081137048193, 0.8978536215173193, 0.8982198324548193, 0.8980977621423193, 0.8990743246423193, 0.8980977621423193, 0.8973653402673193, 0.8977315512048193, 0.8982095373682228, 0.8978536215173193, 0.8980977621423193, 0.8985757483057228, 0.8978536215173193, 0.8979756918298193, 0.8984639730798193, 0.8977315512048193, 0.8979756918298193, 0.8977315512048193, 0.8984639730798193, 0.8982198324548193, 0.8979756918298193, 0.8976094808923193, 0.8979756918298193, 0.8979653967432228, 0.8982095373682228, 0.8979756918298193, 0.8978536215173193, 0.8984639730798193, 0.8984639730798193, 0.8982198324548193, 0.8977315512048193, 0.8984639730798193, 0.8989522543298193, 0.8977315512048193, 0.8987081137048193, 0.8974874105798193], "seed": 636194618, "model": "residualv3", "loss_std": [0.3003283441066742, 0.26861417293548584, 0.2641329765319824, 0.2580479383468628, 0.252853661775589, 0.2486046403646469, 0.2431352585554123, 0.23990222811698914, 0.2352156788110733, 0.23528018593788147, 0.23233869671821594, 0.2268603891134262, 0.22412517666816711, 0.22467386722564697, 0.21996848285198212, 0.21594157814979553, 0.21180197596549988, 0.20908135175704956, 0.20786616206169128, 0.20384204387664795, 0.20155204832553864, 0.1993003636598587, 0.19862468540668488, 0.19231052696704865, 0.19067852199077606, 0.18951913714408875, 0.18616756796836853, 0.1841626614332199, 0.1827765554189682, 0.18007440865039825, 0.17588068544864655, 0.17453241348266602, 0.1747129112482071, 0.1716815084218979, 0.17193998396396637, 0.1646881252527237, 0.16262683272361755, 0.16141998767852783, 0.1630186289548874, 0.16009283065795898, 0.15906275808811188, 0.1567513346672058, 0.15341873466968536, 0.15588177740573883, 0.15320362150669098, 0.15173906087875366, 0.1481192409992218, 0.14563533663749695, 0.14678654074668884, 0.14535658061504364, 0.1424902230501175, 0.14402882754802704, 0.1409512460231781, 0.13472671806812286, 0.13713207840919495, 0.13879552483558655, 0.13596069812774658, 0.13305960595607758, 0.13405437767505646, 0.1323593556880951, 0.1276295781135559, 0.13139857351779938, 0.1292148232460022, 0.12713228166103363, 0.127387136220932, 0.12723925709724426, 0.12331758439540863, 0.12566010653972626, 0.1232614666223526, 0.12215854972600937, 0.11995412409305573, 0.11924314498901367, 0.1186990737915039, 0.11775167286396027, 0.11576201021671295, 0.11887617409229279, 0.11727747321128845, 0.11453877389431, 0.11760460585355759, 0.11694904416799545, 0.11235538870096207, 0.1144934892654419, 0.11223915964365005, 0.11145450919866562, 0.11078426986932755, 0.11084026843309402, 0.11141932010650635, 0.10932163149118423, 0.09542021155357361, 0.07994053512811661, 0.07757237553596497, 0.07674813270568848, 0.07380656898021698, 0.07490783929824829, 0.07443495094776154, 0.07263129949569702, 0.07202253490686417, 0.07087862491607666, 0.0710580050945282, 0.0676887258887291, 0.07123056799173355, 0.07114984840154648, 0.06765300035476685, 0.06388068199157715, 0.06564975529909134, 0.06569722294807434, 0.06345503032207489, 0.06823477149009705, 0.06575887650251389, 0.0657740980386734, 0.06458846479654312, 0.06488922983407974, 0.06553306430578232, 0.06436078995466232, 0.06506115198135376, 0.06432934105396271, 0.066442109644413, 0.06508296728134155, 0.06401938945055008, 0.06282275170087814, 0.06633301824331284, 0.06402420997619629, 0.06644836068153381, 0.06371164321899414, 0.06375648826360703, 0.06621740758419037, 0.06457923352718353, 0.0674906000494957, 0.0645766481757164, 0.06898735463619232, 0.06553050875663757, 0.06550167500972748, 0.06443461775779724, 0.06501512229442596, 0.06489264965057373, 0.06493634730577469, 0.06584345549345016, 0.06619178503751755, 0.06548558920621872, 0.06497921049594879, 0.06365354359149933, 0.06425238400697708, 0.06416969001293182, 0.06547810137271881, 0.06412319093942642, 0.06471693515777588, 0.06429882347583771, 0.06504251062870026, 0.06473418325185776, 0.06452527642250061, 0.06448222696781158, 0.0661381334066391, 0.0643661618232727, 0.06380781531333923, 0.0636737197637558, 0.06545069813728333, 0.06441715359687805, 0.06499837338924408, 0.0664205551147461, 0.06560884416103363, 0.06399113684892654, 0.0664541944861412, 0.06322766095399857, 0.06451916694641113, 0.06524942070245743, 0.06453372538089752, 0.0639885812997818, 0.06539753079414368, 0.06547126919031143, 0.06489678472280502, 0.06694646179676056, 0.0645296573638916, 0.06531883776187897, 0.06691976636648178, 0.06377758085727692, 0.06503892689943314, 0.06562244892120361, 0.06400170922279358, 0.0653298869729042, 0.0660788044333458, 0.06607716530561447, 0.06511255353689194, 0.0657321959733963, 0.06359764188528061, 0.06473841518163681, 0.06396932899951935, 0.06290119886398315, 0.06548167765140533, 0.0647641196846962, 0.06576545536518097, 0.06536057591438293, 0.06671711057424545, 0.06437711417675018, 0.06521191447973251, 0.06562507152557373, 0.06605929881334305, 0.0649290606379509, 0.06665751338005066, 0.06432869285345078, 0.0667174831032753, 0.06529083847999573, 0.06364688277244568, 0.06365966796875, 0.06416365504264832, 0.0654674842953682, 0.06582877784967422, 0.06416891515254974, 0.06337060034275055, 0.06488960236310959, 0.06579438596963882, 0.0669429674744606, 0.06637725234031677, 0.0645332857966423, 0.06647103279829025, 0.06464096903800964]}, "state": "available", "life": [{"dt": "Sun May 15 22:05:34 2016", "state": "available"}], "summary": "1172e3769a1dbf365d3c4bfe6f45acd5"}