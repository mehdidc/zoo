{"content": {"hp_model": {"f0": 16, "f1": 16, "f2": 16, "f3": 64, "nonlin": "very_leaky_rectify", "nbg1": 5, "nbg3": 5, "nbg2": 5, "fs0": 3, "fs1": 3, "fs2": 3, "fs3": 3, "pg2": 2, "pg3": 2, "pg1": 2}, "loss_train": [1.6443257331848145, 1.3773388862609863, 1.22828209400177, 1.1174101829528809, 1.0247019529342651, 0.9459763765335083, 0.8773635029792786, 0.8193947076797485, 0.7766005992889404, 0.7368163466453552, 0.7022585868835449, 0.671272873878479, 0.6444516777992249, 0.6207777857780457, 0.5972315073013306, 0.5780996680259705, 0.5563559532165527, 0.5364606380462646, 0.5215575098991394, 0.5054800510406494, 0.4916088283061981, 0.47827810049057007, 0.46212053298950195, 0.44848066568374634, 0.4379107654094696, 0.42675304412841797, 0.4131498634815216, 0.40129977464675903, 0.39470434188842773, 0.3816448152065277, 0.37265944480895996, 0.36383476853370667, 0.35543715953826904, 0.3452272117137909, 0.33916524052619934, 0.3319324553012848, 0.3193661570549011, 0.31712111830711365, 0.3099125623703003, 0.30218395590782166, 0.2972494661808014, 0.28561845421791077, 0.2832116186618805, 0.2786790430545807, 0.2706027626991272, 0.26684924960136414, 0.25628799200057983, 0.252552330493927, 0.2495451718568802, 0.24392110109329224, 0.2386753410100937, 0.23488286137580872, 0.22988611459732056, 0.2260468453168869, 0.22217975556850433, 0.21768948435783386, 0.21519094705581665, 0.21377742290496826, 0.2043391615152359, 0.20278693735599518, 0.1995994746685028, 0.19517798721790314, 0.19496166706085205, 0.19192232191562653, 0.1853669285774231, 0.18158572912216187, 0.17932209372520447, 0.1792222261428833, 0.1746755689382553, 0.17239297926425934, 0.16869565844535828, 0.16865219175815582, 0.16347560286521912, 0.1611441969871521, 0.1610342264175415, 0.15549618005752563, 0.15496864914894104, 0.15145938098430634, 0.15010593831539154, 0.1487513780593872, 0.14474420249462128, 0.14529192447662354, 0.1406894326210022, 0.1386379599571228, 0.13848109543323517, 0.1367514729499817, 0.1323373019695282, 0.13011257350444794, 0.1293005496263504, 0.1301783174276352, 0.12777745723724365, 0.1283651888370514, 0.12529098987579346, 0.1251974105834961, 0.1184895858168602, 0.11997578293085098, 0.11895809322595596, 0.11695770919322968, 0.11293954402208328, 0.1136847510933876, 0.11326934397220612, 0.10923198610544205, 0.11069167405366898, 0.10922928154468536, 0.10576283186674118, 0.1046711727976799, 0.10582004487514496, 0.10541665554046631, 0.10265126824378967, 0.10199422389268875, 0.10085439682006836, 0.09693745523691177, 0.09509463608264923, 0.09606492519378662, 0.09395772963762283, 0.09539861232042313, 0.09165029227733612, 0.09253410995006561, 0.08934667706489563, 0.08819528669118881, 0.08790089190006256, 0.08865728229284286, 0.08628148585557938, 0.08612684160470963, 0.08671233057975769, 0.08431891351938248, 0.08617538958787918, 0.0819592997431755, 0.0790058895945549, 0.08148697763681412, 0.07925976812839508, 0.07777556031942368, 0.0795772448182106, 0.07765796035528183, 0.07656010240316391, 0.07642026245594025, 0.07555695623159409, 0.07320530712604523, 0.07458370923995972, 0.07138155400753021, 0.07044293731451035, 0.07317841798067093, 0.07017020136117935, 0.07547759264707565, 0.0708894282579422, 0.06898321956396103, 0.06826061755418777, 0.06766427308320999, 0.06954667717218399, 0.06739358603954315, 0.06635483354330063, 0.06483404338359833, 0.06557441502809525, 0.0625062882900238, 0.06289061158895493, 0.061371538788080215, 0.06280746310949326, 0.06206584349274635, 0.06002235785126686, 0.06139532849192619, 0.060511402785778046, 0.059557557106018066, 0.0571572408080101, 0.06229887902736664, 0.057715266942977905, 0.05821341648697853, 0.05622179061174393, 0.055883944034576416, 0.0574922114610672, 0.054789621382951736, 0.05363483726978302, 0.05712655186653137, 0.054783135652542114, 0.05354788899421692, 0.05284105986356735, 0.05570521205663681, 0.05250371992588043, 0.05155476555228233, 0.05257067456841469, 0.054023921489715576, 0.052594538778066635, 0.050497911870479584, 0.04831623286008835, 0.050596319139003754, 0.05094218626618385, 0.04954179748892784, 0.04961264878511429, 0.04882955923676491, 0.04807950183749199, 0.05101388692855835, 0.04859580472111702, 0.04524807259440422, 0.04753522202372551, 0.04547569900751114, 0.04573281109333038, 0.046241190284490585, 0.0453370027244091, 0.04463471844792366, 0.043867532163858414, 0.04606947675347328, 0.045604851096868515, 0.04467038810253143, 0.04432382434606552, 0.043517984449863434, 0.042906563729047775, 0.04177159070968628, 0.0423688068985939, 0.042980603873729706, 0.041181907057762146, 0.04239902272820473, 0.03975539281964302, 0.04273639991879463, 0.03968679904937744, 0.04013233259320259, 0.04466332495212555, 0.04095587134361267, 0.0398547388613224, 0.037990670651197433, 0.03876369073987007, 0.03843449056148529, 0.04026225954294205, 0.03989177197217941, 0.03976232931017876, 0.03814556077122688, 0.036631904542446136, 0.037576962262392044, 0.03696826100349426, 0.03471450135111809, 0.03548659756779671, 0.03699665516614914, 0.037527501583099365, 0.03698842227458954, 0.0364563949406147, 0.03586602583527565, 0.035724177956581116, 0.035460639744997025, 0.03680196776986122, 0.03655780106782913, 0.03497597575187683, 0.03720400482416153, 0.03498225659132004, 0.03428597003221512, 0.0362236313521862, 0.031142117455601692, 0.0331110879778862, 0.03272464871406555, 0.033429332077503204, 0.03288592770695686, 0.03167679160833359, 0.032170601189136505, 0.032618749886751175, 0.03357306867837906, 0.031715892255306244, 0.0323234498500824, 0.028932908549904823, 0.030882498249411583, 0.03027516044676304, 0.031520649790763855, 0.03331191837787628, 0.03045404516160488, 0.03248199075460434, 0.031413484364748, 0.030873851850628853, 0.031545862555503845, 0.030292436480522156, 0.028545252978801727, 0.030461296439170837, 0.02915838547050953, 0.029935017228126526, 0.027832133695483208, 0.029421884566545486, 0.027400795370340347, 0.02848862111568451, 0.028520161285996437, 0.028611939400434494, 0.029670212417840958, 0.028681976720690727, 0.02682015486061573, 0.026926251128315926, 0.02949303574860096, 0.02720624953508377], "moving_avg_accuracy_train": [0.04811764705882352, 0.10050823529411763, 0.1510150588235294, 0.2004217882352941, 0.2460337270588235, 0.29095035435294114, 0.3340412012705882, 0.3761076693788235, 0.4149321965585882, 0.45222250631449407, 0.48558143215363286, 0.5182162301147402, 0.5463522541620897, 0.573373499334116, 0.5976408552830573, 0.6213991226959281, 0.6424897986616294, 0.6620455246778193, 0.6795868545629785, 0.6965622867537395, 0.713277822784248, 0.7272112169764114, 0.7408218599846527, 0.7538408504567756, 0.7651367654110981, 0.7770607359288119, 0.7873381917476954, 0.7973831961023377, 0.8061978176685746, 0.8153309770781877, 0.8233319970174277, 0.831824679668626, 0.839319858760587, 0.8452019905315872, 0.8503688503019579, 0.8563743182129385, 0.8618404158034094, 0.8677410801054215, 0.8737034426831147, 0.8778907454736268, 0.8814028473968524, 0.8857213861865788, 0.8900716005090974, 0.8929938522228935, 0.8967768199417807, 0.8999861967711321, 0.9019475770940188, 0.9059810546787346, 0.9097994197990964, 0.9126288895838925, 0.9157589418019739, 0.9181336358570706, 0.9211885075654812, 0.9221261273971684, 0.9247323381868633, 0.9270991043681769, 0.9294009586372416, 0.9314843921852822, 0.9339265412020481, 0.934232710611255, 0.9356376748442472, 0.9363868485362931, 0.9388234578003108, 0.9413787590791033, 0.9430338243476635, 0.944939853677603, 0.9456741036039603, 0.9472690461847407, 0.948269200389796, 0.9499363979978752, 0.9507827581980877, 0.9519421294371024, 0.9528796811992746, 0.9542881836675824, 0.9554805417714124, 0.9566030758295653, 0.9573545329524911, 0.9584308443631243, 0.9584277599268118, 0.9600320427576601, 0.9604029561289529, 0.9607767781631164, 0.9620261591703342, 0.9620094256062419, 0.9618673065750295, 0.9621417523881148, 0.9636193418551857, 0.9642832900226084, 0.9643396669027005, 0.9645433472712539, 0.9654537184264814, 0.9660683465838333, 0.9668732766313324, 0.9675835960270226, 0.9679405305419674, 0.9680900068995353, 0.9682645356213465, 0.9688074938239177, 0.9695455679709377, 0.9701110111738439, 0.9705304982917535, 0.9714939190508135, 0.9723798212633792, 0.9732594861958648, 0.9739405963998078, 0.9743277132304153, 0.9750172948485503, 0.9754779183048716, 0.9759018911802668, 0.9756128785328284, 0.976098649503075, 0.9757687845527676, 0.9760766119798437, 0.9765889507818594, 0.9766900557036734, 0.9769928148391884, 0.9773852980611519, 0.9773220623726838, 0.977902797311886, 0.9782513411101091, 0.9784991481755688, 0.9784162921815414, 0.9786170159045637, 0.9790541378435191, 0.9792616652356378, 0.9789731457708976, 0.9789628900173373, 0.979384248074427, 0.9799681762081609, 0.9802160644696978, 0.9802156344933162, 0.9806646592792787, 0.9809228992337037, 0.9813411975456274, 0.9819600189675353, 0.9822557817766642, 0.982486674187233, 0.9827297714743921, 0.9829179707975411, 0.9830402913648457, 0.9830656739930671, 0.9831449889467017, 0.9828210782873256, 0.9830354410468283, 0.9834636616480278, 0.9834467072479309, 0.9840220365231379, 0.984433950517883, 0.9845034966425653, 0.9846931469783088, 0.9847508911040074, 0.985092272581842, 0.9852912806177754, 0.9853833290265861, 0.9855814667121628, 0.9859174376880053, 0.986226870389793, 0.9864677127625784, 0.986503294427497, 0.9863823767494532, 0.986374727309802, 0.9865325486964689, 0.9869051761797633, 0.9870993644441398, 0.9869117809409023, 0.9869217793174002, 0.9869166602091896, 0.9870720530118, 0.9871060241812083, 0.9871271864689698, 0.9875627031161904, 0.9876770210398655, 0.9879046130535261, 0.9878153282187616, 0.9877279130439443, 0.9878186511513145, 0.9880320801538302, 0.9879959309619766, 0.9881186908069554, 0.9882338805497892, 0.9883728454359868, 0.9885355608923881, 0.9885737695090316, 0.9888810984404814, 0.9891224003611392, 0.9892007485603194, 0.9892947913513462, 0.9893982533926822, 0.9893972515828258, 0.9893892911304256, 0.9894927149585595, 0.9895269728744682, 0.9896707461752566, 0.9897930833224369, 0.9899808338137226, 0.9896886327852915, 0.9898538871538212, 0.9902473219678508, 0.9904484721240069, 0.9905565660880767, 0.9908962035969161, 0.9905759950019304, 0.9906501602076198, 0.9905474971280341, 0.9907609827093484, 0.9909837079678254, 0.9908923959945724, 0.9908055093362915, 0.990677899579133, 0.9907654037388667, 0.9910135692473329, 0.9910980946755407, 0.991310638149163, 0.9909936919813055, 0.9911178521949396, 0.9911754787401515, 0.991010872042607, 0.9911356671912874, 0.9911726887074528, 0.9912248316014134, 0.9912576425589191, 0.9915789371265566, 0.9915433963550775, 0.9917161155430992, 0.9916621510476129, 0.9915241712369692, 0.991750577642684, 0.9919637551725333, 0.9918567914199858, 0.9919464063956343, 0.9921470598737179, 0.9919747068275225, 0.9920078243800644, 0.9919482184126461, 0.9920522201007933, 0.9919458216201258, 0.9919394747522308, 0.9921008213946547, 0.9921989745493068, 0.992228488859082, 0.9922832870319973, 0.9921137818582093, 0.9923094624959178, 0.9925373397757378, 0.9926647822687522, 0.9925700687477593, 0.9924495324612187, 0.9921598733327439, 0.992346238940646, 0.9924410268112873, 0.9926981006007468, 0.9928894670112604, 0.9929652261924873, 0.9929792918085327, 0.9931801861570912, 0.993236285188441, 0.9932773625519498, 0.9933237439438136, 0.9933490166082558, 0.9934870561239008, 0.9933759975703342, 0.9934548684015361, 0.9933823227378531, 0.9934487963464208, 0.9933980343588374, 0.9934488191582478, 0.9935321725365406, 0.9937483670475924, 0.9937735303428331, 0.9937914714261968, 0.9938193831071066, 0.9937856800905136, 0.9937694650226387, 0.9938136949909632, 0.9938652666683375, 0.9939399164720919, 0.9939388660013533, 0.9939614499894533, 0.9939323638140374, 0.9939791274326336, 0.9940070970423114], "dataset": "Cifar10", "nb_examples_train": 42500, "moving_avg_accuracy_valid": [0.04857333333333332, 0.10118266666666664, 0.15210439999999997, 0.20157395999999997, 0.2468298973333333, 0.29054690759999996, 0.33205221683999997, 0.3722603284893333, 0.4092476289737333, 0.4448828660763599, 0.4759145794687239, 0.5060164548551849, 0.5325348093696664, 0.5573879950993663, 0.5792091955894296, 0.6001816093638199, 0.6190167817607712, 0.6360751035846941, 0.651160926559558, 0.6654981672369356, 0.6792950171799087, 0.6907521821285845, 0.7017836305823927, 0.7125519341908201, 0.7216300741050714, 0.7312937333612309, 0.7393510266917744, 0.747135924022597, 0.7535423316203372, 0.7600414317916369, 0.7657972886124731, 0.7721242264178925, 0.7772984704427699, 0.7811686233984929, 0.7845584277253103, 0.7882759182861125, 0.7915949931241679, 0.7957554938117511, 0.799739944430576, 0.8024859499875184, 0.8046640216554333, 0.8072109528232232, 0.8098365242075676, 0.8113595384534774, 0.8133302512747963, 0.81481055948065, 0.8155561701992516, 0.8180538865126598, 0.8205018311947271, 0.8219183147419211, 0.8233798166010624, 0.8248685016076228, 0.8262616514468605, 0.8255954863021744, 0.8266759376719569, 0.8276216772380945, 0.8289128428476185, 0.8295282252295233, 0.831295402706571, 0.8304725291025805, 0.8313052761923224, 0.8314947485730901, 0.8329452737157812, 0.8346907463442031, 0.8357283383764494, 0.8371555045388045, 0.8374532874182573, 0.8386146253430983, 0.8390331628087885, 0.8399031798612429, 0.8402728618751186, 0.8412055756876067, 0.841645018118846, 0.8426005163069613, 0.8437004646762651, 0.8446770848753054, 0.8453160430544415, 0.8458644387489973, 0.8459446615407643, 0.8467768620533546, 0.8467925091813524, 0.8473399249298839, 0.8484725991035621, 0.8484520058598725, 0.8476068052738852, 0.8473127914131634, 0.8484481789385138, 0.8490033610446623, 0.8492496916068628, 0.8493647224461766, 0.8503082502015589, 0.8505707585147363, 0.8510603493299294, 0.851660981063603, 0.8515215496239092, 0.851356061328185, 0.8511271218620332, 0.8516010763424966, 0.8522143020415802, 0.8528195385040889, 0.85357758465368, 0.854419826188312, 0.8549511769028142, 0.8557493925458661, 0.8561211199579462, 0.8563356746288182, 0.8567021071659364, 0.8570052297826761, 0.8574380401377418, 0.8568942361239676, 0.8572981458449043, 0.8564083312604139, 0.8565674981343725, 0.8566840816542687, 0.8563890068221751, 0.8567634394732909, 0.8568204288592952, 0.8566983859733657, 0.8571352140426958, 0.8577283593050928, 0.8580355233745836, 0.8580853043704586, 0.8580634406000794, 0.8586570965400715, 0.8586980535527311, 0.8580149148641246, 0.8580400900443788, 0.8583560810399409, 0.8591871396026135, 0.8594684256423522, 0.8593349164114502, 0.8596280914369718, 0.8598252822932747, 0.8601894207306139, 0.8607171453242192, 0.8610587641251306, 0.8612462210459509, 0.8613882656080225, 0.8612761057138869, 0.8610951618091649, 0.8609723122949151, 0.8612884143987569, 0.8608662396255479, 0.8610196156629931, 0.8613043207633604, 0.8611605553536911, 0.8617511664849886, 0.8618960498364897, 0.8617464448528408, 0.8617984670342234, 0.8620052869974677, 0.8621514249643877, 0.8626429491346155, 0.8622986542211539, 0.8621621221323719, 0.8624925765858014, 0.8626166522605545, 0.8625949870344991, 0.8627754883310492, 0.8626579394979443, 0.8627788122148166, 0.8630342643266683, 0.863677504560668, 0.8639897541046012, 0.863990778694141, 0.8639383674913936, 0.8637578640755876, 0.8638087443346956, 0.8638145365678926, 0.8638064162444367, 0.8641191079533262, 0.8645338638246602, 0.8647738107755275, 0.8644030963646414, 0.8644827867281772, 0.8645811747220262, 0.8649497239164903, 0.8646814181915079, 0.8649066097056904, 0.8650692820684548, 0.8653223538616093, 0.8656034518087816, 0.8654431066279034, 0.8655654626317797, 0.8654889163686017, 0.8657266913984082, 0.866060688925234, 0.8662012866993772, 0.8662744913627728, 0.8662603755598288, 0.8662476713371793, 0.866049570870128, 0.8664979471164486, 0.8667281524048037, 0.8672553371643233, 0.866809803447891, 0.8668088231031019, 0.8669812741261251, 0.8672031467135126, 0.867229498708828, 0.8672132155046118, 0.8669318939541506, 0.8669320378920689, 0.8669321674361953, 0.866932284025909, 0.8672790556233182, 0.8671511500609864, 0.8667027017215544, 0.8665390982160656, 0.8668185217277923, 0.8667633362216797, 0.8668070025995117, 0.866899635672894, 0.8669830054389378, 0.8671913715617108, 0.867525567738873, 0.8670530109649858, 0.8671477098684872, 0.8672862722149719, 0.867130978326808, 0.8668845471607939, 0.8672360924447146, 0.8674191498669098, 0.8678105682135522, 0.8677228447255303, 0.8673238935863106, 0.8674981708943462, 0.8680683538049115, 0.868048185091087, 0.868230033248645, 0.8689803632571138, 0.8688689935980691, 0.8689687609049289, 0.8691385514811026, 0.8696646963329924, 0.8696982266996931, 0.8696084040297237, 0.869714230293418, 0.8697961405974095, 0.8700831932043351, 0.870048207217235, 0.8697233864955115, 0.870137714512627, 0.870510609728031, 0.8703795487552278, 0.8701949272130384, 0.8696821011584012, 0.8689938910425611, 0.8690678352716383, 0.8688677184111411, 0.869300946570027, 0.869437518579691, 0.8694537667217219, 0.869321723382883, 0.8695095510445947, 0.8696919292734685, 0.8697627363461217, 0.8695997960448428, 0.8697198164403585, 0.8700278347963226, 0.8699450513166904, 0.869617212851688, 0.8695488248998525, 0.8696472757432006, 0.8691358815022138, 0.8691689600186591, 0.8693053973501265, 0.8693481909484472, 0.8697733718536025, 0.8694760346682422, 0.8698350978680847, 0.8699982547479428, 0.8701050959398152, 0.8702812530125004, 0.8703731277112503, 0.8706424816067919, 0.8706049001127794, 0.8707310767681681, 0.870764635758018, 0.8706215055155495, 0.8707326882973279], "moving_var_accuracy_train": [0.020837771626297574, 0.043456958084429065, 0.06206971528326643, 0.0778319679554458, 0.0887728118290737, 0.09805306131347441, 0.10495914497484782, 0.11038952012927364, 0.11291666331293687, 0.11414010179686587, 0.11274145301544976, 0.11105257805556543, 0.10707204289274615, 0.10293616781929234, 0.09794269212013668, 0.09322852034227629, 0.08790901782226056, 0.08255995382021712, 0.07707324272545524, 0.07195940613547784, 0.06727814782501508, 0.062297588305941495, 0.05773507590322741, 0.053487015329123734, 0.04928669304810893, 0.04563765339946379, 0.04202452294249933, 0.03873018966061243, 0.035556448674754895, 0.03275153521449205, 0.030052528573655896, 0.027696406643816007, 0.025432365366019522, 0.023200524096960252, 0.021120739646244304, 0.01933325648508824, 0.01766883484239638, 0.01621531191100209, 0.01491372862747276, 0.013580157306660356, 0.012333155315266442, 0.011267687779245151, 0.010311238283187248, 0.009356970450577585, 0.008550071008379104, 0.007787764804236189, 0.007043611438751637, 0.006485670767714114, 0.005968322900674266, 0.0054435437039745144, 0.004987364375568307, 0.004539380484709281, 0.00416943260663198, 0.0037604015245077393, 0.0034454923841798655, 0.0031513573851749705, 0.0028839084443415745, 0.002634583858049324, 0.0024248022986252072, 0.002183165726126894, 0.0019826144739780896, 0.0017894043775679635, 0.0016638975221606412, 0.0015562738515731618, 0.0014252996358045957, 0.001315466202483444, 0.0011887716888243016, 0.0010927890964657506, 0.0009925129627241845, 0.0009182775972312317, 0.000832896767804642, 0.0007617043660528694, 0.0006934449592083506, 0.0006419553761165791, 0.0005905552991348428, 0.0005428405136267771, 0.0004936386525324631, 0.0004547008035531507, 0.00040923080882156193, 0.00039147123855159526, 0.00035356230525746994, 0.0003194637609507585, 0.0003015659609664511, 0.00027141188497931107, 0.00024445247685267484, 0.00022068511370628777, 0.00021826603803444804, 0.0002004068787522177, 0.0001803947960504762, 0.00016272868767823532, 0.00015391479967284495, 0.00014192322965184812, 0.00013356211811896426, 0.00012474688910211232, 0.00011341882042353098, 0.00010227802701442398, 9.232436678561496e-05, 8.574516259470791e-05, 8.207342735373077e-05, 7.674361875977335e-05, 7.06529818626259e-05, 7.194129970725197e-05, 7.181057430858607e-05, 7.159381041873175e-05, 6.860962936609522e-05, 6.309740139434174e-05, 6.106736652753397e-05, 5.6870195591402194e-05, 5.28009530238998e-05, 4.827261251492425e-05, 4.556911218324044e-05, 4.199149893388876e-05, 3.864516856424296e-05, 3.714307114027589e-05, 3.3520763873183556e-05, 3.099365533310541e-05, 2.9280677515500616e-05, 2.6388598534614905e-05, 2.6785016307645178e-05, 2.5199859690399154e-05, 2.323254879658484e-05, 2.0971079958642886e-05, 1.9236582079634106e-05, 1.9032604177315745e-05, 1.7516952325900382e-05, 1.6514448427116367e-05, 1.4863950208734545e-05, 1.4975438698331563e-05, 1.6546643416790567e-05, 1.5445016386981384e-05, 1.3900516412200444e-05, 1.4325074096658438e-05, 1.3492757553545758e-05, 1.3718243098015498e-05, 1.5792878358122375e-05, 1.5000871275684104e-05, 1.3980585895440445e-05, 1.3114393925113219e-05, 1.2121725399705649e-05, 1.104421375040681e-05, 9.94559087570492e-06, 9.007649544964763e-06, 9.051147627785107e-06, 8.55959539896127e-06, 9.353991808690289e-06, 8.42117969296507e-06, 1.055809569785943e-05, 1.102934437967474e-05, 9.969939912832192e-06, 9.296651170177486e-06, 8.396995509633926e-06, 8.60616777934708e-06, 8.101988786707207e-06, 7.368046094117714e-06, 6.984568366717089e-06, 7.3019999995226755e-06, 7.433537371991176e-06, 7.2122290715522115e-06, 6.502400658302426e-06, 5.983750356243741e-06, 5.385901945962164e-06, 5.071480062170991e-06, 5.81399322770996e-06, 5.571975643133397e-06, 5.331466215001759e-06, 4.799219301294947e-06, 4.3195332185853e-06, 4.104902204654955e-06, 3.7047983473481226e-06, 3.3383490944230242e-06, 4.711586935037725e-06, 4.358045530594377e-06, 4.388424099673327e-06, 4.021327725176094e-06, 3.6879676677535982e-06, 3.393271538140506e-06, 3.463911836359716e-06, 3.129281529368766e-06, 2.9519831922848973e-06, 2.7762029647436203e-06, 2.672383824632325e-06, 2.6434323199360946e-06, 2.3922281734148058e-06, 3.0030650050278882e-06, 3.2267980567430934e-06, 2.9593642139018094e-06, 2.7430242114087625e-06, 2.565061336244537e-06, 2.3085642352269796e-06, 2.0782781309260287e-06, 1.966718711866278e-06, 1.7806092839013522e-06, 1.7885852136877452e-06, 1.7444240905407172e-06, 1.8872339042889114e-06, 2.466943483005662e-06, 2.46603019156838e-06, 3.6125457484264303e-06, 3.615443641478379e-06, 3.359058022945649e-06, 4.061334957346704e-06, 4.578003360336637e-06, 4.169707323917413e-06, 3.847593962715483e-06, 3.873019407305603e-06, 3.9321763334475195e-06, 3.6139995882371915e-06, 3.3205432518982455e-06, 3.135047177807035e-06, 2.890455261762748e-06, 3.1556848119173928e-06, 2.9044172628492105e-06, 3.0205480901796153e-06, 3.6225871410375224e-06, 3.3990702547808967e-06, 3.0890505977203605e-06, 3.0240038218370777e-06, 2.861767901861017e-06, 2.58792644560756e-06, 2.353603733562086e-06, 2.127932390597859e-06, 2.844210944278366e-06, 2.571158167786556e-06, 2.582529612205651e-06, 2.350486151942996e-06, 2.2867833900559854e-06, 2.519443795988812e-06, 2.6765013494835337e-06, 2.5118224137664675e-06, 2.3329177671341216e-06, 2.461982354824248e-06, 2.4831342721370654e-06, 2.244691795500625e-06, 2.0521984581173028e-06, 1.9443257725426805e-06, 1.8517789254837216e-06, 1.6669635775240307e-06, 1.7345618709650791e-06, 1.6478120597821313e-06, 1.490870704137479e-06, 1.3688091915174542e-06, 1.490516307833697e-06, 1.6860828848163206e-06, 1.9848270882581024e-06, 1.932518680663967e-06, 1.8200026721273754e-06, 1.768763372271705e-06, 2.3470087314235996e-06, 2.424897116559659e-06, 2.263270068690057e-06, 2.6317254608646853e-06, 2.6981428424337815e-06, 2.479983640051946e-06, 2.2337658500393774e-06, 2.3736161185800904e-06, 2.16457841858745e-06, 1.963306724864248e-06, 1.7863371539788731e-06, 1.6134518066930423e-06, 1.6236007969393148e-06, 1.5722467381280249e-06, 1.471007536445492e-06, 1.3712726426738365e-06, 1.2739140441304699e-06, 1.1697136541680441e-06, 1.0759541514116095e-06, 1.0308888073259665e-06, 1.3484605260738152e-06, 1.2193131963127978e-06, 1.1002788189319032e-06, 9.97262494419572e-07, 9.077592849248346e-07, 8.193497122680378e-07, 7.550213519229967e-07, 7.034559578954585e-07, 6.832637009111594e-07, 6.149472622189975e-07, 5.580428646635904e-07, 5.098526286001646e-07, 4.785488899580951e-07, 4.377346925520501e-07], "duration": 156056.048818, "accuracy_train": [0.4811764705882353, 0.5720235294117647, 0.6055764705882353, 0.6450823529411764, 0.6565411764705882, 0.6952, 0.7218588235294118, 0.7547058823529412, 0.7643529411764706, 0.7878352941176471, 0.7858117647058823, 0.8119294117647059, 0.7995764705882353, 0.816564705882353, 0.8160470588235295, 0.8352235294117647, 0.8323058823529412, 0.8380470588235294, 0.8374588235294118, 0.8493411764705883, 0.8637176470588235, 0.8526117647058824, 0.8633176470588235, 0.8710117647058824, 0.8668, 0.8843764705882353, 0.879835294117647, 0.8877882352941177, 0.8855294117647059, 0.8975294117647059, 0.8953411764705882, 0.9082588235294118, 0.9067764705882353, 0.8981411764705882, 0.8968705882352941, 0.9104235294117647, 0.911035294117647, 0.9208470588235295, 0.927364705882353, 0.9155764705882353, 0.9130117647058823, 0.9245882352941176, 0.9292235294117647, 0.9192941176470588, 0.9308235294117647, 0.9288705882352941, 0.9196, 0.9422823529411765, 0.9441647058823529, 0.9380941176470589, 0.9439294117647059, 0.9395058823529412, 0.9486823529411764, 0.930564705882353, 0.9481882352941177, 0.9484, 0.9501176470588235, 0.9502352941176471, 0.9559058823529412, 0.9369882352941177, 0.9482823529411765, 0.9431294117647059, 0.9607529411764706, 0.9643764705882353, 0.9579294117647059, 0.9620941176470589, 0.9522823529411765, 0.9616235294117647, 0.9572705882352941, 0.9649411764705882, 0.9584, 0.9623764705882353, 0.9613176470588235, 0.966964705882353, 0.9662117647058823, 0.9667058823529412, 0.9641176470588235, 0.9681176470588235, 0.9584, 0.9744705882352941, 0.9637411764705882, 0.9641411764705883, 0.9732705882352941, 0.9618588235294118, 0.9605882352941176, 0.9646117647058824, 0.9769176470588236, 0.9702588235294117, 0.9648470588235294, 0.9663764705882353, 0.9736470588235294, 0.9716, 0.9741176470588235, 0.9739764705882353, 0.9711529411764706, 0.9694352941176471, 0.969835294117647, 0.9736941176470588, 0.9761882352941177, 0.9752, 0.9743058823529411, 0.9801647058823529, 0.9803529411764705, 0.9811764705882353, 0.9800705882352941, 0.9778117647058824, 0.9812235294117647, 0.9796235294117647, 0.9797176470588236, 0.9730117647058824, 0.9804705882352941, 0.9728, 0.9788470588235294, 0.9812, 0.9776, 0.9797176470588236, 0.9809176470588236, 0.9767529411764706, 0.9831294117647059, 0.9813882352941177, 0.9807294117647058, 0.9776705882352941, 0.9804235294117647, 0.9829882352941176, 0.9811294117647059, 0.9763764705882353, 0.9788705882352942, 0.9831764705882353, 0.9852235294117647, 0.9824470588235295, 0.9802117647058823, 0.9847058823529412, 0.9832470588235294, 0.9851058823529412, 0.9875294117647059, 0.9849176470588236, 0.9845647058823529, 0.9849176470588236, 0.9846117647058823, 0.9841411764705882, 0.9832941176470589, 0.9838588235294118, 0.9799058823529412, 0.984964705882353, 0.9873176470588235, 0.9832941176470589, 0.9892, 0.9881411764705882, 0.9851294117647059, 0.9864, 0.9852705882352941, 0.988164705882353, 0.9870823529411765, 0.9862117647058823, 0.9873647058823529, 0.9889411764705882, 0.9890117647058824, 0.9886352941176471, 0.9868235294117647, 0.9852941176470589, 0.9863058823529411, 0.9879529411764706, 0.9902588235294117, 0.9888470588235294, 0.9852235294117647, 0.9870117647058824, 0.9868705882352942, 0.9884705882352941, 0.9874117647058823, 0.9873176470588235, 0.9914823529411765, 0.9887058823529412, 0.9899529411764706, 0.9870117647058824, 0.9869411764705882, 0.9886352941176471, 0.9899529411764706, 0.9876705882352941, 0.9892235294117647, 0.9892705882352941, 0.9896235294117647, 0.99, 0.9889176470588236, 0.9916470588235294, 0.9912941176470588, 0.9899058823529412, 0.9901411764705882, 0.9903294117647059, 0.9893882352941177, 0.9893176470588235, 0.9904235294117647, 0.989835294117647, 0.990964705882353, 0.9908941176470588, 0.9916705882352941, 0.9870588235294118, 0.9913411764705883, 0.9937882352941176, 0.9922588235294117, 0.9915294117647059, 0.9939529411764706, 0.9876941176470588, 0.9913176470588235, 0.9896235294117647, 0.9926823529411765, 0.9929882352941176, 0.9900705882352941, 0.9900235294117647, 0.9895294117647059, 0.9915529411764706, 0.9932470588235294, 0.9918588235294118, 0.9932235294117647, 0.9881411764705882, 0.9922352941176471, 0.9916941176470588, 0.9895294117647059, 0.9922588235294117, 0.9915058823529411, 0.9916941176470588, 0.9915529411764706, 0.9944705882352941, 0.9912235294117647, 0.9932705882352941, 0.9911764705882353, 0.9902823529411765, 0.9937882352941176, 0.9938823529411764, 0.9908941176470588, 0.9927529411764706, 0.9939529411764706, 0.9904235294117647, 0.9923058823529411, 0.9914117647058823, 0.9929882352941176, 0.9909882352941176, 0.9918823529411764, 0.9935529411764706, 0.9930823529411764, 0.9924941176470589, 0.9927764705882353, 0.9905882352941177, 0.9940705882352942, 0.9945882352941177, 0.9938117647058824, 0.9917176470588235, 0.9913647058823529, 0.9895529411764706, 0.9940235294117648, 0.9932941176470588, 0.9950117647058824, 0.9946117647058823, 0.9936470588235294, 0.9931058823529412, 0.9949882352941176, 0.9937411764705882, 0.9936470588235294, 0.9937411764705882, 0.9935764705882353, 0.9947294117647059, 0.9923764705882353, 0.994164705882353, 0.9927294117647059, 0.9940470588235294, 0.9929411764705882, 0.9939058823529412, 0.9942823529411765, 0.9956941176470588, 0.994, 0.9939529411764706, 0.9940705882352942, 0.9934823529411765, 0.9936235294117647, 0.9942117647058824, 0.9943294117647059, 0.9946117647058823, 0.9939294117647058, 0.994164705882353, 0.9936705882352941, 0.9944, 0.9942588235294118], "end": "2016-02-07 08:37:23.859000", "epoch": [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0], "moving_var_accuracy_valid": [0.021234318399999997, 0.04402056414399999, 0.06295571406064, 0.0786852789539184, 0.08924964983379391, 0.09752527773031708, 0.10327696621325763, 0.10749949977357916, 0.10906209337033092, 0.1095847151435416, 0.10729294875377986, 0.10471875999444008, 0.10057589213039757, 0.0960774304855925, 0.09075517055448114, 0.08563823275475119, 0.08026728295228197, 0.07485943174809048, 0.06942172706674182, 0.06432956259223709, 0.05960978394815363, 0.05483020521128876, 0.05044242038506113, 0.04644178560998445, 0.04253932066771052, 0.039125865392911886, 0.035797558635950494, 0.03276324441041848, 0.029856298494152098, 0.02725081337206617, 0.024823901024537263, 0.02270178220002634, 0.020672559191084523, 0.018740106027082294, 0.016969512384741054, 0.015396938770893837, 0.013956391213829966, 0.012716539986189393, 0.01158776860817514, 0.010496856666026455, 0.00948986696513897, 0.008599261993986213, 0.007801378420436183, 0.007042116729931765, 0.006372858438155586, 0.005755294405798888, 0.005184768383312242, 0.0047224388260214065, 0.004304126841917423, 0.0038917719884809213, 0.0035218186787912883, 0.00318958245835098, 0.0028880920107869947, 0.0026032767937082466, 0.002353455490799607, 0.00212615975166227, 0.0019285477541769976, 0.0017391012380429274, 0.0015932973603570955, 0.0014400617130346839, 0.0013022967511704788, 0.001172390174101095, 0.0010740873653971937, 0.0009940987011266042, 0.0009043782060423738, 0.0008322716147328777, 0.0007498425250492472, 0.0006869966245253871, 0.0006198735245645256, 0.0005646985391521274, 0.0005094586683593636, 0.00046634239702748274, 0.00042144614417809634, 0.0003875183208477131, 0.00035965546649915003, 0.0003322740029677941, 0.0003027210106631793, 0.00027515555013712793, 0.0002476979163902851, 0.0002291611439896556, 0.00020624723308422128, 0.0001883194857914611, 0.00018103409426577506, 0.0001629345015743685, 0.00015307032769191036, 0.00013854129227538846, 0.00013628910654233986, 0.00012543424042699448, 0.00011343692509716087, 0.00010221232143338377, 0.00010000329091663704, 9.062315735535875e-05, 8.371813411671535e-05, 7.859314702050705e-05, 7.09088024558317e-05, 6.4064399594444e-05, 5.81296791474566e-05, 5.433840687867244e-05, 5.2288978012955186e-05, 5.035688079160942e-05, 5.049289839663771e-05, 5.1827945780907256e-05, 4.918615343903385e-05, 5.000187201044547e-05, 4.624531622942657e-05, 4.203508796762102e-05, 3.9040034409188686e-05, 3.596298085528188e-05, 3.4052606000822696e-05, 3.3308850649312654e-05, 3.1446253148384874e-05, 3.5427557786493234e-05, 3.211280885173571e-05, 2.9023853420564377e-05, 2.6905090487323174e-05, 2.5476379730585448e-05, 2.2957971868581157e-05, 2.079622487577709e-05, 2.0433971247591327e-05, 2.1556965843569197e-05, 2.025041714948716e-05, 1.8247678762491186e-05, 1.6427213106338816e-05, 1.7956338171495586e-05, 1.617580164631995e-05, 1.8758327692526318e-05, 1.6888199030581172e-05, 1.6098031911010117e-05, 2.070415373123183e-05, 1.934583488347532e-05, 1.7571673827751895e-05, 1.6588070805283248e-05, 1.527922182903987e-05, 1.4944670860066407e-05, 1.5956642994322518e-05, 1.541130934111563e-05, 1.4186439281474815e-05, 1.2949385271854285e-05, 1.1767665321341413e-05, 1.0885565059111735e-05, 9.932836581563324e-06, 9.838837783886017e-06, 1.045903785770425e-05, 9.624851951695394e-06, 9.391879704102551e-06, 8.638708170848927e-06, 1.0914230929477273e-05, 1.0011728506409365e-05, 9.211990515961902e-06, 8.315148230567934e-06, 7.868603882278618e-06, 7.273950242430084e-06, 8.72091930745113e-06, 8.915678263625491e-06, 8.191879538667672e-06, 8.355492896923318e-06, 7.658496564820147e-06, 6.896871346518435e-06, 6.5004106743729385e-06, 5.974729160414601e-06, 5.5087481675298185e-06, 5.545175383822135e-06, 8.714479833165524e-06, 8.720529849027383e-06, 7.848486312178171e-06, 7.088360088521245e-06, 6.6727574277279364e-06, 6.028780891857124e-06, 5.426204752360099e-06, 4.884177734001349e-06, 5.275744903876303e-06, 6.2963723087432065e-06, 6.184905930943566e-06, 6.803277907796766e-06, 6.180105103381383e-06, 5.649216369045827e-06, 6.306751310802079e-06, 6.323967838246681e-06, 6.147972016960453e-06, 5.771335493730259e-06, 5.770609936771262e-06, 5.904693446235008e-06, 5.545619294889149e-06, 5.125796290561502e-06, 4.665950635163947e-06, 4.708188254842881e-06, 5.241358560690635e-06, 4.895132311467956e-06, 4.453849385006945e-06, 4.010257749541022e-06, 3.6106845500450843e-06, 3.6028102504539412e-06, 5.051900549788992e-06, 5.02366076789017e-06, 7.022608627129062e-06, 8.106850396718233e-06, 7.296174006729559e-06, 6.834210804132158e-06, 6.593836729025092e-06, 5.940702905036513e-06, 5.3490188991887604e-06, 5.526393342054856e-06, 4.97375419431249e-06, 4.476378925916368e-06, 4.028741155663184e-06, 4.708121907023715e-06, 4.384548212200122e-06, 5.756046609233729e-06, 5.421336911384285e-06, 5.5819007103973695e-06, 5.051119600121729e-06, 4.5631684130862825e-06, 4.184079548335675e-06, 3.828226254514106e-06, 3.836151599137322e-06, 4.457720202692417e-06, 6.02173732334416e-06, 5.500274531929087e-06, 5.1230427935060755e-06, 4.8277842394648854e-06, 4.891560691766149e-06, 5.514661402410891e-06, 5.264785440556589e-06, 6.117181795294983e-06, 5.574722308922017e-06, 6.449708181392028e-06, 6.078090584118064e-06, 8.396258489213516e-06, 7.560293633448171e-06, 7.101883041768385e-06, 1.145865083207116e-05, 1.0424414557465669e-05, 9.471554741381537e-06, 8.783858825060205e-06, 1.0396928589084793e-05, 9.367354299596103e-06, 8.503231878000223e-06, 7.75370147298766e-06, 7.038715006788773e-06, 7.076436298395586e-06, 6.379808842196393e-06, 6.691404469325517e-06, 7.567273374294862e-06, 8.062003611905923e-06, 7.410396058044178e-06, 6.9761224768034385e-06, 8.645425289955628e-06, 1.2043581232862075e-05, 1.0888432850700295e-05, 1.0160010386327436e-05, 1.0833189086559604e-05, 9.917737402316543e-06, 8.928339681159997e-06, 8.192424703029423e-06, 7.690695307263226e-06, 7.2209821418414056e-06, 6.544006701496633e-06, 6.128551907374509e-06, 5.645340774694816e-06, 5.934684465723089e-06, 5.402893959651016e-06, 5.829907095901914e-06, 5.2890085939179735e-06, 4.847340851529725e-06, 6.716323393806149e-06, 6.0545387486775295e-06, 5.616621182571366e-06, 5.071440692829321e-06, 6.1913058425244e-06, 6.367859874453531e-06, 6.89141132033804e-06, 6.4418516953098005e-06, 5.900401888305225e-06, 5.589643527787701e-06, 5.106647817442497e-06, 5.248946725089341e-06, 4.736763370810329e-06, 4.40637196901508e-06, 3.975870624311256e-06, 3.762659958661876e-06, 3.497648461471512e-06], "accuracy_test": 0.8511, "start": "2016-02-05 13:16:27.811000", "learning_rate_per_epoch": [0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774, 0.004286088049411774], "accuracy_train_first": 0.4811764705882353, "accuracy_train_last": 0.9942588235294118, "batch_size_eval": 1024, "accuracy_train_std": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "accuracy_test_std": 0, "error_valid": [0.5142666666666666, 0.42533333333333334, 0.38959999999999995, 0.35319999999999996, 0.34586666666666666, 0.31599999999999995, 0.2944, 0.2658666666666667, 0.2578666666666667, 0.23440000000000005, 0.24480000000000002, 0.22306666666666664, 0.2288, 0.2189333333333333, 0.22440000000000004, 0.21106666666666662, 0.2114666666666667, 0.21040000000000003, 0.21306666666666663, 0.2054666666666667, 0.19653333333333334, 0.20613333333333328, 0.1989333333333333, 0.19053333333333333, 0.19666666666666666, 0.1817333333333333, 0.18813333333333337, 0.18279999999999996, 0.18879999999999997, 0.18146666666666667, 0.1824, 0.17093333333333338, 0.17613333333333336, 0.18400000000000005, 0.18493333333333328, 0.17826666666666668, 0.17853333333333332, 0.16679999999999995, 0.1644, 0.17279999999999995, 0.1757333333333333, 0.16986666666666672, 0.1665333333333333, 0.17493333333333339, 0.16893333333333338, 0.1718666666666666, 0.1777333333333333, 0.15946666666666665, 0.15746666666666664, 0.16533333333333333, 0.16346666666666665, 0.16173333333333328, 0.1612, 0.1804, 0.16359999999999997, 0.16386666666666672, 0.15946666666666665, 0.16493333333333338, 0.15280000000000005, 0.1769333333333334, 0.1612, 0.16679999999999995, 0.15400000000000003, 0.14959999999999996, 0.15493333333333337, 0.15000000000000002, 0.1598666666666667, 0.15093333333333336, 0.1572, 0.15226666666666666, 0.15639999999999998, 0.15039999999999998, 0.15439999999999998, 0.14880000000000004, 0.14639999999999997, 0.1465333333333333, 0.14893333333333336, 0.1492, 0.15333333333333332, 0.14573333333333338, 0.15306666666666668, 0.14773333333333338, 0.1413333333333333, 0.1517333333333334, 0.16000000000000003, 0.15533333333333332, 0.1413333333333333, 0.14600000000000002, 0.1485333333333333, 0.14959999999999996, 0.1412, 0.14706666666666668, 0.1445333333333333, 0.14293333333333336, 0.14973333333333338, 0.15013333333333334, 0.15093333333333336, 0.14413333333333334, 0.14226666666666665, 0.14173333333333338, 0.13959999999999995, 0.138, 0.14026666666666665, 0.13706666666666667, 0.1405333333333333, 0.14173333333333338, 0.14, 0.14026666666666665, 0.13866666666666672, 0.14800000000000002, 0.13906666666666667, 0.15159999999999996, 0.14200000000000002, 0.14226666666666665, 0.14626666666666666, 0.1398666666666667, 0.14266666666666672, 0.14439999999999997, 0.13893333333333335, 0.13693333333333335, 0.1392, 0.14146666666666663, 0.14213333333333333, 0.136, 0.14093333333333335, 0.14813333333333334, 0.14173333333333338, 0.13880000000000003, 0.1333333333333333, 0.138, 0.1418666666666667, 0.13773333333333337, 0.13839999999999997, 0.13653333333333328, 0.13453333333333328, 0.1358666666666667, 0.13706666666666667, 0.1373333333333333, 0.13973333333333338, 0.1405333333333333, 0.14013333333333333, 0.1358666666666667, 0.14293333333333336, 0.13759999999999994, 0.13613333333333333, 0.14013333333333333, 0.13293333333333335, 0.13680000000000003, 0.13959999999999995, 0.13773333333333337, 0.13613333333333333, 0.13653333333333328, 0.13293333333333335, 0.14080000000000004, 0.13906666666666667, 0.13453333333333328, 0.13626666666666665, 0.13759999999999994, 0.13560000000000005, 0.13839999999999997, 0.13613333333333333, 0.1346666666666667, 0.13053333333333328, 0.13319999999999999, 0.136, 0.13653333333333328, 0.1378666666666667, 0.13573333333333337, 0.13613333333333333, 0.13626666666666665, 0.13306666666666667, 0.13173333333333337, 0.13306666666666667, 0.13893333333333335, 0.13480000000000003, 0.13453333333333328, 0.13173333333333337, 0.13773333333333337, 0.13306666666666667, 0.13346666666666662, 0.13239999999999996, 0.1318666666666667, 0.136, 0.1333333333333333, 0.1352, 0.13213333333333332, 0.13093333333333335, 0.13253333333333328, 0.13306666666666667, 0.1338666666666667, 0.1338666666666667, 0.13573333333333337, 0.12946666666666662, 0.13119999999999998, 0.128, 0.1372, 0.13319999999999999, 0.13146666666666662, 0.13080000000000003, 0.13253333333333328, 0.13293333333333335, 0.13560000000000005, 0.13306666666666667, 0.13306666666666667, 0.13306666666666667, 0.12960000000000005, 0.134, 0.1373333333333333, 0.13493333333333335, 0.1306666666666667, 0.13373333333333337, 0.13280000000000003, 0.13226666666666664, 0.13226666666666664, 0.13093333333333335, 0.12946666666666662, 0.1372, 0.132, 0.13146666666666662, 0.13426666666666665, 0.1353333333333333, 0.12960000000000005, 0.13093333333333335, 0.1286666666666667, 0.13306666666666667, 0.13626666666666665, 0.13093333333333335, 0.12680000000000002, 0.13213333333333332, 0.13013333333333332, 0.12426666666666664, 0.13213333333333332, 0.13013333333333332, 0.1293333333333333, 0.12560000000000004, 0.13, 0.13119999999999998, 0.1293333333333333, 0.12946666666666662, 0.1273333333333333, 0.13026666666666664, 0.13319999999999999, 0.12613333333333332, 0.12613333333333332, 0.13080000000000003, 0.13146666666666662, 0.13493333333333335, 0.1372, 0.13026666666666664, 0.13293333333333335, 0.12680000000000002, 0.1293333333333333, 0.13039999999999996, 0.1318666666666667, 0.12880000000000003, 0.1286666666666667, 0.12960000000000005, 0.1318666666666667, 0.12919999999999998, 0.12719999999999998, 0.13080000000000003, 0.1333333333333333, 0.13106666666666666, 0.12946666666666662, 0.13546666666666662, 0.13053333333333328, 0.12946666666666662, 0.13026666666666664, 0.12639999999999996, 0.13319999999999999, 0.12693333333333334, 0.1285333333333334, 0.12893333333333334, 0.12813333333333332, 0.12880000000000003, 0.12693333333333334, 0.12973333333333337, 0.12813333333333332, 0.12893333333333334, 0.1306666666666667, 0.12826666666666664], "tags": ["deepconvnets", "zoonormalized"], "hp": {"zoom_range": [1, 1], "translation_range": [-5, 5], "learning_rate_decay": 0.045665754463006664, "discrete_learning_divide": 10.0, "shear_range": [1, 1], "patience_check_each": 1, "discrete_learning_rate_epsilon": 0.0001, "patience_threshold": 1, "do_flip": true, "batch_size": 32, "valid_ratio": 0.15, "learning_rate": 0.004286087827391092, "optimization": "nesterov_momentum", "nb_data_augmentation": 2, "learning_rate_decay_method": "none", "max_epochs": 1000, "patience_nb_epochs": 50, "weight_decay": 0.0, "l2_decay": 3.5772966446672926e-08, "rotation_range": [0, 0], "momentum": 0.800295108272332}, "accuracy_valid_max": 0.8757333333333334, "code_": "from datetime import datetime\nimport matplotlib as mpl\nmpl.use('Agg')   # NOQA\nfrom lasagnekit.easy import BatchOptimizer, BatchIterator, get_batch_slice\nfrom lasagnekit.nnet.capsule import Capsule\nfrom lasagnekit.easy import iterate_minibatches\nfrom lasagne import updates\nfrom lasagnekit.updates import santa_sss\nupdates.santa_sss = santa_sss  # NOQA\nimport theano\nimport theano.tensor as T\n\nimport numpy as np\nimport json\n\nfrom skimage.io import imsave\nfrom lasagnekit.datasets.infinite_image_dataset import Transform\n\n\nclass MyBatchIterator(BatchIterator):\n\n    def __init__(self, nb_data_augmentation=1,  **transform_params):\n        super(MyBatchIterator, self).__init__()\n\n        self.nb_data_augmentation = nb_data_augmentation\n        self.transform_params = transform_params\n\n    def transform(self, batch_index, V):\n        assert self.batch_size is not None\n        assert self.nb_batches is not None\n\n        if isinstance(batch_index, T.TensorVariable):\n            batch_slice = get_batch_slice(batch_index,\n                                          self.batch_size)\n        else:\n            batch_slice = slice(batch_index * self.batch_size,\n                                (batch_index+1) * self.batch_size)\n\n        d = OrderedDict()\n        X = V[\"X\"][batch_slice]\n        y = V[\"y\"][batch_slice]\n\n        X_list = [X]\n        y_list = [y]\n        for i in range(self.nb_data_augmentation):\n            tr, _ = Transform(X.transpose(0, 2, 3, 1),\n                              np.random,\n                              **self.transform_params)\n            imsave(\"out.png\", (((tr[0] + 1) / 2.)))\n            X_transformed = tr.transpose((0, 3, 1, 2))\n            X_list.append(X_transformed)\n            y_list.append(y)\n        d[\"X\"] = np.concatenate(X_list, axis=0)\n        d[\"y\"] = np.concatenate(y_list, axis=0)\n        d[\"X\"], d[\"y\"] = shuffle(d[\"X\"], d[\"y\"])\n        return d\n\n\nif __name__ == \"__main__\":\n    from lasagnekit.datasets.cifar10 import Cifar10\n    from sklearn.utils import shuffle\n    from sklearn.cross_validation import train_test_split\n    from collections import OrderedDict\n\n    from lightexperiments.light import Light\n    from hp_toolkit.hp import (\n            Param, make_constant_param,\n            instantiate_random, instantiate_default\n    )\n    import argparse\n    import vgg  # NOQA\n    import vgg_small  # NOQA\n    import vgg_very_small  # NOQA\n    import spatially_sparse  # NOQA\n    import nin  # NOQA\n    import fully  # NOQA\n    import residual  # NOQA\n    import residualv2  # NOQA\n    import residualv3  # NOQA\n    import residualv4  # NOQA\n    import residualv5  # NOQA\n\n    parser = argparse.ArgumentParser(description='zoo')\n    parser.add_argument(\"--budget-hours\",\n                        default=np.inf,\n                        help=\"nb of maximum hours (defaut=inf)\")\n    parser.add_argument(\"--fast-test\", default=False, type=bool)\n    parser.add_argument(\"--model\", default=\"vgg\", type=str)\n    parser.add_argument(\"--default-model\", default=False, type=bool)\n\n    models = {\n        \"vgg\": vgg,\n        \"vgg_small\": vgg_small,\n        \"vgg_very_small\": vgg_very_small,\n        \"spatially_sparse\": spatially_sparse,\n        \"nin\": nin,\n        \"fully\": fully,\n        \"residual\": residual,\n        \"residualv2\": residualv2,\n        \"residualv3\": residualv3,\n        \"residualv4\": residualv4,\n        \"residualv5\": residualv5\n    }\n    args = parser.parse_args()\n    model_class = models[args.model]\n    budget_sec = args.budget_hours * 3600\n    begin = datetime.now()\n    seed = np.random.randint(0, 1000000000)\n    np.random.seed(seed)\n    fast_test = args.fast_test\n    rng = np.random\n\n    if args.default_model is True:\n        instantiate = instantiate_default\n    else:\n        instantiate = instantiate_random\n\n    light = Light()\n    light.launch()\n    light.initials()\n    light.file_snapshot()\n    light.set_seed(seed)\n    light.tag(\"deepconvnets\")\n    light.tag(\"zoonormalized\")\n\n    data = Cifar10(batch_indexes=[1, 2, 3, 4, 5])\n    data.load()\n\n    data_test = Cifar10(batch_indexes=[6])\n    data_test.load()\n\n    light.set(\"dataset\", data.__class__.__name__)\n\n    hp = dict(\n        learning_rate=Param(initial=0.001, interval=[-4, -2], type='real', scale='log10'),\n        learning_rate_decay=Param(initial=0.05, interval=[0, 0.1], type='real'),\n        learning_rate_decay_method=Param(initial='discrete', interval=['exp', 'none', 'sqrt', 'lin', 'discrete'], type='choice'),\n        momentum=Param(initial=0.9, interval=[0.5, 0.99], type='real'),\n        #weight_decay=Param(initial=0, interval=[-10, -3], type='real', scale='log10'),\n        weight_decay=make_constant_param(0.),\n        discrete_learning_rate_epsilon=make_constant_param(1e-4),#NEW TO ADD\n        discrete_learning_divide=make_constant_param(10.),\n        l2_decay=Param(initial=0, interval=[-8, -4], type='real', scale='log10'),#NEW TO ADD\n        max_epochs=make_constant_param(1000),\n        batch_size=Param(initial=32,\n                         interval=[16, 32, 64, 128],\n                         type='choice'),\n        patience_nb_epochs=make_constant_param(50),\n        valid_ratio=make_constant_param(0.15),\n\n        patience_threshold=make_constant_param(1),\n        patience_check_each=make_constant_param(1),\n\n        optimization=Param(initial='adam',\n                           interval=['adam', 'nesterov_momentum', 'rmsprop'],\n                           type='choice'),\n        # data augmentation\n        nb_data_augmentation=Param(initial=1, interval=[0, 1, 2, 3, 4], type='choice'),\n        zoom_range=make_constant_param((1, 1)),\n        rotation_range=make_constant_param((0, 0)),\n        shear_range=make_constant_param((1, 1)),\n        translation_range=make_constant_param((-5, 5)),\n        do_flip=make_constant_param(True)\n\n    )\n\n    if fast_test is True:\n        instantiate = instantiate_default\n\n    default_params = {}\n    if fast_test is True:\n        default_params[\"max_epochs\"] = 1\n    hp = instantiate(hp, default_params=default_params)\n    light.set(\"hp\", hp)\n\n    hp_model = model_class.params\n    hp_model = instantiate(hp_model)\n    light.set(\"hp_model\", hp_model)\n\n    model = model_class.build_model(\n        input_width=data.img_dim[1],\n        input_height=data.img_dim[2],\n        output_dim=data.output_dim,\n        **hp_model)\n    light.set(\"model\", model_class.__name__)\n    print(model_class.__name__)\n    print(json.dumps(hp, indent=4))\n    print(json.dumps(hp_model, indent=4))\n\n    initial_lr = hp[\"learning_rate\"]\n\n    def evaluate(X, y, batch_size=None):\n        if batch_size is None:\n            batch_size = hp[\"batch_size\"]\n        y_pred = []\n        for mini_batch in iterate_minibatches(X.shape[0],\n                                              batch_size):\n            y_pred.extend((nnet.predict(X[mini_batch]) == y[mini_batch]).tolist())\n        return np.mean(y_pred)\n\n    class MyBatchOptimizer(BatchOptimizer):\n\n        def quitter(self, update_status):\n            quit = super(MyBatchOptimizer, self).quitter(update_status)\n            if (datetime.now() - begin).total_seconds() >= budget_sec:\n                print(\"Budget finished.quit.\")\n                quit = True\n            return quit\n\n        def iter_update(self, epoch, nb_batches, iter_update_batch):\n            start = datetime.now()\n            status = super(MyBatchOptimizer, self).iter_update(epoch,\n                                                               nb_batches,\n                                                               iter_update_batch)\n            duration = (datetime.now() - start).total_seconds()\n            status[\"duration\"] = duration\n            acc = evaluate(X_train, y_train, batch_size=self.batch_size_eval)\n            status[\"accuracy_train\"] = acc\n            status[\"accuracy_train_std\"] = 0\n            acc = evaluate(X_valid, y_valid, batch_size=self.batch_size_eval)\n            status[\"accuracy_valid\"] = acc\n            status[\"accuracy_valid_std\"] = 0\n\n            status[\"error_valid\"] = 1 - status[\"accuracy_valid\"]\n\n            status = self.add_moving_avg(\"accuracy_train\", status)\n            status = self.add_moving_var(\"accuracy_train\", status)\n            status = self.add_moving_avg(\"accuracy_valid\", status)\n            status = self.add_moving_var(\"accuracy_valid\", status)\n\n            for k, v in status.items():\n                light.append(k, float(v))\n\n            lr = self.learning_rate\n            lr_decay_method = hp[\"learning_rate_decay_method\"]\n            lr_decay = hp[\"learning_rate_decay\"]\n            cur_lr = lr.get_value()\n            t = status[\"epoch\"]\n\n            if lr_decay_method == \"exp\":\n                new_lr = cur_lr * (1 - lr_decay)\n            elif lr_decay_method == \"lin\":\n                new_lr = initial_lr / (1 + t)\n            elif lr_decay_method == \"sqrt\":\n                new_lr = initial_lr / np.sqrt(1 + t)\n            elif lr_decay_method == 'discrete':\n                eps = hp[\"discrete_learning_rate_epsilon\"]\n                div = hp[\"discrete_learning_divide\"]\n                if status[\"moving_var_accuracy_valid\"] <= eps:\n                    new_lr = cur_lr / div\n                else:\n                    new_lr = cur_lr\n            else:\n                new_lr = cur_lr\n\n            new_lr = np.array(new_lr, dtype=\"float32\")\n            lr.set_value(new_lr)\n\n            light.append(\"learning_rate_per_epoch\",\n                         float(self.learning_rate.get_value()))\n            return status\n\n        def add_moving_avg(self, name, status, B=0.9):\n            if len(self.stats) >= 2:\n                old_avg = self.stats[-2][\"moving_avg_\" + name]\n            else:\n                old_avg = 0\n            avg = B * old_avg + (1 - B) * status[name]\n            status[\"moving_avg_\" + name] = avg\n            return status\n\n        def add_moving_var(self, name, status, B=0.9):\n            if len(self.stats) >= 2:\n                old_avg = self.stats[-2][\"moving_avg_\" + name]\n                old_var = self.stats[-2][\"moving_var_\" + name]\n            else:\n                old_avg = 0\n                old_var = 0\n            new_avg = B * old_avg + (1 - B) * status[name]\n            var = B * old_var + (1 - B) * (status[name] - old_avg) * (status[name] - new_avg)\n            status[\"moving_var_\" + name] = var\n            return status\n\n    learning_rate = theano.shared(np.array(hp[\"learning_rate\"],\n                                  dtype=\"float32\"))\n    momentum = hp[\"momentum\"]\n\n    optim_params = {\"learning_rate\": learning_rate}\n    if \"momentum\" in hp[\"optimization\"]:\n        optim_params[\"momentum\"] = hp[\"momentum\"]\n\n    batch_optimizer = MyBatchOptimizer(\n        verbose=1, max_nb_epochs=hp[\"max_epochs\"],\n        batch_size=hp[\"batch_size\"],\n        optimization_procedure=(getattr(updates, hp[\"optimization\"]),\n                                optim_params),\n        patience_stat=\"error_valid\",\n        patience_nb_epochs=hp[\"patience_nb_epochs\"],\n        patience_progression_rate_threshold=hp[\"patience_threshold\"],\n        patience_check_each=hp[\"patience_check_each\"],\n        verbose_stat_show=[\n            \"epoch\",\n            \"duration\",\n            \"accuracy_train\",\n            \"accuracy_train_std\",\n            \"accuracy_valid\",\n            \"accuracy_valid_std\",\n        ]\n    )\n    batch_size_eval = 1024\n    light.set(\"batch_size_eval\", batch_size_eval)\n    batch_optimizer.learning_rate = learning_rate\n    batch_optimizer.batch_size_eval = batch_size_eval\n\n    input_variables = OrderedDict()\n    input_variables[\"X\"] = dict(tensor_type=T.tensor4)\n    input_variables[\"y\"] = dict(tensor_type=T.ivector)\n    functions = dict(\n        predict=dict(\n            get_output=lambda model, X: (model.get_output(X, deterministic=True)[0]).argmax(axis=1),\n            params=[\"X\"]\n        )\n    )\n\n    def loss_function(model, tensors):\n        X = tensors[\"X\"]\n        y = tensors[\"y\"]\n        y_hat, = model.get_output(X)\n        if hp[\"weight_decay\"] > 0:\n            l1 = sum(T.abs_(param).sum() for param in model.capsule.all_params_regularizable) * hp[\"weight_decay\"]\n        else:\n            l1 = 0\n\n        if hp[\"l2_decay\"] > 0:\n            l2 = sum(T.sqr(param).sum() for param in model.capsule.all_params_regularizable) * hp[\"l2_decay\"]\n        else:\n            l2 = 0\n\n        return T.nnet.categorical_crossentropy(y_hat, y).mean() + l1 + l2\n\n    batch_iterator = MyBatchIterator(hp[\"nb_data_augmentation\"],\n                                     zoom_range=hp[\"zoom_range\"],\n                                     rotation_range=hp[\"rotation_range\"],\n                                     shear_range=hp[\"shear_range\"],\n                                     translation_range=hp[\"translation_range\"],\n                                     do_flip=hp[\"do_flip\"])\n\n    nnet = Capsule(\n        input_variables, model,\n        loss_function,\n        functions=functions,\n        batch_optimizer=batch_optimizer,\n        batch_iterator=batch_iterator,\n    )\n\n    from sklearn.preprocessing import LabelEncoder\n\n    imshape = ([data.X.shape[0]] +\n               list(data.img_dim))\n    X = data.X.reshape(imshape).astype(np.float32)\n    y = data.y\n    label_encoder = LabelEncoder()\n    y = label_encoder.fit_transform(y)\n    y = y.astype(np.int32)\n\n    X, y = shuffle(X, y)\n\n    if fast_test is True:\n        X = X[0:100]\n        y = y[0:100]\n\n    X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=hp[\"valid_ratio\"])\n\n    # rescaling to [-1, 1]\n    X_min = X_train.min(axis=(0, 2, 3))[None, :, None, None]\n    X_max = X_train.max(axis=(0, 2, 3))[None, :, None, None]\n    def preprocess(a):\n        return (a / 255.) * 2 - 1\n        # return 2 * ((a - X_min) / (X_max - X_min)) - 1\n    X_train = preprocess(X_train)\n    X_valid = preprocess(X_valid)\n\n    light.set(\"nb_examples_train\", X_train.shape[0])\n    light.set(\"nb_examples_valid\", X_valid.shape[0])\n    try:\n        nnet.fit(X=X_train, y=y_train)\n    except KeyboardInterrupt:\n        print(\"interruption...\")\n\n    imshape = ([data_test.X.shape[0]] +\n               list(data_test.img_dim))\n    X_test = data_test.X.reshape(imshape).astype(np.float32)\n    X_test = preprocess(X_test)\n    y_test = data_test.y\n    y_test = label_encoder.transform(y_test)\n    y_test = y_test.astype(np.int32)\n\n    acc = evaluate(X_test, y_test, batch_size_eval)\n    light.set(\"accuracy_test\", acc)\n    light.set(\"accuracy_test_std\", 0)\n    print(\"Test accuracy : {}+-{}\".format(acc, 0))\n\n    light.endings()  # save the duration\n\n    if fast_test is False:\n        light.store_experiment()  # update the DB\n    light.close()\n", "nb_examples_valid": 7500, "accuracy_valid_last": 0.8717333333333334, "accuracy_valid_std": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "accuracy_valid": [0.48573333333333335, 0.5746666666666667, 0.6104, 0.6468, 0.6541333333333333, 0.684, 0.7056, 0.7341333333333333, 0.7421333333333333, 0.7656, 0.7552, 0.7769333333333334, 0.7712, 0.7810666666666667, 0.7756, 0.7889333333333334, 0.7885333333333333, 0.7896, 0.7869333333333334, 0.7945333333333333, 0.8034666666666667, 0.7938666666666667, 0.8010666666666667, 0.8094666666666667, 0.8033333333333333, 0.8182666666666667, 0.8118666666666666, 0.8172, 0.8112, 0.8185333333333333, 0.8176, 0.8290666666666666, 0.8238666666666666, 0.816, 0.8150666666666667, 0.8217333333333333, 0.8214666666666667, 0.8332, 0.8356, 0.8272, 0.8242666666666667, 0.8301333333333333, 0.8334666666666667, 0.8250666666666666, 0.8310666666666666, 0.8281333333333334, 0.8222666666666667, 0.8405333333333334, 0.8425333333333334, 0.8346666666666667, 0.8365333333333334, 0.8382666666666667, 0.8388, 0.8196, 0.8364, 0.8361333333333333, 0.8405333333333334, 0.8350666666666666, 0.8472, 0.8230666666666666, 0.8388, 0.8332, 0.846, 0.8504, 0.8450666666666666, 0.85, 0.8401333333333333, 0.8490666666666666, 0.8428, 0.8477333333333333, 0.8436, 0.8496, 0.8456, 0.8512, 0.8536, 0.8534666666666667, 0.8510666666666666, 0.8508, 0.8466666666666667, 0.8542666666666666, 0.8469333333333333, 0.8522666666666666, 0.8586666666666667, 0.8482666666666666, 0.84, 0.8446666666666667, 0.8586666666666667, 0.854, 0.8514666666666667, 0.8504, 0.8588, 0.8529333333333333, 0.8554666666666667, 0.8570666666666666, 0.8502666666666666, 0.8498666666666667, 0.8490666666666666, 0.8558666666666667, 0.8577333333333333, 0.8582666666666666, 0.8604, 0.862, 0.8597333333333333, 0.8629333333333333, 0.8594666666666667, 0.8582666666666666, 0.86, 0.8597333333333333, 0.8613333333333333, 0.852, 0.8609333333333333, 0.8484, 0.858, 0.8577333333333333, 0.8537333333333333, 0.8601333333333333, 0.8573333333333333, 0.8556, 0.8610666666666666, 0.8630666666666666, 0.8608, 0.8585333333333334, 0.8578666666666667, 0.864, 0.8590666666666666, 0.8518666666666667, 0.8582666666666666, 0.8612, 0.8666666666666667, 0.862, 0.8581333333333333, 0.8622666666666666, 0.8616, 0.8634666666666667, 0.8654666666666667, 0.8641333333333333, 0.8629333333333333, 0.8626666666666667, 0.8602666666666666, 0.8594666666666667, 0.8598666666666667, 0.8641333333333333, 0.8570666666666666, 0.8624, 0.8638666666666667, 0.8598666666666667, 0.8670666666666667, 0.8632, 0.8604, 0.8622666666666666, 0.8638666666666667, 0.8634666666666667, 0.8670666666666667, 0.8592, 0.8609333333333333, 0.8654666666666667, 0.8637333333333334, 0.8624, 0.8644, 0.8616, 0.8638666666666667, 0.8653333333333333, 0.8694666666666667, 0.8668, 0.864, 0.8634666666666667, 0.8621333333333333, 0.8642666666666666, 0.8638666666666667, 0.8637333333333334, 0.8669333333333333, 0.8682666666666666, 0.8669333333333333, 0.8610666666666666, 0.8652, 0.8654666666666667, 0.8682666666666666, 0.8622666666666666, 0.8669333333333333, 0.8665333333333334, 0.8676, 0.8681333333333333, 0.864, 0.8666666666666667, 0.8648, 0.8678666666666667, 0.8690666666666667, 0.8674666666666667, 0.8669333333333333, 0.8661333333333333, 0.8661333333333333, 0.8642666666666666, 0.8705333333333334, 0.8688, 0.872, 0.8628, 0.8668, 0.8685333333333334, 0.8692, 0.8674666666666667, 0.8670666666666667, 0.8644, 0.8669333333333333, 0.8669333333333333, 0.8669333333333333, 0.8704, 0.866, 0.8626666666666667, 0.8650666666666667, 0.8693333333333333, 0.8662666666666666, 0.8672, 0.8677333333333334, 0.8677333333333334, 0.8690666666666667, 0.8705333333333334, 0.8628, 0.868, 0.8685333333333334, 0.8657333333333334, 0.8646666666666667, 0.8704, 0.8690666666666667, 0.8713333333333333, 0.8669333333333333, 0.8637333333333334, 0.8690666666666667, 0.8732, 0.8678666666666667, 0.8698666666666667, 0.8757333333333334, 0.8678666666666667, 0.8698666666666667, 0.8706666666666667, 0.8744, 0.87, 0.8688, 0.8706666666666667, 0.8705333333333334, 0.8726666666666667, 0.8697333333333334, 0.8668, 0.8738666666666667, 0.8738666666666667, 0.8692, 0.8685333333333334, 0.8650666666666667, 0.8628, 0.8697333333333334, 0.8670666666666667, 0.8732, 0.8706666666666667, 0.8696, 0.8681333333333333, 0.8712, 0.8713333333333333, 0.8704, 0.8681333333333333, 0.8708, 0.8728, 0.8692, 0.8666666666666667, 0.8689333333333333, 0.8705333333333334, 0.8645333333333334, 0.8694666666666667, 0.8705333333333334, 0.8697333333333334, 0.8736, 0.8668, 0.8730666666666667, 0.8714666666666666, 0.8710666666666667, 0.8718666666666667, 0.8712, 0.8730666666666667, 0.8702666666666666, 0.8718666666666667, 0.8710666666666667, 0.8693333333333333, 0.8717333333333334], "seed": 147034751, "model": "residualv3", "loss_std": [0.237257719039917, 0.18822330236434937, 0.1838866025209427, 0.18333132565021515, 0.18536292016506195, 0.1799384355545044, 0.18028804659843445, 0.17736004292964935, 0.1734573394060135, 0.17198626697063446, 0.16794328391551971, 0.16602155566215515, 0.16483110189437866, 0.16058741509914398, 0.15732058882713318, 0.15798477828502655, 0.15279406309127808, 0.15069246292114258, 0.1468077301979065, 0.14833661913871765, 0.14386959373950958, 0.1431444138288498, 0.13892056047916412, 0.13719996809959412, 0.13735376298427582, 0.13395172357559204, 0.13195328414440155, 0.12769177556037903, 0.12818694114685059, 0.12325341999530792, 0.12305311113595963, 0.1202075406908989, 0.12151152640581131, 0.11529525369405746, 0.11456169933080673, 0.11415382474660873, 0.1114644855260849, 0.11108272522687912, 0.10898996889591217, 0.10627241432666779, 0.1054154708981514, 0.10480484366416931, 0.10438379645347595, 0.0991048812866211, 0.09939180314540863, 0.0973747968673706, 0.09428593516349792, 0.09077354520559311, 0.09340041130781174, 0.09113263338804245, 0.08986079692840576, 0.08681727945804596, 0.08612088859081268, 0.08550293743610382, 0.08599039912223816, 0.0844072550535202, 0.08440650999546051, 0.08423050493001938, 0.0778207778930664, 0.08160176873207092, 0.08131782710552216, 0.07886766642332077, 0.07643453031778336, 0.07760374993085861, 0.07608382403850555, 0.07462558150291443, 0.07621543109416962, 0.07437486201524734, 0.07076016068458557, 0.07062658667564392, 0.07041023671627045, 0.0699145495891571, 0.07008719444274902, 0.06846986711025238, 0.06765113025903702, 0.06732708215713501, 0.06573594361543655, 0.06694423407316208, 0.06590745598077774, 0.06694038957357407, 0.06324996799230576, 0.06502979248762131, 0.0634055808186531, 0.06101143732666969, 0.06308829039335251, 0.06332187354564667, 0.06020483747124672, 0.06146003678441048, 0.05955873429775238, 0.06008666008710861, 0.058777038007974625, 0.06080407276749611, 0.05892378091812134, 0.05958673730492592, 0.055861346423625946, 0.05612650886178017, 0.055593185126781464, 0.055226732045412064, 0.05371186509728432, 0.05590429529547691, 0.05498295649886131, 0.05060751736164093, 0.05512063950300217, 0.05324922502040863, 0.052207015454769135, 0.05303272232413292, 0.05217119678854942, 0.05365033820271492, 0.0528239831328392, 0.05081826075911522, 0.05043354257941246, 0.049159936606884, 0.04873907193541527, 0.04941621050238609, 0.04792356491088867, 0.04969530925154686, 0.04954414442181587, 0.05002889782190323, 0.046980537474155426, 0.047965142875909805, 0.04699362441897392, 0.04840489849448204, 0.044962406158447266, 0.04537389799952507, 0.04667908325791359, 0.04520164430141449, 0.048771750181913376, 0.044936686754226685, 0.04330727458000183, 0.04427286982536316, 0.04421011731028557, 0.043772194534540176, 0.045445166528224945, 0.04365655034780502, 0.0407155379652977, 0.04337090998888016, 0.04255957156419754, 0.04053731635212898, 0.04203418642282486, 0.0417054146528244, 0.041444942355155945, 0.04243926703929901, 0.04088477045297623, 0.04201308265328407, 0.04144223779439926, 0.03986641764640808, 0.04120004549622536, 0.03907911106944084, 0.04147690162062645, 0.039535220712423325, 0.040648750960826874, 0.03957955166697502, 0.039773061871528625, 0.03777201846241951, 0.038258329033851624, 0.03675774484872818, 0.03709879145026207, 0.03784019127488136, 0.03630674257874489, 0.03772580623626709, 0.03565516695380211, 0.037810929119586945, 0.035064563155174255, 0.03997773304581642, 0.036444541066884995, 0.036080725491046906, 0.03361384570598602, 0.035004034638404846, 0.03646594658493996, 0.034459274262189865, 0.03417639806866646, 0.03641378879547119, 0.036512602120637894, 0.03447580710053444, 0.03460422158241272, 0.035009659826755524, 0.03444266319274902, 0.03237098827958107, 0.03266623243689537, 0.03664069622755051, 0.03372935950756073, 0.03416677936911583, 0.03225316107273102, 0.032629985362291336, 0.03420666605234146, 0.033674921840429306, 0.03185562789440155, 0.034148313105106354, 0.0323663055896759, 0.03425843268632889, 0.03303419426083565, 0.03134974092245102, 0.03281927853822708, 0.03076542727649212, 0.030714409425854683, 0.032690487802028656, 0.03063434548676014, 0.031216736882925034, 0.032504186034202576, 0.03249965235590935, 0.03213517367839813, 0.03147061914205551, 0.03008459135890007, 0.03181001916527748, 0.031033825129270554, 0.02905968949198723, 0.030290378257632256, 0.030754094943404198, 0.0296279639005661, 0.030076690018177032, 0.02816186286509037, 0.030375082045793533, 0.028849352151155472, 0.030791008844971657, 0.032453231513500214, 0.030474316328763962, 0.028838500380516052, 0.02853323705494404, 0.030303342267870903, 0.02895888313651085, 0.029205504804849625, 0.030309541150927544, 0.030209345743060112, 0.028221052139997482, 0.027347084134817123, 0.02905483916401863, 0.027368882670998573, 0.026115117594599724, 0.026543384417891502, 0.02715197019279003, 0.0281866155564785, 0.02886299230158329, 0.028775403276085854, 0.027552258223295212, 0.027028212323784828, 0.028157157823443413, 0.027702368795871735, 0.027752118185162544, 0.026729118078947067, 0.0278373584151268, 0.027846740558743477, 0.026428060606122017, 0.02783196046948433, 0.02446565218269825, 0.026686852797865868, 0.02641444280743599, 0.026922665536403656, 0.026485471054911613, 0.025648517534136772, 0.02567838691174984, 0.026342906057834625, 0.02804415114223957, 0.025234758853912354, 0.02622252330183983, 0.02357465587556362, 0.025918355211615562, 0.02417677454650402, 0.025946268811821938, 0.026791729032993317, 0.025894805788993835, 0.026783129200339317, 0.026117991656064987, 0.025720058009028435, 0.025439346209168434, 0.02526020258665085, 0.02403601072728634, 0.02571210078895092, 0.02410624548792839, 0.026563629508018494, 0.02368377335369587, 0.024580160155892372, 0.022514743730425835, 0.025236651301383972, 0.024087263271212578, 0.02449187822639942, 0.025522327050566673, 0.025128578767180443, 0.024157695472240448, 0.023521624505519867, 0.0257885605096817, 0.023055827245116234]}, "state": "available", "life": [{"dt": "Sun May 15 22:05:43 2016", "state": "available"}], "summary": "73fd3694dcf13611a83c7eef9b743bec"}